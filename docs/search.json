[
  {
    "objectID": "problem-sets/ps-4.html",
    "href": "problem-sets/ps-4.html",
    "title": "Problem Set 4",
    "section": "",
    "text": "Please come back later!",
    "crumbs": [
      "Problem Sets",
      "Problem Set 4"
    ]
  },
  {
    "objectID": "problem-sets/ps-3.html",
    "href": "problem-sets/ps-3.html",
    "title": "Problem Set 3",
    "section": "",
    "text": "Please come back later!",
    "crumbs": [
      "Problem Sets",
      "Problem Set 3"
    ]
  },
  {
    "objectID": "course-syllabus.html",
    "href": "course-syllabus.html",
    "title": "MATH 246 - Intermediate Statistics",
    "section": "",
    "text": "This class will mostly be taught using a Flipped Model. A flipped classroom is aimed at increasing your engagement and learning by having you complete some readings and/or watch videos ahead of class. After each reading and/or watching, you will complete an assignment that we will call class preparation assignment (CPA). In most cases, these CPAs will be graded for effort and completion. During the brief classroom interaction time (about 5 mins), we will mostly talk about the CPA items. More information about the CPA is provided under Assessment section of this syllabus. Here are some benefits associated with using Flipped Classroom Models: A growing body of educational research shows that flipped classrooms are better for students learning of mathematics. There are many benefits associated with flipped classrooms but here are the major ones:\n\nIndependent Learning Skills: not everything you learn in school will be applicable directly in your job or in the real world. In most cases, you need to transfer your knowledge to new contexts and that often involves new learning (often on your own). A flipped class model equips sets you up for success as an independent learner. You will learn how to learn on your own and how to learn from others. This is a critical skill in the 21st century.\nActive Learning: In a flipped classroom, you will be actively engaged in the learning process. You will be asked to think, to write, to discuss, to solve problems, to analyze, to create, to evaluate, and to apply. This is a much more effective way to learn than passively listening to a lecture.\nHigher Order Thinking: In a flipped classroom, you will be asked to do more than just remember and understand. You will be asked to apply, analyze, evaluate, and create. These are the higher order thinking skills that are critical for success in the 21st century.\nCatching up: If you miss a given class and you had completed your CPA, that means you will still have some understanding of the basic ideas. You do not miss out entirely and that means catching up is easier.\n\n\n\n\nFlipped Classroom Model",
    "crumbs": [
      "Course information",
      "Syllabus"
    ]
  },
  {
    "objectID": "course-syllabus.html#course-format-and-philosophy",
    "href": "course-syllabus.html#course-format-and-philosophy",
    "title": "MATH 246 - Intermediate Statistics",
    "section": "",
    "text": "This class will mostly be taught using a Flipped Model. A flipped classroom is aimed at increasing your engagement and learning by having you complete some readings and/or watch videos ahead of class. After each reading and/or watching, you will complete an assignment that we will call class preparation assignment (CPA). In most cases, these CPAs will be graded for effort and completion. During the brief classroom interaction time (about 5 mins), we will mostly talk about the CPA items. More information about the CPA is provided under Assessment section of this syllabus. Here are some benefits associated with using Flipped Classroom Models: A growing body of educational research shows that flipped classrooms are better for students learning of mathematics. There are many benefits associated with flipped classrooms but here are the major ones:\n\nIndependent Learning Skills: not everything you learn in school will be applicable directly in your job or in the real world. In most cases, you need to transfer your knowledge to new contexts and that often involves new learning (often on your own). A flipped class model equips sets you up for success as an independent learner. You will learn how to learn on your own and how to learn from others. This is a critical skill in the 21st century.\nActive Learning: In a flipped classroom, you will be actively engaged in the learning process. You will be asked to think, to write, to discuss, to solve problems, to analyze, to create, to evaluate, and to apply. This is a much more effective way to learn than passively listening to a lecture.\nHigher Order Thinking: In a flipped classroom, you will be asked to do more than just remember and understand. You will be asked to apply, analyze, evaluate, and create. These are the higher order thinking skills that are critical for success in the 21st century.\nCatching up: If you miss a given class and you had completed your CPA, that means you will still have some understanding of the basic ideas. You do not miss out entirely and that means catching up is easier.\n\n\n\n\nFlipped Classroom Model",
    "crumbs": [
      "Course information",
      "Syllabus"
    ]
  },
  {
    "objectID": "course-syllabus.html#course-resources",
    "href": "course-syllabus.html#course-resources",
    "title": "MATH 246 - Intermediate Statistics",
    "section": "Course Resources",
    "text": "Course Resources\n\nTextbooks\nFor most of our readings, we shall use the following open-source textbooks:\n\nIntroduction to Modern Statistics, Çetinkaya-Rundel, Hardin. OpenIntro Inc., 2nd Edition, 2023. Hard copy of the book available on Amazon.\nR for Data Science, 2e, Wickham, Çetinkaya-Rundel, Grolemund. O’Reilly, 2nd edition, 2023. Hard copy available on Amazon.\nIntermediate Statistics with R by Greenwood, Mark. The book can be found freely on this link.\n\n\n\nComputing:\n\nR: We will use R statistical environment with the RStudio interface. You’ll be using R primarily through a version of RStudio accessible on posit cloud. Once you are on this page, sign in or click on sign up to create a new account in case you don’t already have an account.\nGitHub Copilot: GitHub is a web-based platform that allows people to store, share, and manage versions of their code. For example, a team of programmers working on different parts of a certain project may use GitHub for collaboration. We shall use these features only sparingly in this course. Copilot, on the other hand, is a popular AI-powered tool used for a vast range of purposes including code generation. Copilot is a paid service but college students can access and use it for free via GitHub (GitHub Copilot). To use GitHub copilot and use it within RStudio, there are three steps involved:\n\nStep 1: Sign up for a free GitHub account at GitHub.\nStep 2: Sign up for a free GitHub Student Developer Pack account at GitHub Student Developer Pack.\nStep 3: Install the GitHub Copilot extension in RStudio. To do this,\n\nOptional: You may want to have a scientific calculator (one that has the ability to compute powers–e.g., \\((1.675)^3)\\) to use when you want to do quick calculations. You may also use online calculator tools such as desmos.",
    "crumbs": [
      "Course information",
      "Syllabus"
    ]
  },
  {
    "objectID": "course-syllabus.html#assessment",
    "href": "course-syllabus.html#assessment",
    "title": "MATH 246 - Intermediate Statistics",
    "section": "Assessment",
    "text": "Assessment\nYour learning will be assessed in a variety of ways including Attendance and Participation (AP), CPA’s, Labs, Problem Sets (PS), Projects, Exams, and a final Portfolio (takes the place of a final exam). Below are the details on these components.\n\nAttendance and Participation (AP)\nYou’re expected to attend and participate in class. Consistent attendance and participation are strong indicators of success in MAT 246. You will be responsible for all course material, announcements, quizzes, and exams made in class, whether you attended that day’s class or not. I may post the announcements and materials on Canvas and/or send them out as emails. If you anticipate needing to miss more than four class sessions, please make an appointment with me to discuss any restrictions on your availability early in the semester so we can find ways for you to participate and be successful in the course. Note that attendance and participation count for 10% of your overall grade. Your attendance & participation grade will be based on the following metrics:\n\nPunctuality to class and number of classes attended\nPreparedness for class (you will generally be considered prepared if you do the CPAs)\nLevel of engagement: Includes working collaboratively with others, sharing your thoughts during whole-class discussion, and asking questions if necessary.\nContributing to online collaboration work and discussion forums.\n\nFor a more detailed rubric on how attendance and participation will be graded, click on this link.\n\n\nClass Preparation Assignments (CPAs)\nCPAs are done prior to class. They involve completing short readings or activities and/or watching videos then answering a few questions based on the covered material. CPA’s are meant to get you prepared for the material of the week/day so that you can contribute meaningfully during class discussions. For this reason, deadlines for CPAs cannot be extended.\nNote: CPAs will generally be graded for completion and effort. From time to time, there will be one question on the CPA that will be graded for accuracy. This question is meant to gauge the extent to which you understood the material on your own and answers may be discussed in class.\n\n\nProblem sets (PSs)\nProblem sets will be assigned after every three to four weeks or after completion of a major topic. Unlike the CPAs, the problem sets will be more open-ended, non-routine, and with a heavy emphasis on real life applications of the material learned. You are encouraged to consult with your classmates on the problems but write your own solutions. You may also come in for Student hours for further help if you need it. Do not wait until the deadline day to start your problem set.\n\n\nLabs\nIn labs, you will apply what you’ve learned in during class to complete data analysis tasks. You may discuss lab assignments with other students; however, lab should be completed and submitted individually. Lab assignments must be typed up using Quarto, all work must be rendered to pdf format and must be submitted on Canvas by the deadline.\nLabs are due at 8 am ET on the indicated due date (generally the Tuesday after the lab).\nThe lowest lab grade will be dropped at the end of the semester.\n\n\nQuizzes\nThere will be a short quiz in class almost every week (Fridays). The quiz will be based mainly on material learned in the CPA and/or discussed in class for the current or previous week. To do well in these quizzes, you should complete your CPAs accurately, and attend class. If there are concepts you have questions about, be sure to ask. All Quizzes will be closed book and closed notes.\n\n\nProjects\nThere will be two group projects for this class. For every project, a short proposal will be due roughly a week after the project is assigned. Your group will have 10-15 minutes to present your work in class and then submit the project report a day after presentation. Detailed information about the project, including a grading rubric, will be provided.\n\n\nMidterm Exams\nThere will be two mid-term exams during the semester. Each midterm exam will have an in class component and a take-home component.\n\nIn-class component: The in-class component will be closed-book and closed notes but calculators will be allowed (not on devices like cellphones and computers). You will be allowed to bring a 2-sided A4 size cheatsheet paper for the in-person component. These will be submitted alongside the exam.\nThe take-home component May require use of RStudio and will be availed in quarto (qmd) format. You will need to type in your answers into the quarto document and perform the analyses accordingly. You should submit a pdf format but if you face errors rendering due to errors in your code, you may submit the .qmd file.\n\nThe exams will focus on both conceptual understanding of the content and application through analysis and computational tasks. The content of the exam will be related to the content in CPAs, problem sets, quizzes, among others.\n\n\nFinal Portfolio\nThe final portfolio will consist of the following:\n\nRevised work (if necessary) on both mid-term exams. Again, you should point out the errors on every problem and explain how the revisions address the errors.\nRevised work (if necessary) on 2 problem sets with the lowest grades. Again, you need to have reflective statements on each problem.\nA reflective essay on your main takeaways from the course and how you may implement that knowledge in your field or other real-life situations.\n\nThe final portfolio will be due on the day at time of your final exam for this course.\n\n\nGrading Policy\nYour final letter grade in the course will be weighted by category as follows:\n\n\n\nCategory\nPercentage\n\n\n\n\nAttendance and Participation\n\\(\\ge\\) 93\n\n\nClass Preparation Assignments\n90 - 92.99\n\n\nProblem Sets\n87 - 89.99\n\n\nLabs\n83 - 86.99\n\n\nQuizzes\n80 - 82.99\n\n\nMidterm Exams\n77 - 79.99\n\n\nProjects\n73 - 76.99\n\n\nFinal Portfolio\n70 - 72.99\n\n\n\nThe final letter grade will be determined based on the following thresholds:\n\n\n\nLetter Grade\nFinal Course Grade\n\n\n\n\nA\n\\(\\ge\\) 93\n\n\nA-\n90 - 92.99\n\n\nB+\n87 - 89.99\n\n\nB\n83 - 86.99\n\n\nB-\n80 - 82.99\n\n\nC+\n77 - 79.99\n\n\nC\n73 - 76.99\n\n\nC-\n70 - 72.99\n\n\nD+\n67 - 69.99\n\n\nD\n63 - 66.99\n\n\nD-\n60 - 62.99\n\n\nF\n\\(&lt;\\) 60",
    "crumbs": [
      "Course information",
      "Syllabus"
    ]
  },
  {
    "objectID": "course-syllabus.html#support",
    "href": "course-syllabus.html#support",
    "title": "MATH 246 - Intermediate Statistics",
    "section": "Support",
    "text": "Support\nThere are various resources available to help you succeed in this course. Should you feel like you are struggling too much, please don’t hesitate to reach out to me so we can discuss possible ways forward. Below are some academic support services available to you.\n\nOpen Hours\nI will be available during open hours (Mon 12.00 - 01.00 pm) to answer questions or concerns that you may have in the course. You can simply walk in during the stated time above. More times may be available but you will need to check my schedule on this link. Open hours may be held in-person or virtually depending on circumstances of the day. Below are the zoom link and passcode for virtual meetings:\nZoom Link: click here\nPasscode: 850 424\n\n\nMath Tutoring Sessions\nThe mathematics department is committed to the success of all students enrolled in mathematics courses. Free one-on-one support for your mathematics coursework is available during select daytime and evening hours Monday-Friday at the Mathematics Room (Williams Hall 209). The Mathematics Room is staffed by mathematics faculty and vetted students. Student tutors offer support to fellow students in courses numbered 200 and below while math faculty offer support in any of the math courses. For more information and the schedule, please visit the Math Support Center.\n\n\nTutoring and Academic Enrichment Services\nAs a supplement to faculty advising and office hours, Tutoring and Academic Enrichment Services offers exceptional peer resources free of charge. Learning Coaches provide content-specific peer tutoring in a variety of courses. Peer Success Coaches mentor students who wish to develop collegiate-level academic and social engagement skills. To access these courses and for more information, please visit the Center for Student Success.\n\n\nWriting Center\nThe Writing Center aims to help students from all disciplines, backgrounds, and experiences to develop greater independence as writers. We are committed to helping students see writing as central to critical and creative thinking. The physical location in Smiddy 107 will not be open to clients. For more information and scheduling appointments please visit the writing center website.",
    "crumbs": [
      "Course information",
      "Syllabus"
    ]
  },
  {
    "objectID": "course-syllabus.html#tips-for-success",
    "href": "course-syllabus.html#tips-for-success",
    "title": "MATH 246 - Intermediate Statistics",
    "section": "Tips for Success",
    "text": "Tips for Success\nHere are a few basic suggestions for how to succeed in this course:\n\nKeep up with Homework\nIt is absolutely essential that you understand how to solve the assigned homework problems/exercises and, more importantly, how and why the skills and techniques presented in the course are used in solving the problems/exercises. I suggest that you begin working on the how as soon as possible. Do not pile your haw or work near the deadline. The advantage of getting the homework done on time is that you will get timely feedback that will help you understand the material better and hence do well in other assessment categories such as exams.\n\n\nAttend Class\nAs noted earlier, attendance is a critical part of your success in this course. You should try to attend every class because it is during class time that we will delve deeper into the course material and practice with applications.\n\n\nStay Caught Up\nMost concepts in this course build on each other cumulatively and you need to stay on top of the material at every stage. If you are having difficulty, don’t expect that the problem will take care of itself and disappear later. Contact me immediately and discuss the problem.\n\n\nCollaborate with Peers\nMany students benefit from sharing their work with others or by having their work questioned by their peers. You should attempt homework problems ahead of time by yourself and then note down any difficulties/questions that you can discuss with your peers. Even if you have no difficulties, you may still learn different and perhaps more efficient ways of solving the same problem during collaborative work. Below are some of the ways through which you can do this: - Canvas Discussion Forums & One Note Collaboration Space - You can post questions and answer others’ questions here. I encourage you to scan hand-written work (if necessary) and upload it alongside your question so people can see how you are thinking.\n\nZoom sessions – If you cannot meet in person, you can initiate Zoom sessions for collaborating. Zoom whiteboards are available to write on or you may simply have discussions. You can record these for later playback. If you want to invite me to your Zoom session, please send me an email with the link ahead of time and I will let you know if I am available to join.",
    "crumbs": [
      "Course information",
      "Syllabus"
    ]
  },
  {
    "objectID": "course-syllabus.html#college-wide-policies",
    "href": "course-syllabus.html#college-wide-policies",
    "title": "MATH 246 - Intermediate Statistics",
    "section": "College-wide Policies",
    "text": "College-wide Policies\n\nStudent Accessibility Services\nIn compliance with Section 504 of the Rehabilitation Act of 1973 and the Americans with Disabilities Act, reasonable accommodation will be provided to students with documented disabilities on a case-by-case basis. Students must register with Student Accessibility Services (https://www.ithaca.edu/student-accessibility-services) and provide appropriate documentation to Ithaca College before any academic adjustment will be provided.\n\n\nMental Health statement\nDiminished mental health, including significant stress, mood changes, excessive worry, or problems with eating and/or sleeping can interfere with optimal academic performance. The source of symptoms might be related to your course work; if so, please speak with me. However, problems with relationships, family worries, loss, or a personal struggle or crisis can also contribute to decreased academic performance. Ithaca College provides no-additional-cost mental health services through the Center for Counseling and Psychological Services (CAPS) to help you man- age personal challenges that threaten your personal or academic well-being. In the event that I suspect you need additional support, expect that I will express to you my concerns and the rea- sons for them. It is not my intent to know the details of what might be troubling you, but simply to let you know I am concerned and that help (e.g., CAPS, ICare, Health Center, Chaplains, etc…), if needed, is available. Remember, getting help is a smart and courageous thing to do.\n\n\nAcademic Integrity\nThe College is an academic community, which values academic integrity and takes seriously its responsibility for upholding academic honesty. All members of the academic community have an obligation to uphold high intellectual and ethical standards. All forms of dishonesty including cheating and plagiarism are unacceptable. Failure to appropriately cite material used in a paper is plagiarism. The minimum penalty for cheating or plagiarism is a zero for the test or paper in question. Referral to college judiciaries is also possible. For more information on academic integrity and academic dishonesty, please refer to the Student Handbook, the College Catalog and the Code of Student Conduct and Related Policies or ask your instructor.\n\n\nTitle IX\nAt Ithaca College, we believe that every individual has the right to be treated with respect and dignity and we support the creation and maintenance of a safe and positive living and learning environment. Students who experience sexual violence (including dating violence, stalking and sexual assault), sexual harassment, or discrimination based on gender or sexual identity) are encouraged to report their experience to the Title IX Coordinator, lkoenig@ithaca.edu to explore formal and informal reporting options, and explore the support and resources available. The Title IX Coordinator will work with you to determine the best way to proceed and enhance the safety of our community. For more information go to: https://www.ithaca.edu/share.\nInformation shared in class assignments, class discussions, and at public events do not constitute an official disclosure, and faculty and staff do not have to report these to the Title IX Coordinator. Faculty and staff should be sure that access to campus and community resources related to sexual misconduct are available to students in the case these subjects do arise. Any other disclosure to faculty and staff can be reported to the Title IX Coordinator.\n\n\nAcademic Advising Center\nAs a complement to a student’s faculty advisor(s), the professional academic advisors in the AAC are available to help students discuss the outcomes of academic decisions, explore academic choices, and to examine the consequences of changing a major or adding a minor. Students(first year through senior) from any major can make an appointment by calling 607-274-1001 or emailing advisingcenter@ithaca.edu.\n\n\nDiversity and Inclusion\nIthaca College values diversity because it enriches our community and the myriad experiences that characterize an Ithaca College education. Diversity encompasses multiple dimensions, including but not limited to race, culture, nationality, ethnicity, religion, ideas, beliefs, geographic origin, class, sexual orientation, gender, gender identity and expression, disability, and age. We are dedicated to addressing current and past injustices and promoting excellence and equity. Ithaca College continually strives to build an inclusive and welcoming community of individuals with diverse talents and skills from a multitude of backgrounds who are committed to civility, mutual respect, social justice, and the free and open exchange of ideas. We commit ourselves to change, growth, and actions that embrace diversity as an integral part of the educational experience and of the community we create.Please learn more about Ithaca College’s commitment to diversity, equity and inclusion: https://www.ithaca.edu/diversity-and-inclusion/diversity-statement.",
    "crumbs": [
      "Course information",
      "Syllabus"
    ]
  },
  {
    "objectID": "course-syllabus.html#course-policies",
    "href": "course-syllabus.html#course-policies",
    "title": "MATH 246 - Intermediate Statistics",
    "section": "Course policies",
    "text": "Course policies\n\nAcademic honesty\nThe point is very simple - you should not cheat. You should not present “someone” else’s work as your own.\nAbide by the following guidelines:\n\nCollaboration:\n\nWork that is not assigned as a collaborative assignment should not be completed collaboratively. This does not mean you should not seek support from peers. If you seek help from your peers, be sure that you write your own solutions, otherwise the work will be similar and flagged for cheating. Submitting similar work will be considered a violation of the academic integrity policy by all students involved.\nFor team assignments, you may collaborate freely within your team. Each group will submit one document contained agreed upon responses. No multiple file submissions.\n\nOn individual assignments you may not directly share work with another student in this class, and on team assignments you may not directly share work with another team in this class.\n\nOnline resources: In this century, the internet is a go to place for many things. While much of the information on the internet is useful, I expect that you will use it responsibly. The course policy is that you may use online resources (e.g., StackOverflow, Wolfram Alpha, etc.) but you must explicitly cite where you obtained any solutions you directly use (or use as inspiration).\nUse of generative artificial intelligence (AI): Generative AI tools such as ChatGPT should be treated as other online resources. There are two guiding principles that govern how you can use AI in this course:\n\nCognitive dimension: Using AI tools should make you more efficient and productive rather than hampering your ability to think clearly and critically.\nEthical dimension: Students using AI should be transparent about their use and make sure it aligns with academic integrity. You are ultimately responsible for the work you turn in; it should reflect your understanding of the course content. AI is an integral part of this course and we will practice using generative AI tools responsibly without losing sight of the learning objectives.\n✅ AI tools for code: We will use GitHub Copilot for code generation in this course. However, we will only start using this tool after you have gained a basic understanding of the coding and syntax. While coding uses highly specified formats and even minor errors can cause problems, using github copilot can be thought of as “coding in English”. You will just need to prompt the tool effectively. You should also examine the code output as much as possible. One way to do this is to look at the output (if available) and work backwards. More details on this to follow.\n\nYou may use these guidelines for citing AI-generated content.\n\n❌ AI tools for narrative: You may not use generative AI tools such as ChatGPT to write narrative on assignments. Interpretation of software output, writing up the project report, among others should be written by a human (YOU). If you want to use these tools to check your grammar, you should feel free to do so but be sure to disclose and cite it accordingly.\n\n\nIf you are unsure if the use of a particular resource complies with the academic honesty policy, please contact your instructor.\n\n\nLate work\nThe due date & time for all assignments will be posted on Canvas and/or emailed out and/or announced in class. To enable me to prepare for class meetings and give you feedback, I will not accept late work except under extreme circumstances. If you know that you won’t be able to turn in an assignment on time, reach out to me in writing (email) at least one day before the due date to discuss your options. Note that there will be no extensions on CPA’s.\n\n\nMobile devices & Other Technologies\nThis class allows use of technology devices (e.g., computers, tablets, etc.) only for purposes of the course. Such purpose involves data analysis, writing reports, completing OneNote collaborative activities, among others. However, there will be moments (e.g., brief interactive discussion, completing paper activities,) when I require that students put away (or turn off) their technology devices. Use of these devices for purposes other than the one for the course is prohibited. Research on this matter shows that it distracts you as well as other students in class. Two violations per week will result in a 0 score on the next attendance and participation grade. Persistent violation may necessitate further action to prevent you from distracting other students.\n\n\nGroups\nThis class will mostly run through small group work. You will be randomly assigned to a group at the start of the semester. About midway into the semester, I will switch people around based partly on my professional judgement. I will allow you to suggest members you would like to work with but there are no guarantees that you will get grouped with all members of your choice. I generally seek to have mixed ability groups and to ensure that everyone has a chance to work with different people.\n\n\n\n\n\n\nClick here for syllabus bounty!\n\n\n\n\n\nIf you’ve read this far in the syllabus, please email me a picture of your favorite scene in Ithaca or its environs if you have one. If not, just describe the place. I will include you on my special list of most serious students.",
    "crumbs": [
      "Course information",
      "Syllabus"
    ]
  },
  {
    "objectID": "course-syllabus.html#important-dates",
    "href": "course-syllabus.html#important-dates",
    "title": "MATH 246 - Intermediate Statistics",
    "section": "Important dates",
    "text": "Important dates\n\nAug 26: Classes begin, Request S/D/F Option\nSep 01: Last day to Drop/add a course\nSep 02: No classes (Labor Day)\nSep 13: Last day to request S/D/F Option\nSep 27: Last Day to Withdraw with “W”, Revoke S/D/F Option\nOct 08: Project 1 Presentations\nOct 09: Exam 1 (in-class)\nOct 10: Exam 1 take-home due\nOct 13: Midterm grades available online\nOct 17-18: Fall break - No classes\nNov 01: Last Day to Withdraw with “W”\nNov 15: Exam 2 (in-class)\nNov 16: Exam 2 take-home due\nNov 23-Dec 1: Thanksgiving Break - No classes\nNov 27-29: Project 2 presentations\nDec 11: Last day of classes\nDec 11: Final portfolio due\n\nAssignment deadlines are listed on the course schedule and in Canvas. Class ends on April 24, there is no final exam.\nFor more important dates, see the full Ithaca College Calendar.",
    "crumbs": [
      "Course information",
      "Syllabus"
    ]
  },
  {
    "objectID": "course-faq.html",
    "href": "course-faq.html",
    "title": "FAQ",
    "section": "",
    "text": "If you have an iPhone, you can use the Notes app to scan a document to a PDF. To do this, follow the following steps:\n\nOpen the Notes app\nCreate a new note and name it.\nTap the camera icon and select “Scan Documents”. I suggest you use the manual capture option as this allows you to capture only once the camera is in focus.\nPosition your phone over the document and tap the shutter button. Make sure the camera is directly over the document and is in focus.\nContinue to the next page if there are multiple pages.\nTap “Save” when you are finished scanning all the pages.\n\nIf you have an Android device, you can use the Google Drive app to scan a document to a PDF. To do this, follow the following steps:\n\nOpen the Google Drive app\nTap the “+” icon in the bottom right corner\nTap “Scan”\nPosition your phone over the document and tap the shutter button. Make sure the camera is directly over the document and is in focus.\nContinue to the next page if there are multiple pages.\nTap the checkmark when you are finished scanning all the pages.",
    "crumbs": [
      "Course information",
      "FAQ"
    ]
  },
  {
    "objectID": "course-faq.html#how-do-i-use-my-mobile-device-to-scan-a-document-to-a-pdf",
    "href": "course-faq.html#how-do-i-use-my-mobile-device-to-scan-a-document-to-a-pdf",
    "title": "FAQ",
    "section": "",
    "text": "If you have an iPhone, you can use the Notes app to scan a document to a PDF. To do this, follow the following steps:\n\nOpen the Notes app\nCreate a new note and name it.\nTap the camera icon and select “Scan Documents”. I suggest you use the manual capture option as this allows you to capture only once the camera is in focus.\nPosition your phone over the document and tap the shutter button. Make sure the camera is directly over the document and is in focus.\nContinue to the next page if there are multiple pages.\nTap “Save” when you are finished scanning all the pages.\n\nIf you have an Android device, you can use the Google Drive app to scan a document to a PDF. To do this, follow the following steps:\n\nOpen the Google Drive app\nTap the “+” icon in the bottom right corner\nTap “Scan”\nPosition your phone over the document and tap the shutter button. Make sure the camera is directly over the document and is in focus.\nContinue to the next page if there are multiple pages.\nTap the checkmark when you are finished scanning all the pages.",
    "crumbs": [
      "Course information",
      "FAQ"
    ]
  },
  {
    "objectID": "course-faq.html#how-do-i-export-my-assignment-pdf-from-rstudio-to-upload-to-canvas",
    "href": "course-faq.html#how-do-i-export-my-assignment-pdf-from-rstudio-to-upload-to-canvas",
    "title": "FAQ",
    "section": "How do I export my assignment PDF from RStudio to upload to Canvas?",
    "text": "How do I export my assignment PDF from RStudio to upload to Canvas?\nGo to your Files tab, check the box next to the file you want to download, then click on the blue gear icon on the Files tab to reveal the drop down menu, and select Export… If you have selected multiple files to export, RStudio will zip them up into a single zip file for you. If you’ve selected just a single file, it will only download that. The downloaded file will go to wherever files you download off the internet goes on your computer (usually your Downloads folder).",
    "crumbs": [
      "Course information",
      "FAQ"
    ]
  },
  {
    "objectID": "course-faq.html#how-can-i-submit-my-assignment-to-canvas",
    "href": "course-faq.html#how-can-i-submit-my-assignment-to-canvas",
    "title": "FAQ",
    "section": "How can I submit my assignment to Canvas?",
    "text": "How can I submit my assignment to Canvas?\nThe instructions for submitting your assignment to Canvas can be found here. Please preview your submission to make sure it is the correct file before submitting.",
    "crumbs": [
      "Course information",
      "FAQ"
    ]
  },
  {
    "objectID": "course-faq.html#can-i-use-a-local-install-of-r-and-rstudio-instead-of-using-the-rstudio-containers",
    "href": "course-faq.html#can-i-use-a-local-install-of-r-and-rstudio-instead-of-using-the-rstudio-containers",
    "title": "FAQ",
    "section": "Can I use a local install of R and RStudio instead of using the RStudio containers?",
    "text": "Can I use a local install of R and RStudio instead of using the RStudio containers?\nThe short answer is, I’d rather you didn’t, to save yourself some headache. But, the long answer is, sure! But you will need to install a specific versions of R and RStudio for everything to work as expected. You will also need to install the R packages we’re using as well as have Git installed on your computer. These are not extremely challenging things to get right, but they are not trivial either, particularly on certain operating systems. Myself and the TAs are always happy to provide help with any computational questions when you’re working in the containers we have provided for you. If you’re working on your local setup, we can’t guarantee being able to resolve your issues, though we’re happy to try.\nIf you want to take this path, here is what you need to do:\n\nDownload and install R: https://cran.r-project.org/\nDownload and install RStudio: https://posit.co/download/rstudio-desktop/\nInstall Quarto: https://quarto.org/docs/download/prerelease.html\nInstall Git: https://happygitwithr.com/install-git.html\nInstall any necessary packages with install.packages(\"xxx\"), where xxx is the name of the package.\n\nAnd I’d like to reiterate again that successful installation of these software is not a learning goal of this course. So if any of this seems tedious or intimidating in any way, just use the online computing environment.",
    "crumbs": [
      "Course information",
      "FAQ"
    ]
  },
  {
    "objectID": "project/tips-resources.html",
    "href": "project/tips-resources.html",
    "title": "Project tips + resources",
    "section": "",
    "text": "The project is very open ended. For instance, in creating a compelling visualization(s) of your data in R, there is no limit on what tools or packages you may use. You do not need to visualize all of the data at once. A single high quality visualization will receive a much higher grade than a large number of poor quality visualizations.\nBefore you finalize your write up, make sure the printing of code chunks is turned off with the option echo: false. In addition to code chunks, ensure all messages are turned off with the options warning: false and message: false.\nFinally, pay attention to details in your write-up and presentation. Neatness, coherency, and clarity will count."
  },
  {
    "objectID": "project/tips-resources.html#suppress-code-and-warnings",
    "href": "project/tips-resources.html#suppress-code-and-warnings",
    "title": "Project tips + resources",
    "section": "Suppress code and warnings",
    "text": "Suppress code and warnings\n\nInclude the following in the YAML of your report.qmd to suppress all code, warnings, and other messages.\n\nexecute:\n  echo: false\n  warning: false"
  },
  {
    "objectID": "project/tips-resources.html#headers",
    "href": "project/tips-resources.html#headers",
    "title": "Project tips + resources",
    "section": "Headers",
    "text": "Headers\nUse headers to clearly label each section. Make sure there is a space between the previous line and the header. Use appropriate header levels."
  },
  {
    "objectID": "project/tips-resources.html#references",
    "href": "project/tips-resources.html#references",
    "title": "Project tips + resources",
    "section": "References",
    "text": "References\nInclude all references in a section called “References” at the end of the report. This course does not have specific requirements for formatting citations and references. Optional: Use Quarto’s citation support for generating your reference. See Citations & Footnotes on the Quarto documentation for more on that."
  },
  {
    "objectID": "project/tips-resources.html#appendix",
    "href": "project/tips-resources.html#appendix",
    "title": "Project tips + resources",
    "section": "Appendix",
    "text": "Appendix\nIf you have additional work that does not fit or does not belong in the body of the report, you may put it at the end of the document in section called “Appendix”. The items in the appendix should be properly labeled. The appendix should only be for additional material. The reader should be able to fully understand your report without viewing content in the appendix. We will not grade your appendix."
  },
  {
    "objectID": "project/tips-resources.html#resize-figures",
    "href": "project/tips-resources.html#resize-figures",
    "title": "Project tips + resources",
    "section": "Resize figures",
    "text": "Resize figures\nResize plots and figures, so you have more space for the narrative. Resize individual figures: Set fig-width and fig-height in chunk options, e.g.,\n#| echo: fenced\n#| label: plot1\n#| fig-height: 3\n#| fig-width: 5\nreplacing plot1 with a meaningful label and the height and width with values appropriate for your write up.\nResize all figures: Include the fig-height and fig-width options in the YAML header as shown below:\nexecute:\n  fig-height: 3\n  fig-width: 5\nReplace the height and width values with values appropriate for your write up."
  },
  {
    "objectID": "project/tips-resources.html#arranging-plots",
    "href": "project/tips-resources.html#arranging-plots",
    "title": "Project tips + resources",
    "section": "Arranging plots",
    "text": "Arranging plots\nArrange plots in a grid, instead of one after the other. This is especially useful when displaying plots for exploratory data analysis and to check assumptions.\nIf you’re using ggplot2 functions, the patchwork package makes it easy to arrange plots in a grid.\nMore to be added soon…"
  },
  {
    "objectID": "project/first_project.html",
    "href": "project/first_project.html",
    "title": "First Project",
    "section": "",
    "text": "The goal of this project is for you to demonstrate proficiency in the material we have covered in this class (and beyond, if you like) and apply them to a ‘novel’ dataset of your choosing in a meaningful way. You are not asked to do an exhaustive data analysis by generating every statistic/visualizations that we have learned of in the course. Rather, I expect you to demonstrate skills in asking meaningful questions and answering them using carefully selected data analysis techniques and tools. These analyses must be done in R in a reproducible manner (quarto).\nMultiple data frames are available but your group will choose just one to use for this project. After choosing the data frame, your will need to brainstorm on several issues about the data such as the sample and sampling methods that might have been used to gather the data, a possible target population, variables and their types (numerical vs categorical), among others. Your team will then come up with a research topic/goal and two research questions (directly related to the topic) that you will answer by conducting the analyses. Your analyses should include data visualizations, numerical statistics, and regression models. All these must be appropriately linked to help tell a coherent story.",
    "crumbs": [
      "Projects",
      "Project 1"
    ]
  },
  {
    "objectID": "project/first_project.html#project-proposal",
    "href": "project/first_project.html#project-proposal",
    "title": "First Project",
    "section": "Milestone 1 - Proposal",
    "text": "Milestone 1 - Proposal\nThere are two main purposes of the project proposal:\n\nTo help you think about the project early, so you can get a head start on finding data, reading relevant literature, thinking about the questions you wish to answer, etc.\nTo ensure that the data you wish to analyze, methods you plan to use, and the scope of your analysis are feasible and will allow you to be successful for this project.\n\nThe project proposal will be due roughly one week after the project is assigned. It must contain the following details:\n\nTeam members and their roles: List the names of all team members and their roles in the project. Roles can include Data cleaning/wrangling, Data analysis (performing the analyses in RStudio), Writing (e.g., abstract, intro, literature review, findings, conclusion), Proof reading and typo fixing, Team leader (e.g., setting up meetings, follow up, communicate with professor), etc.\nResearch topic and Questions: As indicated earlier, this is a short statement that describes the general area of interest that your research questions will be addressing. You should have at least two research questions that you will answer by conducting the analyses.\nData: Describe the data you will be using. This should include the source of the data, the number of observations and variables, and a brief description of the variables and their types (e.g., numerical, categorical). You should also include a brief description of the data collection process. Note that the data collection process may not be available for all data sets. In this case, you are allowed to speculate (reasonably) on the data collection process and be sure to mention that in your proposal.\nAnalysis plan: Describe the analyses you plan to conduct. This should include the types of visualizations you plan to create, the numerical summaries you plan to calculate, and the regression models you plan to fit. You should also describe how you plan to link these analyses together to tell a coherent story.\n\nInstructions and grading criteria for this milestone are outlined in the grading rubric for Milestone 1.",
    "crumbs": [
      "Projects",
      "Project 1"
    ]
  },
  {
    "objectID": "project/first_project.html#milestone-2---first-draft",
    "href": "project/first_project.html#milestone-2---first-draft",
    "title": "First Project",
    "section": "Milestone 2 - First Draft",
    "text": "Milestone 2 - First Draft\nYour project draft is a completed project, that we shall use to obtain feedback from the professor and peers in class. The draft should include the following sections:\n\nAbstract: This section should provide a brief overview of the research topic, questions, data, and analyses you are conducting. It should also provide a brief overview of the results you have obtained. Think of the abstract as an executive summary of your work that someone can read and understand without reading the rest of the report. You should write the abstract last, after you have completed the rest of the report.\nIntroduction: This section should introduce the research topic and questions you are addressing. It should also provide a brief overview of the data you are using and the analyses you plan to conduct. Cite a few sources that are relevant to your research topic.\nLiterature Review: This section should provide a brief overview of the literature related to your research topic. You should cite at least 5 sources and synthesize their methods and findings in relation to your own research. Guidelines for writing an effective literature review can be found here.\nMethods: This section should describe the data you are using and the analyses you plan to conduct. It should include the following subsections:\n\nData Description: This section should describe the data you are using. This should include the source of the data, the number of observations and variables, and a brief description of the variables and their types (e.g., numerical, categorical). You should also include a brief description of the data collection process. Note that the data collection process may not be available for all data sets. In this case, you are allowed to speculate (reasonably) on the data collection process and be sure to mention that in your proposal.\nResearch Questions and Analyses: This section should list the research questions you are addressing. You should also describe the variables of interest in your data set that will help you answer these questions. Discuus the methids you plan to use for each question and why you think they are appropriate.\nData Cleaning: This section should describe the steps you took to clean the data. This may include removing missing values, transforming variables, etc. Depending on your data set, you may not need to do much data cleaning. If this is the case, you should still describe the steps you took to clean the data, even if they are minimal.\n\nData Analysis and Results: This is one of the most important heavily weighted parts of your project. The analyses should be sound and justified appropriately (under methods). Here, you just need to implement the analyses described under the methodology section of your paper. Your analyses should demonstrate a thorough understanding of statistical concepts learned in this course (and beyond, if you like). Your data analyses must include both numerical statistics and data visualizations. You must also use regression modelling (linear or logistic) techniques as part of your analyses. Interpretations of visualizations created as well as the models created must be made in a coherent manner and in the context of the research questions. These are the results/findings of your project.\nConclusion: This section should summarize the research questions you addressed, the data you used, the analyses you conducted, and the results you obtained. Findings of your study must be tied back to those reported in the literature review; for example, do your findings concur with previous studies or do they contradict them? It should also discuss the implications of your results and suggest directions for future research. Be sure to state any limitations of your study and what would be done differently if you were to do the study again.\nReferences: This section should list all the sources you cited in your report. Use APA format for your references.\n\nInstructions and grading criteria for this milestone are outlined in Milestone 2: Proposal.",
    "crumbs": [
      "Projects",
      "Project 1"
    ]
  },
  {
    "objectID": "project/first_project.html#peer-review",
    "href": "project/first_project.html#peer-review",
    "title": "First Project",
    "section": "Milestone 3 - Peer review",
    "text": "Milestone 3 - Peer review\nCritically reviewing others’ work is a crucial part of the scientific process, and MATH 246 is no exception. Your team will be assigned at least one project from another team to review. Team members should read individually before meeting during which the team will come up with collective feedback for the other team. The peer review process will be double blinded, meaning that you will not know who is reviewing your project, and you will not know whose project you are reviewing. This feedback is intended to help you create a high quality final project, as well as give you experience reading and constructively critiquing the work of others.\nInstructions and grading criteria for this milestone are outlined in Milestone 3: Peer review.",
    "crumbs": [
      "Projects",
      "Project 1"
    ]
  },
  {
    "objectID": "project/first_project.html#milestone-4---final-writeup",
    "href": "project/first_project.html#milestone-4---final-writeup",
    "title": "First Project",
    "section": "Milestone 4 - Final Writeup",
    "text": "Milestone 4 - Final Writeup\nThe final write-up is the culmination of your project. It should include all the sections of the first draft, but with revisions based on the feedback you received from your peers and the professor. The final write-up should be a polished document that clearly communicates your research topic, questions, data, analyses, and results. The final write-up should be written in a clear, concise, and professional manner. It should be free of grammatical errors and typos. The final write-up should also include a title page with the title of your project, the names of all team members, and the date. A quarto template for the final write-up will be provided.\nInstructions and grading criteria for this milestone are outlined in Milestone 4: Writeup + presentation.",
    "crumbs": [
      "Projects",
      "Project 1"
    ]
  },
  {
    "objectID": "project/first_project.html#milestone-5---presentation",
    "href": "project/first_project.html#milestone-5---presentation",
    "title": "First Project",
    "section": "Milestone 5 - Presentation",
    "text": "Milestone 5 - Presentation\nThe final milestone is a presentation of your project. The presentation should be about 10 minutes long and should include slides that summarize the key points and findings of your project. The presentation should be clear, concise, and professional. The presentation will be graded on the clarity of the slides, the clarity of the presentation, and the ability to communicate your research topic, questions, data, analyses, and results to an audience. The presentation will be followed by a question and answer session with the professor and your peers.",
    "crumbs": [
      "Projects",
      "Project 1"
    ]
  },
  {
    "objectID": "project/first_project.html#overall-grading",
    "href": "project/first_project.html#overall-grading",
    "title": "First Project",
    "section": "Overall grading",
    "text": "Overall grading\nThe overall grade breakdown by milestone (\\(M_i\\)) is as follows:\n\n\n\nTotal\n100 pts\n\n\n\n\nM1: Project Proposal\n10 pts\n\n\nM2: First Draft\n20 pts\n\n\nM3: Peer Review\n10 pts\n\n\nM4: Final Writeup\n40 pts\n\n\nM5: Slides + Presentation\n10 pts\n\n\nCollaboration & Teamwork\n10 pts",
    "crumbs": [
      "Projects",
      "Project 1"
    ]
  },
  {
    "objectID": "project/first_project.html#grading-milestone-details",
    "href": "project/first_project.html#grading-milestone-details",
    "title": "First Project",
    "section": "Grading Milestone details",
    "text": "Grading Milestone details\n\n\\(M_1\\) - Project Proposal\n\nCompletion (2pts) - Did the team complete all parts of the proposal as required?\nContent (2pts) - What is the quality of research and/or policy question and relevancy of data to those questions?\nCorrectness (2pts) - Are the statistical procedures sound and reasonable for the stated questions?\nCommunication & Writing (2pts) - What is the quality of the statistical presentation, writing, and explanations?\nCreativity and Critical Thought (2pts) - Is the project carefully thought out? Are the limitations carefully considered? Does it appear that time and effort went into the planning and implementation of the project?\n\n\n\n\\(M_2\\) - First Draft\n\nAbstract (2 pts) - Does the abstract provide a brief overview of the research topic, questions, data, and analyses you are conducting?\nIntroduction (2 pts) - Does the introduction articulate the research topic and questions you are addressing? Does it provide a brief overview of the data? Does it provide a couple of citations to help you make the case for your chosen topic of study?\nLiterature Review (3 pts) - Does the literature review provide relevant in-text citations? Does it examine and synthesize the sources in context of the current study?\nMethods (3 pts) - Does the methods section describe the sample, the data, and the analysis methods used? Does it justify the choice of analysis methods? Does it describe the data cleaning processes?\nData Analysis and Results (6 pts) - Are the analyses implemented correctly? Are the interpretations for both research questions done correctly and in context of the study? Do the analyses demonstrate a thorough understanding of statistical concepts learned in the course?\nConclusion (2 pts) - Does the conclusion summarize the research questions you addressed, the data you used, the analyses you conducted, and the results you obtained? Does it discuss the implications of your results and suggest directions for future research?\nReferences (2 pts) - Are all the sources you cited in your report listed in the references section? Are they in APA format?\n\n\n\n\\(M_3\\) - Peer Review\nPeer reviews will be graded on the extent to which it comprehensively and constructively addresses the components of the reviewee’s team’s report.\nOnly the team members participating in the review process are eligible for points for the peer review. Teams may choose to meet in-person or virtually. The team should submit a single review document that includes the following:\n\nQuality of feedback (3pts) - Did the team provide constructive and actionable feedback? Please note that actionable does not mean telling the reviewee team what to do, but rather providing feedback that the reviewee team can use to improve its work.\nCorrectness (2pts) - Are the critiques provided sound and reasonable?\nCommunication & Writing (2pts) - Is the feedback report understandable and free from grammatical errors and typos?\nCompletion (2pts) - Did the team complete the review as required?\n\n\n\n\\(M_4\\) - Final Writeup\nThe grading of the final writeup follows the same grading criteria as Milestone 2 but gets additional points. To get maximum points on milestone 4, you should address the feedback given to you on your project draft by your peers and/or professor. If there is any feedback that you think does not need to be addressed, please provide a justification for why you think so.\n\nAbstract (4 pts) - Does the abstract provide a brief overview of the research topic, questions, data, and analyses you are conducting?\nIntroduction (4 pts) - Does the introduction articulate the research topic and questions you are addressing? Does it provide a brief overview of the data? Does it provide a couple of citations to help you make the case for your chosen topic of study?\nLiterature Review (6 pts) - Does the literature review provide relevant in-text citations? Does it examine and synthesize the sources in context of the current study?\nMethods (6 pts) - Does the methods section describe the sample, the data, and the analysis methods used? Does it justify the choice of analysis methods? Does it describe the data cleaning processes?\nData Analysis and Results (14 pts) - Are the analyses implemented correctly? Are the interpretations for both research questions done correctly and in context of the study? Do the analyses demonstrate a thorough understanding of statistical concepts learned in the course?\nConclusion (4 pts) - Does the conclusion summarize the research questions you addressed, the data you used, the analyses you conducted, and the results you obtained? Does it discuss the implications of your results and suggest directions for future research?\nReferences (2 pts) - Are all the sources you cited in your report listed in the references section? Are they in APA format?\n\n\n\n\\(M_5\\) - Presentation\n\nSlides (3 pts) - Are the slides clear, well-organized, and concise? Do they summarize the key points and findings of the project?\nPresentation (4 pts) - Is the presentation clear and does it show a thorough understanding of the material learned? Are speakers audible enough and facing the audience? Are they engaging and do they maintain eye contact with the audience?\nQuestion and Answer (Q&A) (3 pts) - How well does the team answer questions about their project? Are they able to communicate their research topic, questions, data, analyses, and results to an audience?",
    "crumbs": [
      "Projects",
      "Project 1"
    ]
  },
  {
    "objectID": "project/first_project.html#submission",
    "href": "project/first_project.html#submission",
    "title": "First Project",
    "section": "Submission",
    "text": "Submission\nSubmissions for all milestones should be made through Canvas. You will see the assignments created in Canvas for each milestone with more detailed instructions.",
    "crumbs": [
      "Projects",
      "Project 1"
    ]
  },
  {
    "objectID": "project/final_project.html",
    "href": "project/final_project.html",
    "title": "Working collaboratively",
    "section": "",
    "text": "Data science is a collaborative discipline. Pretty much no data scientist works alone, so neither should you! In this course you’ll collaborate with teammates on the project.\nThe first milestone of the project, today’s activity, will introduce you to the technical aspects of collaborating on a reproducible data science project that is version controlled by Git and hosted on GitHub in a repository shared by all teammates.\nYes, this means you and all of your teammates will be pushing to the same repository! Sometimes things will go swimmingly, and sometimes you’ll run into merge conflicts.",
    "crumbs": [
      "Projects",
      "Project 2"
    ]
  },
  {
    "objectID": "project/final_project.html#activity",
    "href": "project/final_project.html#activity",
    "title": "Working collaboratively",
    "section": "Activity",
    "text": "Activity\n\nSetup\n\nClone the project repo and open the about.qmd file.\nAssign the numbers 1, 2, 3, 4, and 5 to each of the team members. If your team has fewer than 5 people, some people will need to have multiple numbers.\n\n\n\nLet’s cause a merge conflict!\nOur goal is to see two different types of merges: first we’ll see a type of merge that git can’t figure out on its own how to do on its own (a merge conflict) and requires human intervention, then another type of where that git can figure out how to do without human intervention.\nDoing this will require some tight choreography, so pay attention!\nTake turns in completing the exercise, only one member at a time. Others should just watch, not doing anything on their own projects (this includes not even pulling changes!) until they are instructed to. If you feel like you won’t be able to resist the urge to touch your computer when it’s not your turn, we recommend putting your hands in your pockets or sitting on them!\n\nBefore starting\nEveryone should have the repo cloned and know which role number(s) they are.\nAlso, any teammates who haven’t done this before should go to their Terminal and type git config pull.rebase false to set up their preferences for pulling.\n\n\nRole 1\n\nGo to about.qmd in your project repo. Change the [team name] to your actual team name.\nRender the project by clicking on Render in the Build tab, commit (all changed files), and push.\n\n\n\n\n\n\n\nImportant\n\n\n\nMake sure the previous role has finished before moving on to the next step.\n\n\n\n\nRole 2\n\nChange the team name to some other word.\nRender the project by clicking on Render in the Build tab, commit (all changed files), and push. You should get an error.\nPull. Take a look at the document (about.qmd) with the merge conflict.\nClear the merge conflict by editing the document to choose the correct/preferred change.\nRender the project by clicking on Render in the Build tab.\nClick the Stage checkbox for all files in your Git tab. Make sure they all have check marks, not filled-in boxes.\nCommit and push.\n\n\n\n\n\n\n\nImportant\n\n\n\nMake sure the previous role has finished before moving on to the next step.\n\n\n\n\nRole 3\n\nChange the a name of the first team member.\nRender the project by clicking on Render in the Build tab, commit, push. You should get an error.\nPull. No merge conflicts should occur, but you should see a message about merging.\nNow push.\n\n\n\n\n\n\n\nImportant\n\n\n\nMake sure the previous role has finished before moving on to the next step.\n\n\n\n\nRole 4\n\nChange the a name of the first team member to something other than what the previous team member did.\nRender the project by clicking on Render in the Build tab, commit, push. You should get an error.\nPull. Take a look at the document with the merge conflict. Clear the merge conflict by choosing the correct/preferred change. Render the project by clicking on Render in the Build tab, commit, and push.\n\n\n\n\n\n\n\nImportant\n\n\n\nMake sure the previous role has finished before moving on to the next step.\n\n\n\n\nRole 5\n\nChange the a name of the rest of the team members and add descriptions for each person with the help of your team members. Role 5 should be the only one typing, the others should help verbally.\nRender the project by clicking on Render in the Build tab and commit. Discuss as a team what you expect to happen when you hit push. Should there be a merge conflict error or not?\nIf there is a merge conflict, fix it. If not, push your changes.\n\n\n\nEveryone\nPull, and observe the changes in your project.",
    "crumbs": [
      "Projects",
      "Project 2"
    ]
  },
  {
    "objectID": "project/final_project.html#tips-for-collaborating-via-github",
    "href": "project/final_project.html#tips-for-collaborating-via-github",
    "title": "Working collaboratively",
    "section": "Tips for collaborating via GitHub",
    "text": "Tips for collaborating via GitHub\n\nAlways pull first before you start working.\nResolve a merge conflict (render and push) before continuing your work. Never do new work while resolving a merge conflict.\nRender, commit, and push often to minimize merge conflicts and/or to make merge conflicts easier to resolve.\nIf you find yourself in a situation that is difficult to resolve, ask questions ASAP. Don’t let it linger and get bigger.",
    "crumbs": [
      "Projects",
      "Project 2"
    ]
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "About this site"
  },
  {
    "objectID": "slides/18-model-selection-overfitting.html#while-you-wait-for-class-to-begin",
    "href": "slides/18-model-selection-overfitting.html#while-you-wait-for-class-to-begin",
    "title": "Model selection and overfitting",
    "section": "While you wait for class to begin…",
    "text": "While you wait for class to begin…\n\nAny questions from prepare materials?"
  },
  {
    "objectID": "slides/18-model-selection-overfitting.html#announcements",
    "href": "slides/18-model-selection-overfitting.html#announcements",
    "title": "Model selection and overfitting",
    "section": "Announcements",
    "text": "Announcements\n\nRead the feedback (including written feedback) on labs\nProject repos to be released back to you on Friday\nStatus update emails in your inbox"
  },
  {
    "objectID": "slides/18-model-selection-overfitting.html#can-you-review-the-augment-function",
    "href": "slides/18-model-selection-overfitting.html#can-you-review-the-augment-function",
    "title": "Model selection and overfitting",
    "section": "Can you review the augment() function?",
    "text": "Can you review the augment() function?\nThe augment() function can be used to “augment” a data set (usually of new observations) with the model.\n\n\nIt calculates predictions, \\(\\hat{y}\\)s, under the given model.\nIt also calculates the residuals, \\(e\\)s, for each observation.\nIt returns a data frame of the input data augmented with predicted values and residuals."
  },
  {
    "objectID": "slides/18-model-selection-overfitting.html#augment---setup",
    "href": "slides/18-model-selection-overfitting.html#augment---setup",
    "title": "Model selection and overfitting",
    "section": "augment() - Setup",
    "text": "augment() - Setup\n\nlibrary(tidyverse)\nlibrary(tidymodels)\n\nmtcars_fit &lt;- linear_reg() |&gt;\n  fit(mpg ~ disp + cyl, data = mtcars)\n\ntidy(mtcars_fit)\n\n# A tibble: 3 × 5\n  term        estimate std.error statistic  p.value\n  &lt;chr&gt;          &lt;dbl&gt;     &lt;dbl&gt;     &lt;dbl&gt;    &lt;dbl&gt;\n1 (Intercept)  34.7       2.55       13.6  4.02e-14\n2 disp         -0.0206    0.0103     -2.01 5.42e- 2\n3 cyl          -1.59      0.712      -2.23 3.37e- 2"
  },
  {
    "objectID": "slides/18-model-selection-overfitting.html#augment---augment-the-original-data",
    "href": "slides/18-model-selection-overfitting.html#augment---augment-the-original-data",
    "title": "Model selection and overfitting",
    "section": "augment() - Augment the original data",
    "text": "augment() - Augment the original data\n\naugment(mtcars_fit, new_data = mtcars)\n\n# A tibble: 32 × 13\n   .pred .resid   mpg   cyl  disp    hp  drat    wt  qsec    vs    am  gear  carb\n   &lt;dbl&gt;  &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt;\n 1  21.8 -0.844  21       6  160    110  3.9   2.62  16.5     0     1     4     4\n 2  21.8 -0.844  21       6  160    110  3.9   2.88  17.0     0     1     4     4\n 3  26.1 -3.29   22.8     4  108     93  3.85  2.32  18.6     1     1     4     1\n 4  19.8  1.57   21.4     6  258    110  3.08  3.22  19.4     1     0     3     1\n 5  14.6  4.15   18.7     8  360    175  3.15  3.44  17.0     0     0     3     2\n 6  20.5 -2.41   18.1     6  225    105  2.76  3.46  20.2     1     0     3     1\n 7  14.6 -0.253  14.3     8  360    245  3.21  3.57  15.8     0     0     3     4\n 8  25.3 -0.892  24.4     4  147.    62  3.69  3.19  20       1     0     4     2\n 9  25.4 -2.61   22.8     4  141.    95  3.92  3.15  22.9     1     0     4     2\n10  21.7 -2.49   19.2     6  168.   123  3.92  3.44  18.3     1     0     4     4\n# ℹ 22 more rows"
  },
  {
    "objectID": "slides/18-model-selection-overfitting.html#augment---augment-new-data",
    "href": "slides/18-model-selection-overfitting.html#augment---augment-new-data",
    "title": "Model selection and overfitting",
    "section": "augment() - Augment new data",
    "text": "augment() - Augment new data\n\nnew_cars &lt;- tibble(\n  mpg = c(23, 22), disp = c(150, 350), cyl = c(4, 6)\n)\n\nnew_cars\n\n# A tibble: 2 × 3\n    mpg  disp   cyl\n  &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt;\n1    23   150     4\n2    22   350     6\n\n\n\n\naugment(mtcars_fit, new_data = new_cars)\n\n# A tibble: 2 × 5\n  .pred .resid   mpg  disp   cyl\n  &lt;dbl&gt;  &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt;\n1  25.2  -2.22    23   150     4\n2  17.9   4.07    22   350     6"
  },
  {
    "objectID": "slides/18-model-selection-overfitting.html#what-is-the-difference-between-r2-and-adjusted-r2",
    "href": "slides/18-model-selection-overfitting.html#what-is-the-difference-between-r2-and-adjusted-r2",
    "title": "Model selection and overfitting",
    "section": "What is the difference between \\(R^2\\) and adjusted \\(R^2\\)?",
    "text": "What is the difference between \\(R^2\\) and adjusted \\(R^2\\)?\n\n\\(R^2\\):\n\nProportion of variability in the outcome explained by the model.\nUseful for quantifying the fit of a given model.\n\n\n\n\nAdjusted \\(R^2\\):\n\nProportion of variability in the outcome explained by the model, with a penalty added for the number of predictors in the model.\nUseful for comparing models."
  },
  {
    "objectID": "slides/18-model-selection-overfitting.html#application-exercise-ae-13-modeling-loans",
    "href": "slides/18-model-selection-overfitting.html#application-exercise-ae-13-modeling-loans",
    "title": "Model selection and overfitting",
    "section": "Application exercise: ae-13-modeling-loans",
    "text": "Application exercise: ae-13-modeling-loans\n\n\nGo to your project called ae.\nContinue working on ae-13-modeling-loans.qmd.\n\n\nGoals:\n\nReview prediction and interpretation of model results\nReview main and interaction effects models\nDiscuss model selection further"
  },
  {
    "objectID": "slides/18-model-selection-overfitting.html#recap-ae-13-modeling-loans",
    "href": "slides/18-model-selection-overfitting.html#recap-ae-13-modeling-loans",
    "title": "Model selection and overfitting",
    "section": "Recap: ae-13-modeling-loans",
    "text": "Recap: ae-13-modeling-loans\n\nWhat is the practical difference between a model with parallel and non-parallel lines?\nWhat is the definition of R-squared?\nWhy do we choose models based on adjusted R-squared and not R-squared?\n\n\n\n\n\n🔗 sta199-s24.github.io  ·  ❓ Ask on Ed"
  },
  {
    "objectID": "slides/10-importing-recoding-data.html#while-you-wait-for-class-to-begin",
    "href": "slides/10-importing-recoding-data.html#while-you-wait-for-class-to-begin",
    "title": "Importing and recoding data",
    "section": "While you wait for class to begin…",
    "text": "While you wait for class to begin…\nQuestions from prepare materials?"
  },
  {
    "objectID": "slides/10-importing-recoding-data.html#announcements",
    "href": "slides/10-importing-recoding-data.html#announcements",
    "title": "Importing and recoding data",
    "section": "Announcements",
    "text": "Announcements\n\nIf you missed lab yesterday, get in touch with your team ASAP! Read over the team contract they developed and sign it.\nStart thinking about the datasets you’ll include in your proposal."
  },
  {
    "objectID": "slides/10-importing-recoding-data.html#project-workflow-preview",
    "href": "slides/10-importing-recoding-data.html#project-workflow-preview",
    "title": "Importing and recoding data",
    "section": "Project workflow preview",
    "text": "Project workflow preview\n\n\n\n\n\n\n\nand a brief demo!"
  },
  {
    "objectID": "slides/10-importing-recoding-data.html#project-grading",
    "href": "slides/10-importing-recoding-data.html#project-grading",
    "title": "Importing and recoding data",
    "section": "Project grading",
    "text": "Project grading\n\nOutlined at https://sta199-s24.github.io/project/description.html#grading.\nEach milestone has points associated with it.\nAdditionally there are points allocated to reproducibility and organization as well as teamwork (to be measured by within team peer evaluations three times throughout the semester).\nMost important thing you can do today for your project: Block off agreed times in your calendar!"
  },
  {
    "objectID": "slides/10-importing-recoding-data.html#reading-rectangular-data",
    "href": "slides/10-importing-recoding-data.html#reading-rectangular-data",
    "title": "Importing and recoding data",
    "section": "Reading rectangular data",
    "text": "Reading rectangular data\n\nUsing readr:\n\nMost commonly: read_csv()\nMaybe also: read_tsv(), read_delim(), etc.\n\nUsing readxl: read_excel()\nUsing googlesheets4: read_sheet() – We haven’t covered this in the videos, but might be useful for your projects"
  },
  {
    "objectID": "slides/10-importing-recoding-data.html#age-gap-in-hollywood-relationships",
    "href": "slides/10-importing-recoding-data.html#age-gap-in-hollywood-relationships",
    "title": "Importing and recoding data",
    "section": "Age gap in Hollywood relationships",
    "text": "Age gap in Hollywood relationships\n\n\n\nWhat is the story in this visualization?"
  },
  {
    "objectID": "slides/10-importing-recoding-data.html#application-exercise-ae-08-data-import",
    "href": "slides/10-importing-recoding-data.html#application-exercise-ae-08-data-import",
    "title": "Importing and recoding data",
    "section": "Application exercise: ae-08-data-import",
    "text": "Application exercise: ae-08-data-import\n\n\nGo to the project navigator in RStudio (top right corner of your RStudio window) and open the project called ae.\nIf there are any uncommitted files, commit them, and then click Pull.\nOpen the file called ae-08-data-import.qmd and render it.\nWork on Part 1."
  },
  {
    "objectID": "slides/10-importing-recoding-data.html#sales-data",
    "href": "slides/10-importing-recoding-data.html#sales-data",
    "title": "Importing and recoding data",
    "section": "Sales data",
    "text": "Sales data\n\n\n\nAre these data tidy? Why or why not?"
  },
  {
    "objectID": "slides/10-importing-recoding-data.html#sales-data-1",
    "href": "slides/10-importing-recoding-data.html#sales-data-1",
    "title": "Importing and recoding data",
    "section": "Sales data",
    "text": "Sales data\n\nWhat “data moves” do we need to go from the original, non-tidy data to this, tidy one?"
  },
  {
    "objectID": "slides/10-importing-recoding-data.html#application-exercise-ae-08-data-import-1",
    "href": "slides/10-importing-recoding-data.html#application-exercise-ae-08-data-import-1",
    "title": "Importing and recoding data",
    "section": "Application exercise: ae-08-data-import",
    "text": "Application exercise: ae-08-data-import\n\n\nGo back to your project called ae.\nIf there are any uncommitted files, commit them, and push.\nWork on Part 2 in ae-08-data-import.qmd."
  },
  {
    "objectID": "slides/10-importing-recoding-data.html#exams",
    "href": "slides/10-importing-recoding-data.html#exams",
    "title": "Importing and recoding data",
    "section": "Exams",
    "text": "Exams\n\n\n\n\n\n\n\n\n\n🔗 sta199-s24.github.io  ·  ❓ Ask on Ed"
  },
  {
    "objectID": "slides/05-grammar-of-data-wrangling.html#while-you-wait-for-class-to-begin",
    "href": "slides/05-grammar-of-data-wrangling.html#while-you-wait-for-class-to-begin",
    "title": "Grammar of data wrangling",
    "section": "While you wait for class to begin…",
    "text": "While you wait for class to begin…\n\nGo to your ae repo, click Pull to get today’s application exercise to get ready for later.\nQuestions from the prepare materials?"
  },
  {
    "objectID": "slides/05-grammar-of-data-wrangling.html#asking-good-questions",
    "href": "slides/05-grammar-of-data-wrangling.html#asking-good-questions",
    "title": "Grammar of data wrangling",
    "section": "Asking good questions",
    "text": "Asking good questions\n\nPost content questions on Ed Discussion\nIf you have a coding question always provide the code, and if relevant, the error\n\nIf this feels impossible, don’t fret it, it’s ok to ask questions without the code. It’s just more efficient with it!\n\nTitle your thread in a way that can help others (e.g., “Q7” vs. “error with mutate() function in Lab 1 - Q7”)\nCheck for previous questions"
  },
  {
    "objectID": "slides/05-grammar-of-data-wrangling.html#coding-style-workflow",
    "href": "slides/05-grammar-of-data-wrangling.html#coding-style-workflow",
    "title": "Grammar of data wrangling",
    "section": "Coding style + workflow",
    "text": "Coding style + workflow\n\n\nAvoid long lines of code.\n\nWe should be able to see all of your code in the PDF document you submit.\n\nLabel code chunks.\n\nDo not put spaces in the code-chunk labels.\n\nRender, commit, and push regularly.\n\nThink about it like clicking to save regularly as you type a report."
  },
  {
    "objectID": "slides/05-grammar-of-data-wrangling.html#lab-1",
    "href": "slides/05-grammar-of-data-wrangling.html#lab-1",
    "title": "Grammar of data wrangling",
    "section": "Lab 1",
    "text": "Lab 1"
  },
  {
    "objectID": "slides/05-grammar-of-data-wrangling.html#nyc-flights",
    "href": "slides/05-grammar-of-data-wrangling.html#nyc-flights",
    "title": "Grammar of data wrangling",
    "section": "NYC Flights",
    "text": "NYC Flights\n\nTo demonstrate data wrangling we will use flights, a tibble in the nycflights13 R package.\nThe data set includes characteristics of all flights departing from New York City (JFK, LGA, EWR) in 2013.\n\n\nlibrary(tidyverse)\nlibrary(nycflights13)"
  },
  {
    "objectID": "slides/05-grammar-of-data-wrangling.html#flights-dimensions",
    "href": "slides/05-grammar-of-data-wrangling.html#flights-dimensions",
    "title": "Grammar of data wrangling",
    "section": "flights – dimensions",
    "text": "flights – dimensions\n\nNumber of rows:\n\n\nnrow(flights)\n\n[1] 336776\n\n\n\n\nNumber of columns:\n\n\nncol(flights)\n\n[1] 19"
  },
  {
    "objectID": "slides/05-grammar-of-data-wrangling.html#flights-first-look",
    "href": "slides/05-grammar-of-data-wrangling.html#flights-first-look",
    "title": "Grammar of data wrangling",
    "section": "flights – first look",
    "text": "flights – first look\n\nglimpse()names()head()\n\n\n\nglimpse(flights)\n\nRows: 336,776\nColumns: 19\n$ year           &lt;int&gt; 2013, 2013, 2013, 2013, 2013, 2013, 2013, 2013, 2013, 2013, 2013,…\n$ month          &lt;int&gt; 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,…\n$ day            &lt;int&gt; 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,…\n$ dep_time       &lt;int&gt; 517, 533, 542, 544, 554, 554, 555, 557, 557, 558, 558, 558, 558, …\n$ sched_dep_time &lt;int&gt; 515, 529, 540, 545, 600, 558, 600, 600, 600, 600, 600, 600, 600, …\n$ dep_delay      &lt;dbl&gt; 2, 4, 2, -1, -6, -4, -5, -3, -3, -2, -2, -2, -2, -2, -1, 0, -1, 0…\n$ arr_time       &lt;int&gt; 830, 850, 923, 1004, 812, 740, 913, 709, 838, 753, 849, 853, 924,…\n$ sched_arr_time &lt;int&gt; 819, 830, 850, 1022, 837, 728, 854, 723, 846, 745, 851, 856, 917,…\n$ arr_delay      &lt;dbl&gt; 11, 20, 33, -18, -25, 12, 19, -14, -8, 8, -2, -3, 7, -14, 31, -4,…\n$ carrier        &lt;chr&gt; \"UA\", \"UA\", \"AA\", \"B6\", \"DL\", \"UA\", \"B6\", \"EV\", \"B6\", \"AA\", \"B6\",…\n$ flight         &lt;int&gt; 1545, 1714, 1141, 725, 461, 1696, 507, 5708, 79, 301, 49, 71, 194…\n$ tailnum        &lt;chr&gt; \"N14228\", \"N24211\", \"N619AA\", \"N804JB\", \"N668DN\", \"N39463\", \"N516…\n$ origin         &lt;chr&gt; \"EWR\", \"LGA\", \"JFK\", \"JFK\", \"LGA\", \"EWR\", \"EWR\", \"LGA\", \"JFK\", \"L…\n$ dest           &lt;chr&gt; \"IAH\", \"IAH\", \"MIA\", \"BQN\", \"ATL\", \"ORD\", \"FLL\", \"IAD\", \"MCO\", \"O…\n$ air_time       &lt;dbl&gt; 227, 227, 160, 183, 116, 150, 158, 53, 140, 138, 149, 158, 345, 3…\n$ distance       &lt;dbl&gt; 1400, 1416, 1089, 1576, 762, 719, 1065, 229, 944, 733, 1028, 1005…\n$ hour           &lt;dbl&gt; 5, 5, 5, 5, 6, 5, 6, 6, 6, 6, 6, 6, 6, 6, 6, 5, 6, 6, 6, 6, 6, 6,…\n$ minute         &lt;dbl&gt; 15, 29, 40, 45, 0, 58, 0, 0, 0, 0, 0, 0, 0, 0, 0, 59, 0, 0, 0, 0,…\n$ time_hour      &lt;dttm&gt; 2013-01-01 05:00:00, 2013-01-01 05:00:00, 2013-01-01 05:00:00, 2…\n\n\n\n\n\nnames(flights)\n\n [1] \"year\"           \"month\"          \"day\"            \"dep_time\"       \"sched_dep_time\"\n [6] \"dep_delay\"      \"arr_time\"       \"sched_arr_time\" \"arr_delay\"      \"carrier\"       \n[11] \"flight\"         \"tailnum\"        \"origin\"         \"dest\"           \"air_time\"      \n[16] \"distance\"       \"hour\"           \"minute\"         \"time_hour\"     \n\n\n\n\n\nhead(flights)\n\n# A tibble: 6 × 19\n   year month   day dep_time sched_dep_time dep_delay arr_time sched_arr_time arr_delay\n  &lt;int&gt; &lt;int&gt; &lt;int&gt;    &lt;int&gt;          &lt;int&gt;     &lt;dbl&gt;    &lt;int&gt;          &lt;int&gt;     &lt;dbl&gt;\n1  2013     1     1      517            515         2      830            819        11\n2  2013     1     1      533            529         4      850            830        20\n3  2013     1     1      542            540         2      923            850        33\n4  2013     1     1      544            545        -1     1004           1022       -18\n5  2013     1     1      554            600        -6      812            837       -25\n6  2013     1     1      554            558        -4      740            728        12\n# ℹ 10 more variables: carrier &lt;chr&gt;, flight &lt;int&gt;, tailnum &lt;chr&gt;, origin &lt;chr&gt;,\n#   dest &lt;chr&gt;, air_time &lt;dbl&gt;, distance &lt;dbl&gt;, hour &lt;dbl&gt;, minute &lt;dbl&gt;,\n#   time_hour &lt;dttm&gt;"
  },
  {
    "objectID": "slides/05-grammar-of-data-wrangling.html#tibble-vs.-data-frame",
    "href": "slides/05-grammar-of-data-wrangling.html#tibble-vs.-data-frame",
    "title": "Grammar of data wrangling",
    "section": "tibble vs. data frame",
    "text": "tibble vs. data frame\n\n\ntibble: an opinionated version of the R data frame\nAll tibbles are data frames, but not all data frames are tibbles!\nTwo main differences between a tibble and a data frame:\n\nPrinting\nStricter subsetting"
  },
  {
    "objectID": "slides/05-grammar-of-data-wrangling.html#printing",
    "href": "slides/05-grammar-of-data-wrangling.html#printing",
    "title": "Grammar of data wrangling",
    "section": "Printing",
    "text": "Printing\n\ntibbledata.frame\n\n\nDisplay first 10 rows and all of the columns that fit on the screen will display, along with the type of each column.\n\nflights\n\n# A tibble: 336,776 × 19\n    year month   day dep_time sched_dep_time dep_delay arr_time sched_arr_time arr_delay\n   &lt;int&gt; &lt;int&gt; &lt;int&gt;    &lt;int&gt;          &lt;int&gt;     &lt;dbl&gt;    &lt;int&gt;          &lt;int&gt;     &lt;dbl&gt;\n 1  2013     1     1      517            515         2      830            819        11\n 2  2013     1     1      533            529         4      850            830        20\n 3  2013     1     1      542            540         2      923            850        33\n 4  2013     1     1      544            545        -1     1004           1022       -18\n 5  2013     1     1      554            600        -6      812            837       -25\n 6  2013     1     1      554            558        -4      740            728        12\n 7  2013     1     1      555            600        -5      913            854        19\n 8  2013     1     1      557            600        -3      709            723       -14\n 9  2013     1     1      557            600        -3      838            846        -8\n10  2013     1     1      558            600        -2      753            745         8\n# ℹ 336,766 more rows\n# ℹ 10 more variables: carrier &lt;chr&gt;, flight &lt;int&gt;, tailnum &lt;chr&gt;, origin &lt;chr&gt;,\n#   dest &lt;chr&gt;, air_time &lt;dbl&gt;, distance &lt;dbl&gt;, hour &lt;dbl&gt;, minute &lt;dbl&gt;,\n#   time_hour &lt;dttm&gt;\n\n\n\n\n(Attempt to) display all of the data, or die (crash) tryin (if the dataset is too large)!\n\ncars\n\n   speed dist\n1      4    2\n2      4   10\n3      7    4\n4      7   22\n5      8   16\n6      9   10\n7     10   18\n8     10   26\n9     10   34\n10    11   17\n11    11   28\n12    12   14\n13    12   20\n14    12   24\n15    12   28\n16    13   26\n17    13   34\n18    13   34\n19    13   46\n20    14   26\n21    14   36\n22    14   60\n23    14   80\n24    15   20\n25    15   26\n26    15   54\n27    16   32\n28    16   40\n29    17   32\n30    17   40\n31    17   50\n32    18   42\n33    18   56\n34    18   76\n35    18   84\n36    19   36\n37    19   46\n38    19   68\n39    20   32\n40    20   48\n41    20   52\n42    20   56\n43    20   64\n44    22   66\n45    23   54\n46    24   70\n47    24   92\n48    24   93\n49    24  120\n50    25   85"
  },
  {
    "objectID": "slides/05-grammar-of-data-wrangling.html#stricter-subsetting",
    "href": "slides/05-grammar-of-data-wrangling.html#stricter-subsetting",
    "title": "Grammar of data wrangling",
    "section": "Stricter subsetting",
    "text": "Stricter subsetting\n\ntibbledata.frame\n\n\nWarning + NULL if variable not found.\n\nflights$apple\n\nWarning: Unknown or uninitialised column: `apple`.\n\n\nNULL\n\n\n\n\nOnly NULL if variable not found.\n\ncars$apple\n\nNULL"
  },
  {
    "objectID": "slides/05-grammar-of-data-wrangling.html#dplyr",
    "href": "slides/05-grammar-of-data-wrangling.html#dplyr",
    "title": "Grammar of data wrangling",
    "section": "dplyr",
    "text": "dplyr\nPrimary package in the tidyverse for data wrangling\n\n\ndplyr.tidyverse.org\n\n\nCheat sheet"
  },
  {
    "objectID": "slides/05-grammar-of-data-wrangling.html#row-operations",
    "href": "slides/05-grammar-of-data-wrangling.html#row-operations",
    "title": "Grammar of data wrangling",
    "section": "Row operations",
    "text": "Row operations\n\nslice(): chooses rows based on location\nfilter():chooses rows based on column values\narrange(): changes the order of the rows\nsample_n(): take a random subset of the rows"
  },
  {
    "objectID": "slides/05-grammar-of-data-wrangling.html#slice",
    "href": "slides/05-grammar-of-data-wrangling.html#slice",
    "title": "Grammar of data wrangling",
    "section": "slice()",
    "text": "slice()\nDisplay the first five rows of flights:\n\n1flights |&gt;\n2  slice(1:5)\n\n\n1\n\nTake the flights data frame, and then,\n\n2\n\nSlice its first five rows\n\n\n\n\n# A tibble: 5 × 19\n   year month   day dep_time sched_dep_time dep_delay arr_time sched_arr_time arr_delay\n  &lt;int&gt; &lt;int&gt; &lt;int&gt;    &lt;int&gt;          &lt;int&gt;     &lt;dbl&gt;    &lt;int&gt;          &lt;int&gt;     &lt;dbl&gt;\n1  2013     1     1      517            515         2      830            819        11\n2  2013     1     1      533            529         4      850            830        20\n3  2013     1     1      542            540         2      923            850        33\n4  2013     1     1      544            545        -1     1004           1022       -18\n5  2013     1     1      554            600        -6      812            837       -25\n# ℹ 10 more variables: carrier &lt;chr&gt;, flight &lt;int&gt;, tailnum &lt;chr&gt;, origin &lt;chr&gt;,\n#   dest &lt;chr&gt;, air_time &lt;dbl&gt;, distance &lt;dbl&gt;, hour &lt;dbl&gt;, minute &lt;dbl&gt;,\n#   time_hour &lt;dttm&gt;"
  },
  {
    "objectID": "slides/05-grammar-of-data-wrangling.html#filter",
    "href": "slides/05-grammar-of-data-wrangling.html#filter",
    "title": "Grammar of data wrangling",
    "section": "filter()",
    "text": "filter()\nFilter for flights to RDU in flights:\n\n1flights |&gt;\n2  filter(dest == \"RDU\")\n\n\n1\n\nTake the flights data frame, and then,\n\n2\n\nFilter for rows where dest is equal to RDU\n\n\n\n\n# A tibble: 8,163 × 19\n    year month   day dep_time sched_dep_time dep_delay arr_time sched_arr_time arr_delay\n   &lt;int&gt; &lt;int&gt; &lt;int&gt;    &lt;int&gt;          &lt;int&gt;     &lt;dbl&gt;    &lt;int&gt;          &lt;int&gt;     &lt;dbl&gt;\n 1  2013     1     1      800            810       -10      949            955        -6\n 2  2013     1     1      832            840        -8     1006           1030       -24\n 3  2013     1     1      851            851         0     1032           1036        -4\n 4  2013     1     1      917            920        -3     1052           1108       -16\n 5  2013     1     1     1024           1030        -6     1204           1215       -11\n 6  2013     1     1     1127           1129        -2     1303           1309        -6\n 7  2013     1     1     1157           1205        -8     1342           1345        -3\n 8  2013     1     1     1240           1235         5     1415           1415         0\n 9  2013     1     1     1317           1325        -8     1454           1505       -11\n10  2013     1     1     1449           1450        -1     1651           1640        11\n# ℹ 8,153 more rows\n# ℹ 10 more variables: carrier &lt;chr&gt;, flight &lt;int&gt;, tailnum &lt;chr&gt;, origin &lt;chr&gt;,\n#   dest &lt;chr&gt;, air_time &lt;dbl&gt;, distance &lt;dbl&gt;, hour &lt;dbl&gt;, minute &lt;dbl&gt;,\n#   time_hour &lt;dttm&gt;"
  },
  {
    "objectID": "slides/05-grammar-of-data-wrangling.html#the-pipe",
    "href": "slides/05-grammar-of-data-wrangling.html#the-pipe",
    "title": "Grammar of data wrangling",
    "section": "The pipe",
    "text": "The pipe\n\n\nThe pipe, |&gt;, is an operator (a tool) for passing information from one process to another.\nUse |&gt; mainly in data pipelines to pass the output of the previous line of code as the first input of the next line of code.\nWhen reading code “in English”, say “and then” whenever you see a pipe."
  },
  {
    "objectID": "slides/05-grammar-of-data-wrangling.html#delayed-flights-to-rdu",
    "href": "slides/05-grammar-of-data-wrangling.html#delayed-flights-to-rdu",
    "title": "Grammar of data wrangling",
    "section": "Delayed flights to RDU",
    "text": "Delayed flights to RDU\n\nWhich airline is the most delayed, on average, arriving in RDU from a New York City airport?\n\n\nGoal:\n\n\n# A tibble: 5 × 2\n  carrier mean_arr_delay\n  &lt;chr&gt;            &lt;dbl&gt;\n1 UA               56   \n2 B6               13.3 \n3 EV               12.2 \n4 9E                9.67\n5 MQ                8.82"
  },
  {
    "objectID": "slides/05-grammar-of-data-wrangling.html#the-pipe-in-action",
    "href": "slides/05-grammar-of-data-wrangling.html#the-pipe-in-action",
    "title": "Grammar of data wrangling",
    "section": "The pipe, in action",
    "text": "The pipe, in action\n\n1flights\n\n\n1\n\nTake the flights data frame\n\n\n\n\n# A tibble: 336,776 × 19\n    year month   day dep_time sched_dep_time dep_delay arr_time sched_arr_time arr_delay\n   &lt;int&gt; &lt;int&gt; &lt;int&gt;    &lt;int&gt;          &lt;int&gt;     &lt;dbl&gt;    &lt;int&gt;          &lt;int&gt;     &lt;dbl&gt;\n 1  2013     1     1      517            515         2      830            819        11\n 2  2013     1     1      533            529         4      850            830        20\n 3  2013     1     1      542            540         2      923            850        33\n 4  2013     1     1      544            545        -1     1004           1022       -18\n 5  2013     1     1      554            600        -6      812            837       -25\n 6  2013     1     1      554            558        -4      740            728        12\n 7  2013     1     1      555            600        -5      913            854        19\n 8  2013     1     1      557            600        -3      709            723       -14\n 9  2013     1     1      557            600        -3      838            846        -8\n10  2013     1     1      558            600        -2      753            745         8\n# ℹ 336,766 more rows\n# ℹ 10 more variables: carrier &lt;chr&gt;, flight &lt;int&gt;, tailnum &lt;chr&gt;, origin &lt;chr&gt;,\n#   dest &lt;chr&gt;, air_time &lt;dbl&gt;, distance &lt;dbl&gt;, hour &lt;dbl&gt;, minute &lt;dbl&gt;,\n#   time_hour &lt;dttm&gt;"
  },
  {
    "objectID": "slides/05-grammar-of-data-wrangling.html#the-pipe-in-action-1",
    "href": "slides/05-grammar-of-data-wrangling.html#the-pipe-in-action-1",
    "title": "Grammar of data wrangling",
    "section": "The pipe, in action",
    "text": "The pipe, in action\n\n1flights |&gt;\n2  filter(dest == \"RDU\")\n\n\n1\n\nTake the flights data frame,\n\n2\n\nand then filter for flights going to RDU\n\n\n\n\n# A tibble: 8,163 × 19\n    year month   day dep_time sched_dep_time dep_delay arr_time sched_arr_time arr_delay\n   &lt;int&gt; &lt;int&gt; &lt;int&gt;    &lt;int&gt;          &lt;int&gt;     &lt;dbl&gt;    &lt;int&gt;          &lt;int&gt;     &lt;dbl&gt;\n 1  2013     1     1      800            810       -10      949            955        -6\n 2  2013     1     1      832            840        -8     1006           1030       -24\n 3  2013     1     1      851            851         0     1032           1036        -4\n 4  2013     1     1      917            920        -3     1052           1108       -16\n 5  2013     1     1     1024           1030        -6     1204           1215       -11\n 6  2013     1     1     1127           1129        -2     1303           1309        -6\n 7  2013     1     1     1157           1205        -8     1342           1345        -3\n 8  2013     1     1     1240           1235         5     1415           1415         0\n 9  2013     1     1     1317           1325        -8     1454           1505       -11\n10  2013     1     1     1449           1450        -1     1651           1640        11\n# ℹ 8,153 more rows\n# ℹ 10 more variables: carrier &lt;chr&gt;, flight &lt;int&gt;, tailnum &lt;chr&gt;, origin &lt;chr&gt;,\n#   dest &lt;chr&gt;, air_time &lt;dbl&gt;, distance &lt;dbl&gt;, hour &lt;dbl&gt;, minute &lt;dbl&gt;,\n#   time_hour &lt;dttm&gt;"
  },
  {
    "objectID": "slides/05-grammar-of-data-wrangling.html#the-pipe-in-action-2",
    "href": "slides/05-grammar-of-data-wrangling.html#the-pipe-in-action-2",
    "title": "Grammar of data wrangling",
    "section": "The pipe, in action",
    "text": "The pipe, in action\n\n1flights |&gt;\n2  filter(dest == \"RDU\") |&gt;\n3  group_by(carrier)\n\n\n1\n\nTake the flights data frame,\n\n2\n\nand then filter for flights going to RDU,\n\n3\n\nand then group by carrier\n\n\n\n\n# A tibble: 8,163 × 19\n# Groups:   carrier [5]\n    year month   day dep_time sched_dep_time dep_delay arr_time sched_arr_time arr_delay\n   &lt;int&gt; &lt;int&gt; &lt;int&gt;    &lt;int&gt;          &lt;int&gt;     &lt;dbl&gt;    &lt;int&gt;          &lt;int&gt;     &lt;dbl&gt;\n 1  2013     1     1      800            810       -10      949            955        -6\n 2  2013     1     1      832            840        -8     1006           1030       -24\n 3  2013     1     1      851            851         0     1032           1036        -4\n 4  2013     1     1      917            920        -3     1052           1108       -16\n 5  2013     1     1     1024           1030        -6     1204           1215       -11\n 6  2013     1     1     1127           1129        -2     1303           1309        -6\n 7  2013     1     1     1157           1205        -8     1342           1345        -3\n 8  2013     1     1     1240           1235         5     1415           1415         0\n 9  2013     1     1     1317           1325        -8     1454           1505       -11\n10  2013     1     1     1449           1450        -1     1651           1640        11\n# ℹ 8,153 more rows\n# ℹ 10 more variables: carrier &lt;chr&gt;, flight &lt;int&gt;, tailnum &lt;chr&gt;, origin &lt;chr&gt;,\n#   dest &lt;chr&gt;, air_time &lt;dbl&gt;, distance &lt;dbl&gt;, hour &lt;dbl&gt;, minute &lt;dbl&gt;,\n#   time_hour &lt;dttm&gt;"
  },
  {
    "objectID": "slides/05-grammar-of-data-wrangling.html#the-pipe-in-action-3",
    "href": "slides/05-grammar-of-data-wrangling.html#the-pipe-in-action-3",
    "title": "Grammar of data wrangling",
    "section": "The pipe, in action",
    "text": "The pipe, in action\n\n1flights |&gt;\n2  filter(dest == \"RDU\") |&gt;\n3  group_by(carrier) |&gt;\n4  summarize(mean_arr_delay = mean(arr_delay, na.rm = TRUE))\n\n\n1\n\nTake the flights data frame,\n\n2\n\nand then filter for flights going to RDU,\n\n3\n\nand then group by carrier,\n\n4\n\nand then calculate the mean arrival delay for each carrier\n\n\n\n\n# A tibble: 5 × 2\n  carrier mean_arr_delay\n  &lt;chr&gt;            &lt;dbl&gt;\n1 9E                9.67\n2 B6               13.3 \n3 EV               12.2 \n4 MQ                8.82\n5 UA               56"
  },
  {
    "objectID": "slides/05-grammar-of-data-wrangling.html#the-pipe-in-action-4",
    "href": "slides/05-grammar-of-data-wrangling.html#the-pipe-in-action-4",
    "title": "Grammar of data wrangling",
    "section": "The pipe, in action",
    "text": "The pipe, in action\n\n1flights |&gt;\n2  filter(dest == \"RDU\") |&gt;\n3  group_by(carrier) |&gt;\n4  summarize(mean_arr_delay = mean(arr_delay, na.rm = TRUE)) |&gt;\n5  arrange(desc(mean_arr_delay))\n\n\n1\n\nTake the flights data frame,\n\n2\n\nand then filter for flights going to RDU,\n\n3\n\nand then group by carrier,\n\n4\n\nand then calculate the mean arrival delay for each carrier,\n\n5\n\nand then arrange in descending order of mean arrival delay.\n\n\n\n\n# A tibble: 5 × 2\n  carrier mean_arr_delay\n  &lt;chr&gt;            &lt;dbl&gt;\n1 UA               56   \n2 B6               13.3 \n3 EV               12.2 \n4 9E                9.67\n5 MQ                8.82"
  },
  {
    "objectID": "slides/05-grammar-of-data-wrangling.html#column-operations",
    "href": "slides/05-grammar-of-data-wrangling.html#column-operations",
    "title": "Grammar of data wrangling",
    "section": "Column operations",
    "text": "Column operations\n\nselect(): changes whether or not a column is included.\nrename(): changes the name of columns.\nmutate(): changes the values of columns and creates new columns."
  },
  {
    "objectID": "slides/05-grammar-of-data-wrangling.html#groups-of-rows",
    "href": "slides/05-grammar-of-data-wrangling.html#groups-of-rows",
    "title": "Grammar of data wrangling",
    "section": "Groups of rows",
    "text": "Groups of rows\n\nsummarize(): collapses a group into a single row.\ncount(): count unique values of one or more variables.\ngroup_by(): perform calculations separately for each value of a variable"
  },
  {
    "objectID": "slides/05-grammar-of-data-wrangling.html#ae-04-flights-wrangling",
    "href": "slides/05-grammar-of-data-wrangling.html#ae-04-flights-wrangling",
    "title": "Grammar of data wrangling",
    "section": "ae-04-flights-wrangling",
    "text": "ae-04-flights-wrangling\n\n\nGo to the project navigator in RStudio (top right corner of your RStudio window) and open the project called ae.\nIf there are any uncommitted files, commit them, and then click Pull.\nOpen the file called ae-04-flights-wrangling.qmd and render it."
  },
  {
    "objectID": "slides/05-grammar-of-data-wrangling.html#recap-pipe",
    "href": "slides/05-grammar-of-data-wrangling.html#recap-pipe",
    "title": "Grammar of data wrangling",
    "section": "Recap: pipe",
    "text": "Recap: pipe\n\nThe pipe operator passes what comes before it into the function that comes after it as the first argument in that function.\n\n\nsum(1, 2)\n\n[1] 3\n\n1 |&gt; \n  sum(2)\n\n[1] 3\n\n\n\nAlways use a line break after the pipe, and indent the next line of code.\n\nJust like always use a line break between layers of ggplots, after +, and indent the next line."
  },
  {
    "objectID": "slides/05-grammar-of-data-wrangling.html#recap-logical-operators",
    "href": "slides/05-grammar-of-data-wrangling.html#recap-logical-operators",
    "title": "Grammar of data wrangling",
    "section": "Recap: logical operators",
    "text": "Recap: logical operators\n\n\n\noperator\ndefinition\n\n\n\n\n&lt;\nis less than?\n\n\n&lt;=\nis less than or equal to?\n\n\n&gt;\nis greater than?\n\n\n&gt;=\nis greater than or equal to?\n\n\n==\nis exactly equal to?\n\n\n!=\nis not equal to?"
  },
  {
    "objectID": "slides/05-grammar-of-data-wrangling.html#recap-logical-operators-1",
    "href": "slides/05-grammar-of-data-wrangling.html#recap-logical-operators-1",
    "title": "Grammar of data wrangling",
    "section": "Recap: logical operators",
    "text": "Recap: logical operators\n\n\n\n\n\n\n\noperator\ndefinition\n\n\n\n\nx & y\nis x AND y?\n\n\nx \\| y\nis x OR y?\n\n\nis.na(x)\nis x NA?\n\n\n!is.na(x)\nis x not NA?\n\n\nx %in% y\nis x in y?\n\n\n!(x %in% y)\nis x not in y?\n\n\n!x\nis not x? (only makes sense if x is TRUE or FALSE)\n\n\n\n\n\n\n\n🔗 sta199-s24.github.io  ·  ❓ Ask on Ed"
  },
  {
    "objectID": "slides/20-bootstrap.html#while-you-wait-for-class-to-begin",
    "href": "slides/20-bootstrap.html#while-you-wait-for-class-to-begin",
    "title": "Quantifying uncertainty with bootstrap intervals",
    "section": "While you wait for class to begin…",
    "text": "While you wait for class to begin…\n\nAny questions from prepare materials?"
  },
  {
    "objectID": "slides/20-bootstrap.html#announcements",
    "href": "slides/20-bootstrap.html#announcements",
    "title": "Quantifying uncertainty with bootstrap intervals",
    "section": "Announcements",
    "text": "Announcements\n\nLab 7 (last lab) is due Monday 4/8 at 8 am\nHave at least one team meeting this week to review feedback and make some progress on your lab for peer review after exam on Monday 4/15"
  },
  {
    "objectID": "slides/20-bootstrap.html#case-study-airbnb-in-asheville-nc",
    "href": "slides/20-bootstrap.html#case-study-airbnb-in-asheville-nc",
    "title": "Quantifying uncertainty with bootstrap intervals",
    "section": "Case study: Airbnb in Asheville, NC",
    "text": "Case study: Airbnb in Asheville, NC\nWe have data on the price per guest (ppg) for a random sample of 50 Airbnb listings in 2020 for Asheville, NC. We are going to use these data to investigate what we would of expected to pay for an Airbnb in in Asheville, NC in June 2020.\nWe have data on the price per guest (ppg) for a random sample of 50 Airbnb listings in 2020 for Asheville, NC. We are going to use these data to investigate what we would of expected to pay for an Airbnb in in Asheville, NC in June 2020.\n\nabb &lt;- read_csv(\"data/asheville.csv\")\n\nglimpse(abb)\n\nRows: 50\nColumns: 1\n$ ppg &lt;dbl&gt; 48.00000, 40.00000, 99.00000, 13.00000, 55.00000, 75.00000, 74.00000, 169.00…"
  },
  {
    "objectID": "slides/20-bootstrap.html#terminology",
    "href": "slides/20-bootstrap.html#terminology",
    "title": "Quantifying uncertainty with bootstrap intervals",
    "section": "Terminology",
    "text": "Terminology\n\nPopulation parameter - What we are interested in. Statistical measure that describes an entire population.\nSample statistic (point estimate) - describes a sample. A piece of information you get from a fraction of the population.\n\n\nabb |&gt; \n  summarize(ppg_mean = mean(ppg))\n\n# A tibble: 1 × 1\n  ppg_mean\n     &lt;dbl&gt;\n1     76.6"
  },
  {
    "objectID": "slides/20-bootstrap.html#catching-a-fish",
    "href": "slides/20-bootstrap.html#catching-a-fish",
    "title": "Quantifying uncertainty with bootstrap intervals",
    "section": "Catching a fish",
    "text": "Catching a fish\n\nSuppose you’re fishing in a murky lake. Are you more likely to catch a fish using a spear or a net?\n\n\n\nSpear \\(\\rightarrow\\) point estimate\nNet \\(\\rightarrow\\) interval estimate"
  },
  {
    "objectID": "slides/20-bootstrap.html#constructing-confidence-intervals",
    "href": "slides/20-bootstrap.html#constructing-confidence-intervals",
    "title": "Quantifying uncertainty with bootstrap intervals",
    "section": "Constructing confidence intervals",
    "text": "Constructing confidence intervals\nQuantifying the variability of the sample statistics to help calculate a range of plausible values for the population parameter of interest:\n\nVia simulation \\(\\rightarrow\\) using bootstrapping – using a statistical procedure that re samples a single data set to create many simulated samples.\nVia mathematical formulas \\(\\rightarrow\\) using the Central Limit Theorem"
  },
  {
    "objectID": "slides/20-bootstrap.html#bootstrapping-what",
    "href": "slides/20-bootstrap.html#bootstrapping-what",
    "title": "Quantifying uncertainty with bootstrap intervals",
    "section": "Bootstrapping, what?",
    "text": "Bootstrapping, what?\n\nThe term bootstrapping comes from the phrase “pulling oneself up by one’s bootstraps”, which is a metaphor for accomplishing an impossible task without any outside help.\nImpossible task: estimating a population parameter using data from only the given sample.\n\n\n\n\n\n\n\n\nNote\n\n\nNote: This notion of saying something about a population parameter using only information from an observed sample is the crux of statistical inference, it is not limited to bootstrapping."
  },
  {
    "objectID": "slides/20-bootstrap.html#bootstrapping-how",
    "href": "slides/20-bootstrap.html#bootstrapping-how",
    "title": "Quantifying uncertainty with bootstrap intervals",
    "section": "Bootstrapping, how?",
    "text": "Bootstrapping, how?\n\nResample with replacement from our data n times, where n is the sample size\nCalculate the sample statistic of interest of the new, resampled (bootstrapped) sample and record the value\nDo this entire process many many times to build the bootstrap distribution"
  },
  {
    "objectID": "slides/20-bootstrap.html#bootstrapping-airbnb-rentals",
    "href": "slides/20-bootstrap.html#bootstrapping-airbnb-rentals",
    "title": "Quantifying uncertainty with bootstrap intervals",
    "section": "Bootstrapping Airbnb rentals",
    "text": "Bootstrapping Airbnb rentals\n\nset.seed(25) \n\nboot_dist_abb &lt;- abb |&gt;\n  specify(response = ppg) |&gt;\n  generate(reps = 100, type = \"bootstrap\") |&gt;\n  calculate(stat = \"mean\")"
  },
  {
    "objectID": "slides/20-bootstrap.html#the-bootstrap-distribution",
    "href": "slides/20-bootstrap.html#the-bootstrap-distribution",
    "title": "Quantifying uncertainty with bootstrap intervals",
    "section": "The bootstrap distribution",
    "text": "The bootstrap distribution\n\nglimpse(boot_dist_abb)\n\nRows: 100\nColumns: 2\n$ replicate &lt;int&gt; 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20,…\n$ stat      &lt;dbl&gt; 73.11500, 78.78333, 80.19333, 83.42000, 70.15000, 73.03667, 76.41333, …"
  },
  {
    "objectID": "slides/20-bootstrap.html#visualzing-the-bootstrap-distribution",
    "href": "slides/20-bootstrap.html#visualzing-the-bootstrap-distribution",
    "title": "Quantifying uncertainty with bootstrap intervals",
    "section": "Visualzing the bootstrap distribution",
    "text": "Visualzing the bootstrap distribution\n\nWhat do you expect the center of the bootstrap distribution to be? Why? Check your guess by visualizing the distribution.\n\n\n\nggplot(boot_dist_abb, aes(x = stat)) + \n  geom_histogram(binwidth = 2)"
  },
  {
    "objectID": "slides/20-bootstrap.html#calculating-the-bootstrap-distribution",
    "href": "slides/20-bootstrap.html#calculating-the-bootstrap-distribution",
    "title": "Quantifying uncertainty with bootstrap intervals",
    "section": "Calculating the bootstrap distribution",
    "text": "Calculating the bootstrap distribution\n\nboot_dist_abb |&gt;\n  summarize(\n    lower = quantile(stat, 0.025),\n    upper = quantile(stat, 0.975)\n  )\n\n# A tibble: 1 × 2\n  lower upper\n  &lt;dbl&gt; &lt;dbl&gt;\n1  64.7  89.6"
  },
  {
    "objectID": "slides/20-bootstrap.html#interpretation",
    "href": "slides/20-bootstrap.html#interpretation",
    "title": "Quantifying uncertainty with bootstrap intervals",
    "section": "Interpretation",
    "text": "Interpretation\n\nThinkSubmit\n\n\n\nWhich of the following is the correct interpretation of the bootstrap interval?\n\n\nThere is a 95% probability the true mean price per guest for an Airbnb in Asheville is between $64.7 and $89.6.\nThere is a 95% probability the price per guest for an Airbnb in Asheville in this sample is between $64.7 and $89.6.\nWe are 95% confident the true mean price per guest for Airbnbs in Asheville is between $64.7 and $89.6.\nWe are 95% confident the price per guest for an Airbnb in Asheville in this sample is between $64.7 and $89.6."
  },
  {
    "objectID": "slides/20-bootstrap.html#leveraging-tidymodels-tools-further",
    "href": "slides/20-bootstrap.html#leveraging-tidymodels-tools-further",
    "title": "Quantifying uncertainty with bootstrap intervals",
    "section": "Leveraging tidymodels tools further",
    "text": "Leveraging tidymodels tools further\nCalculating the observed sample statistic:\n\nobs_stat_abb &lt;- abb |&gt;\n  specify(response = ppg) |&gt;\n  calculate(stat = \"mean\")"
  },
  {
    "objectID": "slides/20-bootstrap.html#leveraging-tidymodels-tools-further-1",
    "href": "slides/20-bootstrap.html#leveraging-tidymodels-tools-further-1",
    "title": "Quantifying uncertainty with bootstrap intervals",
    "section": "Leveraging tidymodels tools further",
    "text": "Leveraging tidymodels tools further\nCalculating the interval:\n\nci_95_abb &lt;- boot_dist_abb |&gt;\n  get_confidence_interval(\n    point_estimate = obs_stat_abb, \n    level = 0.95\n  )"
  },
  {
    "objectID": "slides/20-bootstrap.html#leveraging-tidymodels-tools-further-2",
    "href": "slides/20-bootstrap.html#leveraging-tidymodels-tools-further-2",
    "title": "Quantifying uncertainty with bootstrap intervals",
    "section": "Leveraging tidymodels tools further",
    "text": "Leveraging tidymodels tools further\nVisualizing the interval:\n\nvisualize(boot_dist_abb) +\n  shade_confidence_interval(ci_95_abb)"
  },
  {
    "objectID": "slides/20-bootstrap.html#application-exercise-ae-15-duke-forest-bootstrap",
    "href": "slides/20-bootstrap.html#application-exercise-ae-15-duke-forest-bootstrap",
    "title": "Quantifying uncertainty with bootstrap intervals",
    "section": "Application exercise: ae-15-duke-forest-bootstrap",
    "text": "Application exercise: ae-15-duke-forest-bootstrap\n\n\nGo back to your project called ae.\nIf there are any uncommitted files, commit them, and push.\nWork on ae-15-duke-forest-bootstrap.qmd.\n\n\n\n\n\n\n🔗 sta199-s24.github.io  ·  ❓ Ask on Ed"
  },
  {
    "objectID": "slides/24-quarto.html#while-you-wait-for-class-to-begin",
    "href": "slides/24-quarto.html#while-you-wait-for-class-to-begin",
    "title": "Customizing Quarto reports and presentations",
    "section": "While you wait for class to begin…",
    "text": "While you wait for class to begin…\n\nTake the time to fill out course and TA evaluations!\nWant to nominate a TA as “TA of the Year”? Send an email to dus@stat.duke.edu with your nomination."
  },
  {
    "objectID": "slides/24-quarto.html#before-we-get-started",
    "href": "slides/24-quarto.html#before-we-get-started",
    "title": "Customizing Quarto reports and presentations",
    "section": "Before we get started",
    "text": "Before we get started\n\n\nGo to your ae repo, and pull.\nMake a change, any change, to ae-18-second-to-last-ae.qmd. render, commit, and push."
  },
  {
    "objectID": "slides/24-quarto.html#exam-stats",
    "href": "slides/24-quarto.html#exam-stats",
    "title": "Customizing Quarto reports and presentations",
    "section": "Exam stats",
    "text": "Exam stats\n\nAll scores out of 70\n\n\nExam\nMean\nMedian\nSD\nIQR\n\n\n\n\n1\n61.7\n63\n5.96\n8\n\n\n2\n58\n59\n9.14\n12"
  },
  {
    "objectID": "slides/24-quarto.html#what-is-this",
    "href": "slides/24-quarto.html#what-is-this",
    "title": "Customizing Quarto reports and presentations",
    "section": "What is this?",
    "text": "What is this?"
  },
  {
    "objectID": "slides/24-quarto.html#another-try-what-is-this",
    "href": "slides/24-quarto.html#another-try-what-is-this",
    "title": "Customizing Quarto reports and presentations",
    "section": "Another try – What is this?",
    "text": "Another try – What is this?"
  },
  {
    "objectID": "slides/24-quarto.html#project-presentations-on-monday",
    "href": "slides/24-quarto.html#project-presentations-on-monday",
    "title": "Customizing Quarto reports and presentations",
    "section": "Project presentations on Monday! 🥳",
    "text": "Project presentations on Monday! 🥳\n\nMake sure your presentation is pushed to your GitHub repo before your lab section.\nGet to lab on time, 5 minutes prior if possible – all team members must be present in class and take part in the presentation + Q&A\nFind out your presentation order when you get there.\nDeliver or play your 5-minute presentation – we’ll cut you off at 5 minutes\nAnswer questions during your own Q&A or ask questions to others.\nFill out feedback forms while you listen to others’ presentations."
  },
  {
    "objectID": "slides/24-quarto.html#project-write-ups-due-wednesday",
    "href": "slides/24-quarto.html#project-write-ups-due-wednesday",
    "title": "Customizing Quarto reports and presentations",
    "section": "Project write-ups due Wednesday",
    "text": "Project write-ups due Wednesday\n\nThere’s a good chance you’ll be done with these on Monday as well\nBut you might want to improve your write-up based on inspiration from other teams’ presentations and/or ideas that came up during your Q&A.\nProject repos will close at 8:00am on Wednesday. There is no Gradescope submission, just push your final edits to GitHub."
  },
  {
    "objectID": "slides/24-quarto.html#expectations",
    "href": "slides/24-quarto.html#expectations",
    "title": "Customizing Quarto reports and presentations",
    "section": "Expectations",
    "text": "Expectations\n\nThe goal of this project is for you to demonstrate proficiency in the techniques we have covered in this class (and beyond, if you like) and apply them to a novel dataset in a meaningful way.\n\n\n\n\n\n\n\nNote\n\n\nBeyond, if you like – “you” is the whole team!\n\n\n\n\n\n\n\n\n\n\nRead more\n\n\nhttps://sta199-s24.github.io/project/description.html#introduction"
  },
  {
    "objectID": "slides/24-quarto.html#expectations-1",
    "href": "slides/24-quarto.html#expectations-1",
    "title": "Customizing Quarto reports and presentations",
    "section": "Expectations",
    "text": "Expectations\n\nThe goal is not to do an exhaustive data analysis i.e., do not calculate every statistic and procedure you have learned for every variable, but rather let me know that you are proficient at asking meaningful questions and answering them with results of data analysis, that you are proficient in using R, and that you are proficient at interpreting and presenting the results.\n\n\n\n\n\n\n\n\nRead more\n\n\nhttps://sta199-s24.github.io/project/description.html#introduction"
  },
  {
    "objectID": "slides/24-quarto.html#requirements",
    "href": "slides/24-quarto.html#requirements",
    "title": "Customizing Quarto reports and presentations",
    "section": "Requirements",
    "text": "Requirements\n\nFocus on methods that help you begin to answer your research questions. You do not have to apply every statistical procedure we learned.\n\n\n\n\n\n\n\n\nRead more\n\n\nhttps://sta199-s24.github.io/project/description.html#introduction"
  },
  {
    "objectID": "slides/24-quarto.html#tip",
    "href": "slides/24-quarto.html#tip",
    "title": "Customizing Quarto reports and presentations",
    "section": "Tip",
    "text": "Tip\n\nCritique your own methods and provide suggestions for improving your analysis. Discuss issues pertaining to the reliability and validity of your data, and appropriateness of the statistical analysis.\n\n\n\n\n\n\n\nTip\n\n\nYou can critique the current research without talking about a hypothetical future research,.\n\n\n\n\n\n\n\n\n\n\nRead more\n\n\nhttps://sta199-s24.github.io/project/description.html#introduction"
  },
  {
    "objectID": "slides/24-quarto.html#how-many-plots",
    "href": "slides/24-quarto.html#how-many-plots",
    "title": "Customizing Quarto reports and presentations",
    "section": "How many plots",
    "text": "How many plots\n\nYou do not need to visualize all of the data at once. A single high-quality visualization will receive a much higher grade than a large number of poor-quality visualizations.\n\n\n\n\n\n\n\nNote\n\n\nThere is no specific, secret number of visualizations I’m expecting, the right number is the number that it takes to answer your question.\n\n\n\n\n\n\n\n\n\n\nRead more\n\n\nhttps://sta199-s24.github.io/project/description.html#introduction"
  },
  {
    "objectID": "slides/24-quarto.html#submission",
    "href": "slides/24-quarto.html#submission",
    "title": "Customizing Quarto reports and presentations",
    "section": "Submission",
    "text": "Submission\n\nYou will not be submitting anything on Gradescope for the project. Submission of these deliverables will happen on GitHub and feedback will be provided as GitHub issues that you need to engage with and close. The collection of the documents in your GitHub repo will create a webpage for your project. To create the webpage go to the Build tab in RStudio, and click on Render Website.\n\n\n\n\n\n\n\n\nRead more\n\n\nhttps://sta199-s24.github.io/project/description.html#introduction"
  },
  {
    "objectID": "slides/24-quarto.html#writeup",
    "href": "slides/24-quarto.html#writeup",
    "title": "Customizing Quarto reports and presentations",
    "section": "Writeup",
    "text": "Writeup\n\n\nIs there any paper that is required as well as the presentation?\nWhat is the project write up?\nAre write ups usually around the 10 page limit?\nIs there a recommended outline to the project?\n\n\n\n\n\n\n\n\nRead more\n\n\nhttps://sta199-s24.github.io/project/4-writeup-presentation.html#report-components"
  },
  {
    "objectID": "slides/24-quarto.html#grading-rubric",
    "href": "slides/24-quarto.html#grading-rubric",
    "title": "Customizing Quarto reports and presentations",
    "section": "Grading / rubric",
    "text": "Grading / rubric\n\n\n\n\n\n\nRead more\n\n\n\nOverall: https://sta199-s24.github.io/project/description.html#grading-summary\nWrite-up: https://sta199-s24.github.io/project/4-writeup-presentation.html#report-components\nPresentation: https://sta199-s24.github.io/project/4-writeup-presentation.html#presentation-slides"
  },
  {
    "objectID": "slides/24-quarto.html#something-else",
    "href": "slides/24-quarto.html#something-else",
    "title": "Customizing Quarto reports and presentations",
    "section": "Something else 💛",
    "text": "Something else 💛\n\nI have enjoyed this semester, and I want to continue learning R. What classes do you recommend I take to continue my learning?\n\n\nSTA 323: Statistical computing - R as a programming language\nSTA 210: Regression analysis - for anyone interested in applications\nSTA 221: Regression analysis - for majors + minors + anyone interested in the theory as well as applications"
  },
  {
    "objectID": "slides/24-quarto.html#your-project-write-up-with-quarto",
    "href": "slides/24-quarto.html#your-project-write-up-with-quarto",
    "title": "Customizing Quarto reports and presentations",
    "section": "Your project write-up with Quarto",
    "text": "Your project write-up with Quarto\n\nFigure sizing: fig-width, fig-height, etc. in code chunks.\nFigure layout: layout-ncol for placing multiple figures in a chunk.\nFurther control over figure layout with the patchwork package.\nChunk options around what makes it in your final report: message, echo, etc.\nCitations.\nFinalizing your report with echo: false."
  },
  {
    "objectID": "slides/24-quarto.html#building-your-project-website-with-quarto",
    "href": "slides/24-quarto.html#building-your-project-website-with-quarto",
    "title": "Customizing Quarto reports and presentations",
    "section": "Building your project website with Quarto",
    "text": "Building your project website with Quarto\n\nThe docs folder.\nMaking sure your website reflects your latest changes.\nCustomizing the look of your website."
  },
  {
    "objectID": "slides/24-quarto.html#slides",
    "href": "slides/24-quarto.html#slides",
    "title": "Customizing Quarto reports and presentations",
    "section": "Slides",
    "text": "Slides\n\nOption 1: Make your slides not in Quarto but make sure they’re available in your Quarto project website.\nOption 2: Make your slides with Quarto."
  },
  {
    "objectID": "slides/24-quarto.html#before-you-leave",
    "href": "slides/24-quarto.html#before-you-leave",
    "title": "Customizing Quarto reports and presentations",
    "section": "Before you leave",
    "text": "Before you leave\nif you haven’t yet done so…\n\n\nGo to your ae repo, and pull.\nMake a change, any change, to ae-18-second-to-last-ae.qmd. render, commit, and push.\n\n\n\n\n\n\n🔗 sta199-s24.github.io  ·  ❓ Ask on Ed"
  },
  {
    "objectID": "slides/23-communicate.html#while-you-wait-for-class-to-begin",
    "href": "slides/23-communicate.html#while-you-wait-for-class-to-begin",
    "title": "Communicating data science results effectively",
    "section": "While you wait for class to begin…",
    "text": "While you wait for class to begin…\n\nAny questions about the project?"
  },
  {
    "objectID": "slides/23-communicate.html#announcements",
    "href": "slides/23-communicate.html#announcements",
    "title": "Communicating data science results effectively",
    "section": "Announcements",
    "text": "Announcements\n\nMy office hours this week: Office hours today 1:30 - 2:30 pm today\nRemaining due dates:\n\n\nProject presentations next Monday in lab – all team members must be present.\nProject write-up and final repo due 8 am Wed, April 24 (you get an extra day!) – you will lose access to your repo at this time.\nRemaining application exercises due on the usual schedule."
  },
  {
    "objectID": "slides/23-communicate.html#extra-credit",
    "href": "slides/23-communicate.html#extra-credit",
    "title": "Communicating data science results effectively",
    "section": "“Extra credit”",
    "text": "“Extra credit”\n\nPut any additional time into your project, MUCH HIGHER return on investment than any extra credit I can offer\nBut… AEs in class on Thursday and next Tuesday will be just you checking in saying you’re here. You’ll get to practice pull, commit, render, push, but no real content needed. So that’s two AEs you can get credit for simply by being here and doing no additional work than pull, commit (a tiny change), render, push during class."
  },
  {
    "objectID": "slides/23-communicate.html#project",
    "href": "slides/23-communicate.html#project",
    "title": "Communicating data science results effectively",
    "section": "Project",
    "text": "Project\n\nReview peer evaluations left by your peers, implement updates as you see fit, close the issue once you review them.\nHave a clear plan for who is doing what, open issues on your repo, and assign them to individuals who can then close the issues as they finish a task.\nSchedule at least one team meting between today and your presentation to practice your presentation together.\n\n\nAny project questions?"
  },
  {
    "objectID": "slides/23-communicate.html#take-a-sad-plot-make-it-better",
    "href": "slides/23-communicate.html#take-a-sad-plot-make-it-better",
    "title": "Communicating data science results effectively",
    "section": "Take A Sad Plot & Make It Better",
    "text": "Take A Sad Plot & Make It Better\n\n\n\nSource: https://alison.netlify.app/rlm-sad-plot-better"
  },
  {
    "objectID": "slides/23-communicate.html#application-exercise-ae-17-effective-dataviz",
    "href": "slides/23-communicate.html#application-exercise-ae-17-effective-dataviz",
    "title": "Communicating data science results effectively",
    "section": "Application exercise: ae-17-effective-dataviz",
    "text": "Application exercise: ae-17-effective-dataviz\n\n\nGo to your project called ae.\nIf there are any uncommitted files, commit them, and push. Then pull.\nWork on ae-17-effective-dataviz.qmd."
  },
  {
    "objectID": "slides/23-communicate.html#recap",
    "href": "slides/23-communicate.html#recap",
    "title": "Communicating data science results effectively",
    "section": "Recap",
    "text": "Recap\n\n\nRepresent percentages as parts of a whole\nPlace variables representing time on the x-axis when possible\nPay attention to data types, e.g., represent time as time on a continuous scale, not years as levels of a categorical variable\nPrefer direct labeling over legends\nUse accessible colors\nUse color to draw attention\nPick a purpose and label, color, annotate for that purpose\nCommunicate your main message directly in the plot labels\nSimplify before you call it done (a.k.a. “Before you leave the house, look in the mirror and take one thing off”)\n\n\n\n\n\n\n🔗 sta199-s24.github.io  ·  ❓ Ask on Ed"
  },
  {
    "objectID": "slides/03-visualizing-data.html#while-you-wait",
    "href": "slides/03-visualizing-data.html#while-you-wait",
    "title": "Visualizing various types of data",
    "section": "While you wait…",
    "text": "While you wait…\nQuestions from the prepare materials?"
  },
  {
    "objectID": "slides/03-visualizing-data.html#questions-from-last-time",
    "href": "slides/03-visualizing-data.html#questions-from-last-time",
    "title": "Visualizing various types of data",
    "section": "Questions from last time",
    "text": "Questions from last time\n\n…"
  },
  {
    "objectID": "slides/03-visualizing-data.html#announcements",
    "href": "slides/03-visualizing-data.html#announcements",
    "title": "Visualizing various types of data",
    "section": "Announcements",
    "text": "Announcements\n\n…"
  },
  {
    "objectID": "slides/03-visualizing-data.html#violin-plots",
    "href": "slides/03-visualizing-data.html#violin-plots",
    "title": "Visualizing various types of data",
    "section": "Violin plots",
    "text": "Violin plots\n\n\n\nggplot(\n  penguins,\n  aes(\n    x = species,\n    y = body_mass_g\n    )\n  ) +\n  geom_violin()\n\nWarning: Removed 2 rows containing non-finite values (`stat_ydensity()`).\n\n\n\n\n\nWarning: Removed 2 rows containing non-finite values (`stat_ydensity()`)."
  },
  {
    "objectID": "slides/03-visualizing-data.html#multiple-geoms",
    "href": "slides/03-visualizing-data.html#multiple-geoms",
    "title": "Visualizing various types of data",
    "section": "Multiple geoms",
    "text": "Multiple geoms\n\n\n\nggplot(\n  penguins,\n  aes(\n    x = species,\n    y = body_mass_g\n    )\n  ) +\n  geom_violin() +\n  geom_point()\n\nWarning: Removed 2 rows containing non-finite values (`stat_ydensity()`).\n\n\nWarning: Removed 2 rows containing missing values (`geom_point()`).\n\n\n\n\n\nWarning: Removed 2 rows containing non-finite values (`stat_ydensity()`).\n\n\nWarning: Removed 2 rows containing missing values (`geom_point()`)."
  },
  {
    "objectID": "slides/03-visualizing-data.html#multiple-geoms-1",
    "href": "slides/03-visualizing-data.html#multiple-geoms-1",
    "title": "Visualizing various types of data",
    "section": "Multiple geoms",
    "text": "Multiple geoms\n\n\n\nggplot(\n  penguins,\n  aes(\n    x = species,\n    y = body_mass_g\n    )\n  ) +\n  geom_violin() +\n  geom_jitter()\n\nWarning: Removed 2 rows containing non-finite values (`stat_ydensity()`).\n\n\nWarning: Removed 2 rows containing missing values (`geom_point()`).\n\n\n\n\n\nWarning: Removed 2 rows containing non-finite values (`stat_ydensity()`).\n\n\nWarning: Removed 2 rows containing missing values (`geom_point()`)."
  },
  {
    "objectID": "slides/03-visualizing-data.html#multiple-geoms-aesthetics",
    "href": "slides/03-visualizing-data.html#multiple-geoms-aesthetics",
    "title": "Visualizing various types of data",
    "section": "Multiple geoms + aesthetics",
    "text": "Multiple geoms + aesthetics\n\n\n\nggplot(\n  penguins,\n  aes(\n    x = species,\n    y = body_mass_g,\n    color = species\n    )\n  ) +\n  geom_violin() +\n  geom_jitter()\n\nWarning: Removed 2 rows containing non-finite values (`stat_ydensity()`).\n\n\nWarning: Removed 2 rows containing missing values (`geom_point()`).\n\n\n\n\n\nWarning: Removed 2 rows containing non-finite values (`stat_ydensity()`).\n\n\nWarning: Removed 2 rows containing missing values (`geom_point()`)."
  },
  {
    "objectID": "slides/03-visualizing-data.html#multiple-geoms-aesthetics-1",
    "href": "slides/03-visualizing-data.html#multiple-geoms-aesthetics-1",
    "title": "Visualizing various types of data",
    "section": "Multiple geoms + aesthetics",
    "text": "Multiple geoms + aesthetics\n\n\n\nggplot(\n  penguins,\n  aes(\n    x = species,\n    y = body_mass_g,\n    color = species\n    )\n  ) +\n  geom_violin() +\n  geom_jitter() +\n  theme(\n    legend.position = \"none\"\n  )\n\nWarning: Removed 2 rows containing non-finite values (`stat_ydensity()`).\n\n\nWarning: Removed 2 rows containing missing values (`geom_point()`).\n\n\n\n\n\nWarning: Removed 2 rows containing non-finite values (`stat_ydensity()`).\n\n\nWarning: Removed 2 rows containing missing values (`geom_point()`)."
  },
  {
    "objectID": "slides/03-visualizing-data.html#multiple-geoms-aesthetics-2",
    "href": "slides/03-visualizing-data.html#multiple-geoms-aesthetics-2",
    "title": "Visualizing various types of data",
    "section": "Multiple geoms + aesthetics",
    "text": "Multiple geoms + aesthetics\n\n\n\nggplot(\n  penguins,\n  aes(\n    x = species,\n    y = body_mass_g,\n    color = species\n    )\n  ) +\n  geom_violin() +\n  geom_jitter() +\n  theme(\n    legend.position = \"none\"\n  ) +\n  scale_color_colorblind()\n\nWarning: Removed 2 rows containing non-finite values (`stat_ydensity()`).\n\n\nWarning: Removed 2 rows containing missing values (`geom_point()`).\n\n\n\n\n\nWarning: Removed 2 rows containing non-finite values (`stat_ydensity()`).\n\n\nWarning: Removed 2 rows containing missing values (`geom_point()`).\n\n\n\n\n\n\n\n\n\n\ntitle: “Visualizing various types of data” subtitle: “Lecture 3” date: “January 23, 2024” format: revealjs\n\n\nWarm up\n\n\n\nWhile you wait…\nQuestions from the prepare materials?\n\n\n\nQuestions from last time\n\nIs there any code in the videos that is not in the readings? Yes and no. There is no substantial functionality introduced in the videos that is not also in the readings, however the examples in the videos are different than the ones in the reading.\nWhat are all of the geoms we need to know? You don’t need to “memorize” or even “know” all o the geoms available in the ggplot2 package, but you can find a list of them on the ggplot2 cheat sheet or on the reference page.\nCould you please clarify what situations it would be appropriate to use each geom function? Today’s topic! And think about it as “what plot should I make for which type of variable”.\n\n\n\nAnnouncements\n\nAEs this week should be submitted by midnight on Sunday. To “submit”, commit and push at least once to your ae repo for each application exercise this week.\nIf you email me, please put STA 199 in the subject.\n\n\n\n\nFrom last time\n\n\n\nae-02-bechdel-dataviz\n\n\nIf you were in class last Thursday:\nand followed along with the application exercise…\nGo to the project navigator in RStudio (top right corner of your RStudio window) and open the project called ae. If there are any uncommitted files, commit them so you can start with a clean slate.\n\nIf you missed class last Thursday:\nor didn’t follow along with the application exercise…\nGo to the course GitHub org and find your ae repo. Clone the repo in your container, open the Quarto document called ae-02-bechdel.\n\n\n\n\nRecap of AE\n\nConstruct plots with ggplot().\nLayers of ggplots are separated by +s.\nThe formula is (almost) always as follows:\n\n\nggplot(DATA, aes(x = X-VAR, y = Y-VAR, ...)) +\n  geom_XXX()\n\n\nAesthetic attributes of a geometries (color, size, transparency, etc.) can be mapped to variables in the data or set by the user, e.g. color = binary vs. color = \"pink\".\nUse facet_wrap() when faceting (creating small multiples) by one variable and facet_grid() when faceting by two variables.\n\n\n\n\nVisualizing various types of data\n\n\n\nIdentifying variable types\n\nQuestionVote\n\n\n\nIdentify the type of each of the following variables.\n\nFavorite food\nNumber of classes you’re taking this semester\nZip code\nAge\n\n\n\n\n\n\n\n\n\n\nThe way data is displayed matters\n\nWhat do these three plots show?\n\n\n\n\n\nVisualizing penguins\n\n\n\n\nlibrary(tidyverse)\nlibrary(palmerpenguins)\nlibrary(ggthemes)\n\npenguins\n\n# A tibble: 344 × 8\n   species island   bill_length_mm bill_depth_mm flipper_length_mm body_mass_g sex    year\n   &lt;fct&gt;   &lt;fct&gt;             &lt;dbl&gt;         &lt;dbl&gt;             &lt;int&gt;       &lt;int&gt; &lt;fct&gt; &lt;int&gt;\n 1 Adelie  Torgers…           39.1          18.7               181        3750 male   2007\n 2 Adelie  Torgers…           39.5          17.4               186        3800 fema…  2007\n 3 Adelie  Torgers…           40.3          18                 195        3250 fema…  2007\n 4 Adelie  Torgers…           NA            NA                  NA          NA &lt;NA&gt;   2007\n 5 Adelie  Torgers…           36.7          19.3               193        3450 fema…  2007\n 6 Adelie  Torgers…           39.3          20.6               190        3650 male   2007\n 7 Adelie  Torgers…           38.9          17.8               181        3625 fema…  2007\n 8 Adelie  Torgers…           39.2          19.6               195        4675 male   2007\n 9 Adelie  Torgers…           34.1          18.1               193        3475 &lt;NA&gt;   2007\n10 Adelie  Torgers…           42            20.2               190        4250 &lt;NA&gt;   2007\n# ℹ 334 more rows\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nUnivariate analysis\n\n\n\nUnivariate analysis\nAnalyzing a single variable:\n\nNumerical: histogram, box plot, density plot, etc.\nCategorical: bar plot, pie chart, etc.\n\n\n\nHistogram - Step 1\n\n\n\nggplot(\n  penguins\n  )\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nHistogram - Step 2\n\n\n\nggplot(\n  penguins,\n  aes(x = body_mass_g)\n  )\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nHistogram - Step 3\n\n\n\nggplot(\n  penguins,\n  aes(x = body_mass_g)\n  ) +\n  geom_histogram()\n\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n\n\nWarning: Removed 2 rows containing non-finite values (`stat_bin()`).\n\n\n\n\n\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n\n\nWarning: Removed 2 rows containing non-finite values (`stat_bin()`).\n\n\n\n\n\n\n\n\n\n\n\n\n\nHistogram - Step 4\n\n\n\nggplot(\n  penguins,\n  aes(x = body_mass_g)\n  ) +\n  geom_histogram(\n    binwidth = 250\n  )\n\nWarning: Removed 2 rows containing non-finite values (`stat_bin()`).\n\n\n\n\n\nWarning: Removed 2 rows containing non-finite values (`stat_bin()`).\n\n\n\n\n\n\n\n\n\n\n\n\n\nHistogram - Step 5\n\n\n\nggplot(\n  penguins,\n  aes(x = body_mass_g)\n  ) +\n  geom_histogram(\n    binwidth = 250\n  ) +\n  labs(\n    title = \"Weights of penguins\",\n    x = \"Weight (grams)\",\n    y = \"Count\"\n  )\n\nWarning: Removed 2 rows containing non-finite values (`stat_bin()`).\n\n\n\n\n\nWarning: Removed 2 rows containing non-finite values (`stat_bin()`).\n\n\n\n\n\n\n\n\n\n\n\n\n\nBoxplot - Step 1\n\n\n\nggplot(\n  penguins\n  )\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nBoxplot - Step 2\n\n\n\nggplot(\n  penguins,\n  aes(x = body_mass_g)\n  )\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nBoxplot - Step 3\n\n\n\nggplot(\n  penguins,\n  aes(y = body_mass_g)\n  ) +\n  geom_boxplot()\n\nWarning: Removed 2 rows containing non-finite values (`stat_boxplot()`).\n\n\n\n\n\nWarning: Removed 2 rows containing non-finite values (`stat_boxplot()`).\n\n\n\n\n\n\n\n\n\n\n\n\n\nBoxplot - Step 4\n\n\n\nggplot(\n  penguins,\n  aes(x = body_mass_g)\n  ) +\n  geom_boxplot()\n\nWarning: Removed 2 rows containing non-finite values (`stat_boxplot()`).\n\n\n\n\n\nWarning: Removed 2 rows containing non-finite values (`stat_boxplot()`).\n\n\n\n\n\n\n\n\n\n\n\n\n\nBoxplot - Step 5\n\n\n\nggplot(\n  penguins,\n  aes(x = body_mass_g)\n  ) +\n  geom_boxplot() +\n  labs(\n    x = \"Weight (grams)\",\n    y = NULL\n  )\n\nWarning: Removed 2 rows containing non-finite values (`stat_boxplot()`).\n\n\n\n\n\nWarning: Removed 2 rows containing non-finite values (`stat_boxplot()`).\n\n\n\n\n\n\n\n\n\n\n\n\n\nDensity plot - Step 1\n\n\n\nggplot(\n  penguins\n  )\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nDensity plot - Step 2\n\n\n\nggplot(\n  penguins,\n  aes(x = body_mass_g)\n  )\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nDensity plot - Step 3\n\n\n\nggplot(\n  penguins,\n  aes(x = body_mass_g)\n  ) +\n  geom_density()\n\nWarning: Removed 2 rows containing non-finite values (`stat_density()`).\n\n\n\n\n\nWarning: Removed 2 rows containing non-finite values (`stat_density()`).\n\n\n\n\n\n\n\n\n\n\n\n\n\nDensity plot - Step 4\n\n\n\nggplot(\n  penguins,\n  aes(x = body_mass_g)\n  ) +\n  geom_density(\n    fill = \"darkslategray1\"\n  )\n\nWarning: Removed 2 rows containing non-finite values (`stat_density()`).\n\n\n\n\n\nWarning: Removed 2 rows containing non-finite values (`stat_density()`).\n\n\n\n\n\n\n\n\n\n\n\n\n\nDensity plot - Step 5\n\n\n\nggplot(\n  penguins,\n  aes(x = body_mass_g)\n  ) +\n  geom_density(\n    fill = \"darkslategray1\",\n    linewidth = 2\n  )\n\nWarning: Removed 2 rows containing non-finite values (`stat_density()`).\n\n\n\n\n\nWarning: Removed 2 rows containing non-finite values (`stat_density()`).\n\n\n\n\n\n\n\n\n\n\n\n\n\nDensity plot - Step 6\n\n\n\nggplot(\n  penguins,\n  aes(x = body_mass_g)\n  ) +\n  geom_density(\n    fill = \"darkslategray1\",\n    linewidth = 2,\n    color = \"darkorchid3\"\n  )\n\nWarning: Removed 2 rows containing non-finite values (`stat_density()`).\n\n\n\n\n\nWarning: Removed 2 rows containing non-finite values (`stat_density()`).\n\n\n\n\n\n\n\n\n\n\n\n\n\nDensity plot - Step 7\n\n\n\nggplot(\n  penguins,\n  aes(x = body_mass_g)\n  ) +\n  geom_density(\n    fill = \"darkslategray1\",\n    linewidth = 2,\n    color = \"darkorchid3\",\n    alpha = 0.5\n  )\n\nWarning: Removed 2 rows containing non-finite values (`stat_density()`).\n\n\n\n\n\nWarning: Removed 2 rows containing non-finite values (`stat_density()`).\n\n\n\n\n\n\n\n\n\n\n\n\n\nWeights of penguins\n\nQuestionVote\n\n\n\n\n\n\n\nWarning: Removed 2 rows containing non-finite values (`stat_bin()`).\n\n\n\n\n\n\n\n\n\n\n\nWarning: Removed 2 rows containing non-finite values (`stat_boxplot()`).\n\n\n\n\n\n\n\n\n\n\n\nWarning: Removed 2 rows containing non-finite values (`stat_density()`).\n\n\n\n\n\n\n\n\n\n\nTRUE / FALSE\n\nThe distribution of penguin weights in this sample is left skewed.\nThe distribution of penguin weights in this sample is unimodal.\n\n\n\n\n\n\n\n\n\n\n\n\n\nBivariate analysis\n\n\n\nBivariate analysis\nAnalyzing the relationship between two variables:\n\nNumerical + numerical: scatterplot\nNumerical + categorical: side-by-side box plots, violin plots, etc.\nCategorical + categorical: stacked bar plots\nUsing an aesthetic (e.g., fill, color, shape, etc.) or facets to represent the second variable in any plot\n\n\n\nSide-by-side box plots\n\n\n\nggplot(\n  penguins,\n  aes(\n    x = body_mass_g,\n    y = species\n    )\n  ) +\n  geom_boxplot()\n\nWarning: Removed 2 rows containing non-finite values (`stat_boxplot()`).\n\n\n\n\n\nWarning: Removed 2 rows containing non-finite values (`stat_boxplot()`).\n\n\n\n\n\n\n\n\n\n\n\n\n\nDensity plots\n\n\n\nggplot(\n  penguins,\n  aes(\n    x = body_mass_g,\n    color = species\n    )\n  ) +\n  geom_density()\n\nWarning: Removed 2 rows containing non-finite values (`stat_density()`).\n\n\n\n\n\nWarning: Removed 2 rows containing non-finite values (`stat_density()`).\n\n\n\n\n\n\n\n\n\n\n\n\n\nDensity plots\n\n\n\nggplot(\n  penguins,\n  aes(\n    x = body_mass_g,\n    color = species,\n    fill = species\n    )\n  ) +\n  geom_density()\n\nWarning: Removed 2 rows containing non-finite values (`stat_density()`).\n\n\n\n\n\nWarning: Removed 2 rows containing non-finite values (`stat_density()`).\n\n\n\n\n\n\n\n\n\n\n\n\n\nDensity plots\n\n\n\nggplot(\n  penguins,\n  aes(\n    x = body_mass_g,\n    color = species,\n    fill = species\n    )\n  ) +\n  geom_density(\n    alpha = 0.5\n  )\n\nWarning: Removed 2 rows containing non-finite values (`stat_density()`).\n\n\n\n\n\nWarning: Removed 2 rows containing non-finite values (`stat_density()`).\n\n\n\n\n\n\n\n\n\n\n\n\n\nDensity plots\n\n\n\nggplot(\n  penguins,\n  aes(\n    x = body_mass_g,\n    color = species,\n    fill = species\n    )\n  ) +\n  geom_density(\n    alpha = 0.5\n  ) +\n  theme(\n    legend.position = \"bottom\"\n  )\n\nWarning: Removed 2 rows containing non-finite values (`stat_density()`).\n\n\n\n\n\nWarning: Removed 2 rows containing non-finite values (`stat_density()`).\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n🔗 sta199-s24.github.io\n\n\n\n\n\n\n\nSource: #barbarplots\n\nArtwork by @allison_horst."
  },
  {
    "objectID": "slides/03-visualizing-data.html#while-you-wait-1",
    "href": "slides/03-visualizing-data.html#while-you-wait-1",
    "title": "Visualizing various types of data",
    "section": "While you wait…",
    "text": "While you wait…\nQuestions from the prepare materials?"
  },
  {
    "objectID": "slides/03-visualizing-data.html#questions-from-last-time-1",
    "href": "slides/03-visualizing-data.html#questions-from-last-time-1",
    "title": "Visualizing various types of data",
    "section": "Questions from last time",
    "text": "Questions from last time\n\nIs there any code in the videos that is not in the readings? Yes and no. There is no substantial functionality introduced in the videos that is not also in the readings, however the examples in the videos are different than the ones in the reading.\nWhat are all of the geoms we need to know? You don’t need to “memorize” or even “know” all o the geoms available in the ggplot2 package, but you can find a list of them on the ggplot2 cheat sheet or on the reference page.\nCould you please clarify what situations it would be appropriate to use each geom function? Today’s topic! And think about it as “what plot should I make for which type of variable”."
  },
  {
    "objectID": "slides/03-visualizing-data.html#announcements-1",
    "href": "slides/03-visualizing-data.html#announcements-1",
    "title": "Visualizing various types of data",
    "section": "Announcements",
    "text": "Announcements\n\nAEs this week should be submitted by midnight on Sunday. To “submit”, commit and push at least once to your ae repo for each application exercise this week.\nIf you email me, please put STA 199 in the subject."
  },
  {
    "objectID": "slides/03-visualizing-data.html#ae-02-bechdel-dataviz",
    "href": "slides/03-visualizing-data.html#ae-02-bechdel-dataviz",
    "title": "Visualizing various types of data",
    "section": "ae-02-bechdel-dataviz",
    "text": "ae-02-bechdel-dataviz\n\n\nIf you were in class last Thursday:\nand followed along with the application exercise…\nGo to the project navigator in RStudio (top right corner of your RStudio window) and open the project called ae. If there are any uncommitted files, commit them so you can start with a clean slate.\n\nIf you missed class last Thursday:\nor didn’t follow along with the application exercise…\nGo to the course GitHub org and find your ae repo. Clone the repo in your container, open the Quarto document called ae-02-bechdel."
  },
  {
    "objectID": "slides/03-visualizing-data.html#recap-of-ae",
    "href": "slides/03-visualizing-data.html#recap-of-ae",
    "title": "Visualizing various types of data",
    "section": "Recap of AE",
    "text": "Recap of AE\n\nConstruct plots with ggplot().\nLayers of ggplots are separated by +s.\nThe formula is (almost) always as follows:\n\n\nggplot(DATA, aes(x = X-VAR, y = Y-VAR, ...)) +\n  geom_XXX()\n\n\nAesthetic attributes of a geometries (color, size, transparency, etc.) can be mapped to variables in the data or set by the user, e.g. color = binary vs. color = \"pink\".\nUse facet_wrap() when faceting (creating small multiples) by one variable and facet_grid() when faceting by two variables."
  },
  {
    "objectID": "slides/03-visualizing-data.html#identifying-variable-types",
    "href": "slides/03-visualizing-data.html#identifying-variable-types",
    "title": "Visualizing various types of data",
    "section": "Identifying variable types",
    "text": "Identifying variable types\n\nQuestionVote\n\n\n\nIdentify the type of each of the following variables.\n\nFavorite food\nNumber of classes you’re taking this semester\nZip code\nAge"
  },
  {
    "objectID": "slides/03-visualizing-data.html#the-way-data-is-displayed-matters",
    "href": "slides/03-visualizing-data.html#the-way-data-is-displayed-matters",
    "title": "Visualizing various types of data",
    "section": "The way data is displayed matters",
    "text": "The way data is displayed matters\n\nWhat do these three plots show?"
  },
  {
    "objectID": "slides/03-visualizing-data.html#visualizing-penguins",
    "href": "slides/03-visualizing-data.html#visualizing-penguins",
    "title": "Visualizing various types of data",
    "section": "Visualizing penguins",
    "text": "Visualizing penguins\n\n\n\n\nlibrary(tidyverse)\nlibrary(palmerpenguins)\nlibrary(ggthemes)\n\npenguins\n\n# A tibble: 344 × 8\n   species island   bill_length_mm bill_depth_mm flipper_length_mm body_mass_g sex    year\n   &lt;fct&gt;   &lt;fct&gt;             &lt;dbl&gt;         &lt;dbl&gt;             &lt;int&gt;       &lt;int&gt; &lt;fct&gt; &lt;int&gt;\n 1 Adelie  Torgers…           39.1          18.7               181        3750 male   2007\n 2 Adelie  Torgers…           39.5          17.4               186        3800 fema…  2007\n 3 Adelie  Torgers…           40.3          18                 195        3250 fema…  2007\n 4 Adelie  Torgers…           NA            NA                  NA          NA &lt;NA&gt;   2007\n 5 Adelie  Torgers…           36.7          19.3               193        3450 fema…  2007\n 6 Adelie  Torgers…           39.3          20.6               190        3650 male   2007\n 7 Adelie  Torgers…           38.9          17.8               181        3625 fema…  2007\n 8 Adelie  Torgers…           39.2          19.6               195        4675 male   2007\n 9 Adelie  Torgers…           34.1          18.1               193        3475 &lt;NA&gt;   2007\n10 Adelie  Torgers…           42            20.2               190        4250 &lt;NA&gt;   2007\n# ℹ 334 more rows"
  },
  {
    "objectID": "slides/03-visualizing-data.html#univariate-analysis-1",
    "href": "slides/03-visualizing-data.html#univariate-analysis-1",
    "title": "Visualizing various types of data",
    "section": "Univariate analysis",
    "text": "Univariate analysis\nAnalyzing a single variable:\n\nNumerical: histogram, box plot, density plot, etc.\nCategorical: bar plot, pie chart, etc."
  },
  {
    "objectID": "slides/03-visualizing-data.html#histogram---step-1",
    "href": "slides/03-visualizing-data.html#histogram---step-1",
    "title": "Visualizing various types of data",
    "section": "Histogram - Step 1",
    "text": "Histogram - Step 1\n\n\n\nggplot(\n  penguins\n  )"
  },
  {
    "objectID": "slides/03-visualizing-data.html#histogram---step-2",
    "href": "slides/03-visualizing-data.html#histogram---step-2",
    "title": "Visualizing various types of data",
    "section": "Histogram - Step 2",
    "text": "Histogram - Step 2\n\n\n\nggplot(\n  penguins,\n  aes(x = body_mass_g)\n  )"
  },
  {
    "objectID": "slides/03-visualizing-data.html#histogram---step-3",
    "href": "slides/03-visualizing-data.html#histogram---step-3",
    "title": "Visualizing various types of data",
    "section": "Histogram - Step 3",
    "text": "Histogram - Step 3\n\n\n\nggplot(\n  penguins,\n  aes(x = body_mass_g)\n  ) +\n  geom_histogram()\n\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n\n\nWarning: Removed 2 rows containing non-finite values (`stat_bin()`).\n\n\n\n\n\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n\n\nWarning: Removed 2 rows containing non-finite values (`stat_bin()`)."
  },
  {
    "objectID": "slides/03-visualizing-data.html#histogram---step-4",
    "href": "slides/03-visualizing-data.html#histogram---step-4",
    "title": "Visualizing various types of data",
    "section": "Histogram - Step 4",
    "text": "Histogram - Step 4\n\n\n\nggplot(\n  penguins,\n  aes(x = body_mass_g)\n  ) +\n  geom_histogram(\n    binwidth = 250\n  )\n\nWarning: Removed 2 rows containing non-finite values (`stat_bin()`).\n\n\n\n\n\nWarning: Removed 2 rows containing non-finite values (`stat_bin()`)."
  },
  {
    "objectID": "slides/03-visualizing-data.html#histogram---step-5",
    "href": "slides/03-visualizing-data.html#histogram---step-5",
    "title": "Visualizing various types of data",
    "section": "Histogram - Step 5",
    "text": "Histogram - Step 5\n\n\n\nggplot(\n  penguins,\n  aes(x = body_mass_g)\n  ) +\n  geom_histogram(\n    binwidth = 250\n  ) +\n  labs(\n    title = \"Weights of penguins\",\n    x = \"Weight (grams)\",\n    y = \"Count\"\n  )\n\nWarning: Removed 2 rows containing non-finite values (`stat_bin()`).\n\n\n\n\n\nWarning: Removed 2 rows containing non-finite values (`stat_bin()`)."
  },
  {
    "objectID": "slides/03-visualizing-data.html#boxplot---step-1",
    "href": "slides/03-visualizing-data.html#boxplot---step-1",
    "title": "Visualizing various types of data",
    "section": "Boxplot - Step 1",
    "text": "Boxplot - Step 1\n\n\n\nggplot(\n  penguins\n  )"
  },
  {
    "objectID": "slides/03-visualizing-data.html#boxplot---step-2",
    "href": "slides/03-visualizing-data.html#boxplot---step-2",
    "title": "Visualizing various types of data",
    "section": "Boxplot - Step 2",
    "text": "Boxplot - Step 2\n\n\n\nggplot(\n  penguins,\n  aes(x = body_mass_g)\n  )"
  },
  {
    "objectID": "slides/03-visualizing-data.html#boxplot---step-3",
    "href": "slides/03-visualizing-data.html#boxplot---step-3",
    "title": "Visualizing various types of data",
    "section": "Boxplot - Step 3",
    "text": "Boxplot - Step 3\n\n\n\nggplot(\n  penguins,\n  aes(y = body_mass_g)\n  ) +\n  geom_boxplot()\n\nWarning: Removed 2 rows containing non-finite values (`stat_boxplot()`).\n\n\n\n\n\nWarning: Removed 2 rows containing non-finite values (`stat_boxplot()`)."
  },
  {
    "objectID": "slides/03-visualizing-data.html#boxplot---step-4",
    "href": "slides/03-visualizing-data.html#boxplot---step-4",
    "title": "Visualizing various types of data",
    "section": "Boxplot - Step 4",
    "text": "Boxplot - Step 4\n\n\n\nggplot(\n  penguins,\n  aes(x = body_mass_g)\n  ) +\n  geom_boxplot()\n\nWarning: Removed 2 rows containing non-finite values (`stat_boxplot()`).\n\n\n\n\n\nWarning: Removed 2 rows containing non-finite values (`stat_boxplot()`)."
  },
  {
    "objectID": "slides/03-visualizing-data.html#boxplot---step-5",
    "href": "slides/03-visualizing-data.html#boxplot---step-5",
    "title": "Visualizing various types of data",
    "section": "Boxplot - Step 5",
    "text": "Boxplot - Step 5\n\n\n\nggplot(\n  penguins,\n  aes(x = body_mass_g)\n  ) +\n  geom_boxplot() +\n  labs(\n    x = \"Weight (grams)\",\n    y = NULL\n  )\n\nWarning: Removed 2 rows containing non-finite values (`stat_boxplot()`).\n\n\n\n\n\nWarning: Removed 2 rows containing non-finite values (`stat_boxplot()`)."
  },
  {
    "objectID": "slides/03-visualizing-data.html#density-plot---step-1",
    "href": "slides/03-visualizing-data.html#density-plot---step-1",
    "title": "Visualizing various types of data",
    "section": "Density plot - Step 1",
    "text": "Density plot - Step 1\n\n\n\nggplot(\n  penguins\n  )"
  },
  {
    "objectID": "slides/03-visualizing-data.html#density-plot---step-2",
    "href": "slides/03-visualizing-data.html#density-plot---step-2",
    "title": "Visualizing various types of data",
    "section": "Density plot - Step 2",
    "text": "Density plot - Step 2\n\n\n\nggplot(\n  penguins,\n  aes(x = body_mass_g)\n  )"
  },
  {
    "objectID": "slides/03-visualizing-data.html#density-plot---step-3",
    "href": "slides/03-visualizing-data.html#density-plot---step-3",
    "title": "Visualizing various types of data",
    "section": "Density plot - Step 3",
    "text": "Density plot - Step 3\n\n\n\nggplot(\n  penguins,\n  aes(x = body_mass_g)\n  ) +\n  geom_density()\n\nWarning: Removed 2 rows containing non-finite values (`stat_density()`).\n\n\n\n\n\nWarning: Removed 2 rows containing non-finite values (`stat_density()`)."
  },
  {
    "objectID": "slides/03-visualizing-data.html#density-plot---step-4",
    "href": "slides/03-visualizing-data.html#density-plot---step-4",
    "title": "Visualizing various types of data",
    "section": "Density plot - Step 4",
    "text": "Density plot - Step 4\n\n\n\nggplot(\n  penguins,\n  aes(x = body_mass_g)\n  ) +\n  geom_density(\n    fill = \"darkslategray1\"\n  )\n\nWarning: Removed 2 rows containing non-finite values (`stat_density()`).\n\n\n\n\n\nWarning: Removed 2 rows containing non-finite values (`stat_density()`)."
  },
  {
    "objectID": "slides/03-visualizing-data.html#density-plot---step-5",
    "href": "slides/03-visualizing-data.html#density-plot---step-5",
    "title": "Visualizing various types of data",
    "section": "Density plot - Step 5",
    "text": "Density plot - Step 5\n\n\n\nggplot(\n  penguins,\n  aes(x = body_mass_g)\n  ) +\n  geom_density(\n    fill = \"darkslategray1\",\n    linewidth = 2\n  )\n\nWarning: Removed 2 rows containing non-finite values (`stat_density()`).\n\n\n\n\n\nWarning: Removed 2 rows containing non-finite values (`stat_density()`)."
  },
  {
    "objectID": "slides/03-visualizing-data.html#density-plot---step-6",
    "href": "slides/03-visualizing-data.html#density-plot---step-6",
    "title": "Visualizing various types of data",
    "section": "Density plot - Step 6",
    "text": "Density plot - Step 6\n\n\n\nggplot(\n  penguins,\n  aes(x = body_mass_g)\n  ) +\n  geom_density(\n    fill = \"darkslategray1\",\n    linewidth = 2,\n    color = \"darkorchid3\"\n  )\n\nWarning: Removed 2 rows containing non-finite values (`stat_density()`).\n\n\n\n\n\nWarning: Removed 2 rows containing non-finite values (`stat_density()`)."
  },
  {
    "objectID": "slides/03-visualizing-data.html#density-plot---step-7",
    "href": "slides/03-visualizing-data.html#density-plot---step-7",
    "title": "Visualizing various types of data",
    "section": "Density plot - Step 7",
    "text": "Density plot - Step 7\n\n\n\nggplot(\n  penguins,\n  aes(x = body_mass_g)\n  ) +\n  geom_density(\n    fill = \"darkslategray1\",\n    linewidth = 2,\n    color = \"darkorchid3\",\n    alpha = 0.5\n  )\n\nWarning: Removed 2 rows containing non-finite values (`stat_density()`).\n\n\n\n\n\nWarning: Removed 2 rows containing non-finite values (`stat_density()`)."
  },
  {
    "objectID": "slides/03-visualizing-data.html#weights-of-penguins",
    "href": "slides/03-visualizing-data.html#weights-of-penguins",
    "title": "Visualizing various types of data",
    "section": "Weights of penguins",
    "text": "Weights of penguins\n\nQuestionVote\n\n\n\n\n\n\n\nWarning: Removed 2 rows containing non-finite values (`stat_bin()`).\n\n\n\n\n\n\n\n\n\n\n\nWarning: Removed 2 rows containing non-finite values (`stat_boxplot()`).\n\n\n\n\n\n\n\n\n\n\n\nWarning: Removed 2 rows containing non-finite values (`stat_density()`).\n\n\n\n\n\n\n\n\n\n\nTRUE / FALSE\n\nThe distribution of penguin weights in this sample is left skewed.\nThe distribution of penguin weights in this sample is unimodal."
  },
  {
    "objectID": "slides/03-visualizing-data.html#bivariate-analysis-1",
    "href": "slides/03-visualizing-data.html#bivariate-analysis-1",
    "title": "Visualizing various types of data",
    "section": "Bivariate analysis",
    "text": "Bivariate analysis\nAnalyzing the relationship between two variables:\n\nNumerical + numerical: scatterplot\nNumerical + categorical: side-by-side box plots, violin plots, etc.\nCategorical + categorical: stacked bar plots\nUsing an aesthetic (e.g., fill, color, shape, etc.) or facets to represent the second variable in any plot"
  },
  {
    "objectID": "slides/03-visualizing-data.html#side-by-side-box-plots",
    "href": "slides/03-visualizing-data.html#side-by-side-box-plots",
    "title": "Visualizing various types of data",
    "section": "Side-by-side box plots",
    "text": "Side-by-side box plots\n\n\n\nggplot(\n  penguins,\n  aes(\n    x = body_mass_g,\n    y = species\n    )\n  ) +\n  geom_boxplot()\n\nWarning: Removed 2 rows containing non-finite values (`stat_boxplot()`).\n\n\n\n\n\nWarning: Removed 2 rows containing non-finite values (`stat_boxplot()`)."
  },
  {
    "objectID": "slides/03-visualizing-data.html#density-plots",
    "href": "slides/03-visualizing-data.html#density-plots",
    "title": "Visualizing various types of data",
    "section": "Density plots",
    "text": "Density plots\n\n\n\nggplot(\n  penguins,\n  aes(\n    x = body_mass_g,\n    color = species\n    )\n  ) +\n  geom_density()\n\nWarning: Removed 2 rows containing non-finite values (`stat_density()`).\n\n\n\n\n\nWarning: Removed 2 rows containing non-finite values (`stat_density()`)."
  },
  {
    "objectID": "slides/03-visualizing-data.html#density-plots-1",
    "href": "slides/03-visualizing-data.html#density-plots-1",
    "title": "Visualizing various types of data",
    "section": "Density plots",
    "text": "Density plots\n\n\n\nggplot(\n  penguins,\n  aes(\n    x = body_mass_g,\n    color = species,\n    fill = species\n    )\n  ) +\n  geom_density()\n\nWarning: Removed 2 rows containing non-finite values (`stat_density()`).\n\n\n\n\n\nWarning: Removed 2 rows containing non-finite values (`stat_density()`)."
  },
  {
    "objectID": "slides/03-visualizing-data.html#density-plots-2",
    "href": "slides/03-visualizing-data.html#density-plots-2",
    "title": "Visualizing various types of data",
    "section": "Density plots",
    "text": "Density plots\n\n\n\nggplot(\n  penguins,\n  aes(\n    x = body_mass_g,\n    color = species,\n    fill = species\n    )\n  ) +\n  geom_density(\n    alpha = 0.5\n  )\n\nWarning: Removed 2 rows containing non-finite values (`stat_density()`).\n\n\n\n\n\nWarning: Removed 2 rows containing non-finite values (`stat_density()`)."
  },
  {
    "objectID": "slides/03-visualizing-data.html#density-plots-3",
    "href": "slides/03-visualizing-data.html#density-plots-3",
    "title": "Visualizing various types of data",
    "section": "Density plots",
    "text": "Density plots\n\n\n\nggplot(\n  penguins,\n  aes(\n    x = body_mass_g,\n    color = species,\n    fill = species\n    )\n  ) +\n  geom_density(\n    alpha = 0.5\n  ) +\n  theme(\n    legend.position = \"bottom\"\n  )\n\nWarning: Removed 2 rows containing non-finite values (`stat_density()`).\n\n\n\n\n\nWarning: Removed 2 rows containing non-finite values (`stat_density()`).\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n🔗 sta199-s24.github.io"
  },
  {
    "objectID": "slides/14-language-of-models.html#while-you-wait-for-class-to-begin",
    "href": "slides/14-language-of-models.html#while-you-wait-for-class-to-begin",
    "title": "The language of models",
    "section": "While you wait for class to begin…",
    "text": "While you wait for class to begin…\n\nAny questions from prepare materials?"
  },
  {
    "objectID": "slides/14-language-of-models.html#announcements",
    "href": "slides/14-language-of-models.html#announcements",
    "title": "The language of models",
    "section": "Announcements",
    "text": "Announcements\n\nTEAMMATES survey to provide feedback to your teammates deadline extended to tonight (Tuesday, 3/5) till midnight\nLab 5 due upon return from Spring Break, 8 am on Monday as usual – help will be available on Ed over the break (though a bit more sporadically)\nMonday after Spring Break: All team members must be in lab to work on project proposal"
  },
  {
    "objectID": "slides/14-language-of-models.html#questions-from-last-time",
    "href": "slides/14-language-of-models.html#questions-from-last-time",
    "title": "The language of models",
    "section": "Questions from last time",
    "text": "Questions from last time\n\nAre there universal standards for ethical data scraping?\n\n\n\nHow will we be tested on data science ethics?"
  },
  {
    "objectID": "slides/14-language-of-models.html#goals",
    "href": "slides/14-language-of-models.html#goals",
    "title": "The language of models",
    "section": "Goals",
    "text": "Goals\n\nWhat is a model?\nWhy do we model?\nWhat is correlation?"
  },
  {
    "objectID": "slides/14-language-of-models.html#setup",
    "href": "slides/14-language-of-models.html#setup",
    "title": "The language of models",
    "section": "Setup",
    "text": "Setup\n\nlibrary(tidyverse)\nlibrary(gt)"
  },
  {
    "objectID": "slides/14-language-of-models.html#lets-drive-a-tesla",
    "href": "slides/14-language-of-models.html#lets-drive-a-tesla",
    "title": "The language of models",
    "section": "Let’s drive a Tesla!",
    "text": "Let’s drive a Tesla!"
  },
  {
    "objectID": "slides/14-language-of-models.html#semi-or-garage",
    "href": "slides/14-language-of-models.html#semi-or-garage",
    "title": "The language of models",
    "section": "Semi or garage?",
    "text": "Semi or garage?\n\ni love how Tesla thinks the wall in my garage is a semi. 😅\n\n\n\n\n\n\n\n\nSource: Reddit"
  },
  {
    "objectID": "slides/14-language-of-models.html#semi-or-garage-1",
    "href": "slides/14-language-of-models.html#semi-or-garage-1",
    "title": "The language of models",
    "section": "Semi or garage?",
    "text": "Semi or garage?\n\nNew owner here. Just parked in my garage. Tesla thinks I crashed onto a semi.\n\n\n\n\n\n\n\n\nSource: Reddit"
  },
  {
    "objectID": "slides/14-language-of-models.html#car-or-trash",
    "href": "slides/14-language-of-models.html#car-or-trash",
    "title": "The language of models",
    "section": "Car or trash?",
    "text": "Car or trash?\n\nTesla calls Mercedes trash\n\n\n\n\n\n\n\n\nSource: Reddit"
  },
  {
    "objectID": "slides/14-language-of-models.html#leisure-commute-physical-activity-and-bp",
    "href": "slides/14-language-of-models.html#leisure-commute-physical-activity-and-bp",
    "title": "The language of models",
    "section": "Leisure, commute, physical activity and BP",
    "text": "Leisure, commute, physical activity and BP\n\nRelation Between Leisure Time, Commuting, and Occupational Physical Activity With Blood Pressure in 125,402 Adults: The Lifelines Cohort\nByambasukh, Oyuntugs, Harold Snieder, and Eva Corpeleijn. “Relation between leisure time, commuting, and occupational physical activity with blood pressure in 125 402 adults: the lifelines cohort.” Journal of the American Heart Association 9.4 (2020): e014313."
  },
  {
    "objectID": "slides/14-language-of-models.html#leisure-commute-physical-activity-and-bp-1",
    "href": "slides/14-language-of-models.html#leisure-commute-physical-activity-and-bp-1",
    "title": "The language of models",
    "section": "Leisure, commute, physical activity and BP",
    "text": "Leisure, commute, physical activity and BP\nBackground: Whether all domains of daily‐life moderate‐to‐vigorous physical activity (MVPA) are associated with lower blood pressure (BP) and how this association depends on age and body mass index remains unclear.\nMethods and Results: In the population‐based Lifelines cohort (N=125,402), MVPA was assessed by the Short Questionnaire to Assess Health‐Enhancing Physical Activity, a validated questionnaire in different domains such as commuting, leisure‐time, and occupational PA. BP was assessed using the last 3 of 10 measurements after 10 minutes’ rest in the supine position. Hypertension was defined as systolic BP ≥140 mm Hg and/or diastolic BP ≥90 mm Hg and/or use of antihypertensives. In regression analysis, higher commuting and leisure‐time but not occupational MVPA related to lower BP and lower hypertension risk. Commuting‐and‐leisure‐time MVPA was associated with BP in a dose‐dependent manner. β Coefficients (95% CI) from linear regression analyses were −1.64 (−2.03 to −1.24), −2.29 (−2.68 to −1.90), and finally −2.90 (−3.29 to −2.50) mm Hg systolic BP for the low, middle, and highest tertile of MVPA compared with “No MVPA” as the reference group after adjusting for age, sex, education, smoking and alcohol use. Further adjustment for body mass index attenuated the associations by 30% to 50%, but more MVPA remained significantly associated with lower BP and lower risk of hypertension. This association was age dependent. β Coefficients (95% CI) for the highest tertiles of commuting‐and‐leisure‐time MVPA were −1.67 (−2.20 to −1.15), −3.39 (−3.94 to −2.82) and −4.64 (−6.15 to −3.14) mm Hg systolic BP in adults &lt;40, 40 to 60, and &gt;60 years, respectively.\nConclusions: Higher commuting and leisure‐time but not occupational MVPA were significantly associated with lower BP and lower hypertension risk at all ages, but these associations were stronger in older adults."
  },
  {
    "objectID": "slides/14-language-of-models.html#modeling-cars",
    "href": "slides/14-language-of-models.html#modeling-cars",
    "title": "The language of models",
    "section": "Modeling cars",
    "text": "Modeling cars\n\n\nWhat is the relationship between cars’ weights and their mileage?\nWhat is your best guess for a car’s MPG that weighs 3,500 pounds?"
  },
  {
    "objectID": "slides/14-language-of-models.html#modelling-cars",
    "href": "slides/14-language-of-models.html#modelling-cars",
    "title": "The language of models",
    "section": "Modelling cars",
    "text": "Modelling cars\n\nDescribe: What is the relationship between cars’ weights and their mileage?"
  },
  {
    "objectID": "slides/14-language-of-models.html#modelling-cars-1",
    "href": "slides/14-language-of-models.html#modelling-cars-1",
    "title": "The language of models",
    "section": "Modelling cars",
    "text": "Modelling cars\n\nPredict: What is your best guess for a car’s MPG that weighs 3,500 pounds?"
  },
  {
    "objectID": "slides/14-language-of-models.html#modelling",
    "href": "slides/14-language-of-models.html#modelling",
    "title": "The language of models",
    "section": "Modelling",
    "text": "Modelling\n\nUse models to explain the relationship between variables and to make predictions\nFor now we will focus on linear models (but there are many many other types of models too!)"
  },
  {
    "objectID": "slides/14-language-of-models.html#modelling-vocabulary",
    "href": "slides/14-language-of-models.html#modelling-vocabulary",
    "title": "The language of models",
    "section": "Modelling vocabulary",
    "text": "Modelling vocabulary\n\nPredictor (explanatory variable)\nOutcome (response variable)\nRegression line\n\nSlope\nIntercept\n\nCorrelation"
  },
  {
    "objectID": "slides/14-language-of-models.html#predictor-explanatory-variable",
    "href": "slides/14-language-of-models.html#predictor-explanatory-variable",
    "title": "The language of models",
    "section": "Predictor (explanatory variable)",
    "text": "Predictor (explanatory variable)\n\n\n\n\n\n\n\n\n\n\nmpg\nwt\n\n\n\n\n21\n2.62\n\n\n21\n2.875\n\n\n22.8\n2.32\n\n\n21.4\n3.215\n\n\n18.7\n3.44\n\n\n18.1\n3.46\n\n\n...\n..."
  },
  {
    "objectID": "slides/14-language-of-models.html#outcome-response-variable",
    "href": "slides/14-language-of-models.html#outcome-response-variable",
    "title": "The language of models",
    "section": "Outcome (response variable)",
    "text": "Outcome (response variable)\n\n\n\n\n\n\n\n\n\n\nmpg\nwt\n\n\n\n\n21\n2.62\n\n\n21\n2.875\n\n\n22.8\n2.32\n\n\n21.4\n3.215\n\n\n18.7\n3.44\n\n\n18.1\n3.46\n\n\n...\n..."
  },
  {
    "objectID": "slides/14-language-of-models.html#regression-line",
    "href": "slides/14-language-of-models.html#regression-line",
    "title": "The language of models",
    "section": "Regression line",
    "text": "Regression line"
  },
  {
    "objectID": "slides/14-language-of-models.html#regression-line-slope",
    "href": "slides/14-language-of-models.html#regression-line-slope",
    "title": "The language of models",
    "section": "Regression line: slope",
    "text": "Regression line: slope"
  },
  {
    "objectID": "slides/14-language-of-models.html#regression-line-intercept",
    "href": "slides/14-language-of-models.html#regression-line-intercept",
    "title": "The language of models",
    "section": "Regression line: intercept",
    "text": "Regression line: intercept"
  },
  {
    "objectID": "slides/14-language-of-models.html#correlation",
    "href": "slides/14-language-of-models.html#correlation",
    "title": "The language of models",
    "section": "Correlation",
    "text": "Correlation"
  },
  {
    "objectID": "slides/14-language-of-models.html#correlation-1",
    "href": "slides/14-language-of-models.html#correlation-1",
    "title": "The language of models",
    "section": "Correlation",
    "text": "Correlation\n\nRanges between -1 and 1.\nSame sign as the slope."
  },
  {
    "objectID": "slides/14-language-of-models.html#visualizing-the-model",
    "href": "slides/14-language-of-models.html#visualizing-the-model",
    "title": "The language of models",
    "section": "Visualizing the model",
    "text": "Visualizing the model\n\nggplot(mtcars, aes(x = wt, y = mpg)) +\n  geom_point() +\n  geom_smooth(method = \"lm\")"
  },
  {
    "objectID": "slides/14-language-of-models.html#application-exercise-ae-10-modeling-fish",
    "href": "slides/14-language-of-models.html#application-exercise-ae-10-modeling-fish",
    "title": "The language of models",
    "section": "Application exercise: ae-10-modeling-fish",
    "text": "Application exercise: ae-10-modeling-fish\n\n\nGo back to your project called ae.\nIf there are any uncommitted files, commit them, and push.\nWork on ae-10-modeling-fish.qmd.\n\n\n\n\n\n\n🔗 sta199-s24.github.io  ·  ❓ Ask on Ed"
  },
  {
    "objectID": "slides/00-welcome-199.html#meet-the-prof",
    "href": "slides/00-welcome-199.html#meet-the-prof",
    "title": "Welcome to MATH 246",
    "section": "Meet the prof",
    "text": "Meet the prof\n\n\nDr. Joash Geteregechi\nAss. Professor of Mathematics\nOffice: Williams 311E"
  },
  {
    "objectID": "slides/00-welcome-199.html#meet-the-ta",
    "href": "slides/00-welcome-199.html#meet-the-ta",
    "title": "Welcome to MATH 246",
    "section": "Meet the TA",
    "text": "Meet the TA\n\n\nName: Earth Sonrod,\n\nHave image of Earth here"
  },
  {
    "objectID": "slides/00-welcome-199.html#meet-each-other",
    "href": "slides/00-welcome-199.html#meet-each-other",
    "title": "Welcome to MATH 246",
    "section": "Meet each other!",
    "text": "Meet each other!\n\n\n\n−+\n03:00"
  },
  {
    "objectID": "slides/00-welcome-199.html#meet-inter.-stats",
    "href": "slides/00-welcome-199.html#meet-inter.-stats",
    "title": "Welcome to MATH 246",
    "section": "Meet Inter. Stats",
    "text": "Meet Inter. Stats\n\nStatistics is an exciting discipline that draws useful insights from data.\nWe’re going to learn to do this using a statistical programming language called R – more on that later!\nThis is an intermediate statistics course, so the assumption is that you already know some basic concepts in statistics. Efforts will be made to remind you the most important concepts."
  },
  {
    "objectID": "slides/00-welcome-199.html#why-not-just-excel",
    "href": "slides/00-welcome-199.html#why-not-just-excel",
    "title": "Welcome to MATH 246",
    "section": "Why not just Excel?",
    "text": "Why not just Excel?"
  },
  {
    "objectID": "slides/00-welcome-199.html#why-r",
    "href": "slides/00-welcome-199.html#why-r",
    "title": "Welcome to MATH 246",
    "section": "Why R?",
    "text": "Why R?"
  },
  {
    "objectID": "slides/00-welcome-199.html#r-via-rstudio",
    "href": "slides/00-welcome-199.html#r-via-rstudio",
    "title": "Welcome to MATH 246",
    "section": "R via RStudio",
    "text": "R via RStudio"
  },
  {
    "objectID": "slides/00-welcome-199.html#data-science-life-cycle-1",
    "href": "slides/00-welcome-199.html#data-science-life-cycle-1",
    "title": "Welcome to MATH 246",
    "section": "Data science life cycle",
    "text": "Data science life cycle"
  },
  {
    "objectID": "slides/00-welcome-199.html#import",
    "href": "slides/00-welcome-199.html#import",
    "title": "Welcome to MATH 246",
    "section": "Import",
    "text": "Import"
  },
  {
    "objectID": "slides/00-welcome-199.html#tidy-transform",
    "href": "slides/00-welcome-199.html#tidy-transform",
    "title": "Welcome to MATH 246",
    "section": "Tidy + transform",
    "text": "Tidy + transform"
  },
  {
    "objectID": "slides/00-welcome-199.html#visualize",
    "href": "slides/00-welcome-199.html#visualize",
    "title": "Welcome to MATH 246",
    "section": "Visualize",
    "text": "Visualize"
  },
  {
    "objectID": "slides/00-welcome-199.html#model",
    "href": "slides/00-welcome-199.html#model",
    "title": "Welcome to MATH 246",
    "section": "Model",
    "text": "Model"
  },
  {
    "objectID": "slides/00-welcome-199.html#understand",
    "href": "slides/00-welcome-199.html#understand",
    "title": "Welcome to MATH 246",
    "section": "Understand",
    "text": "Understand"
  },
  {
    "objectID": "slides/00-welcome-199.html#section",
    "href": "slides/00-welcome-199.html#section",
    "title": "Welcome to MATH 246",
    "section": "",
    "text": "# A tibble: 5 × 2\n  date             season\n  &lt;chr&gt;            &lt;chr&gt; \n1 23 January 2017  winter\n2 4 March 2017     spring\n3 14 June 2017     summer\n4 1 September 2017 fall  \n5 ...              ..."
  },
  {
    "objectID": "slides/00-welcome-199.html#communicate",
    "href": "slides/00-welcome-199.html#communicate",
    "title": "Welcome to MATH 246",
    "section": "Communicate",
    "text": "Communicate"
  },
  {
    "objectID": "slides/00-welcome-199.html#understand-communicate",
    "href": "slides/00-welcome-199.html#understand-communicate",
    "title": "Welcome to MATH 246",
    "section": "Understand + communicate",
    "text": "Understand + communicate"
  },
  {
    "objectID": "slides/00-welcome-199.html#program",
    "href": "slides/00-welcome-199.html#program",
    "title": "Welcome to MATH 246",
    "section": "Program",
    "text": "Program"
  },
  {
    "objectID": "slides/00-welcome-199.html#application-exercise",
    "href": "slides/00-welcome-199.html#application-exercise",
    "title": "Welcome to MATH 246",
    "section": "Application exercise",
    "text": "Application exercise\n\nOr more like demo for today…\n📋 github.com/sta199-s24/ae-00-unvotes"
  },
  {
    "objectID": "slides/00-welcome-199.html#homepage",
    "href": "slides/00-welcome-199.html#homepage",
    "title": "Welcome to MATH 246",
    "section": "Homepage",
    "text": "Homepage\nhttps://sta199-s24.github.io\n\nAll course materials\nLinks to Canvas, GitHub, RStudio website, etc."
  },
  {
    "objectID": "slides/00-welcome-199.html#course-toolkit",
    "href": "slides/00-welcome-199.html#course-toolkit",
    "title": "Welcome to MATH 246",
    "section": "Course toolkit",
    "text": "Course toolkit\nAll linked from the course website:\n\nAccess RStudio at posit cloud\nDiscussions: Canvas Discussion Forums\nAssignment submission and feedback: Canvas Gradebook"
  },
  {
    "objectID": "slides/00-welcome-199.html#activities",
    "href": "slides/00-welcome-199.html#activities",
    "title": "Welcome to MATH 246",
    "section": "Activities",
    "text": "Activities\n\nIntroduce new content and prepare for lectures by completing the readings and/or watching the videos.\nAttend and actively participate in lectures and labs, office hours, team meetings\nCheck your understanding by completing CPA assignment\nAttend class to dive deeper into the material and learn how to apply it in the real-world contexts."
  },
  {
    "objectID": "slides/00-welcome-199.html#exams",
    "href": "slides/00-welcome-199.html#exams",
    "title": "Welcome to MATH 246",
    "section": "Exams",
    "text": "Exams\n\nTwo midterm exams.\nEach exam comprised of two parts:\n\nIn class: 55 minute in-class exam. Closed book, one sheet of notes (“cheat sheet”, no larger than A4, both sides, will be allowed this must be prepared by you) – 60% of the grade.\nTake home: The take home portion will comprise of data analysis is R. Copilot may be used, but all the prompts should be written down as comments. If the code produced is incorrect for some reason, state the errors and explain how you fixed them – 40% of the grade.\n\n\n\n\n\n\n\n\nCaution\n\n\nNo make-up exams will be given."
  },
  {
    "objectID": "slides/00-welcome-199.html#project",
    "href": "slides/00-welcome-199.html#project",
    "title": "Welcome to MATH 246",
    "section": "Project",
    "text": "Project\n\nDataset of your choice, method of your choice.\nTeamwork. Every group member must list their role in the project.\nPresentation and write-up.\nPeer review on content, peer evaluation for team contribution.\nSome lab sessions allocated to working on projects, doing peer review, getting feedback from TAs.\n\n\n\n\n\n\n\nCaution\n\n\nYou must complete the project to pass this class."
  },
  {
    "objectID": "slides/00-welcome-199.html#teams",
    "href": "slides/00-welcome-199.html#teams",
    "title": "Welcome to MATH 246",
    "section": "Teams",
    "text": "Teams\n\nAssigned randomly by me at beginning of semester\nWill be shuffled mid-way into the semester with input from you\nProject: Each team will meet to discuss another team’s project and provide written feedback. Each team member can choose a specific role in peer review.\nExpectations and roles\n\nEveryone is expected to contribute equal effort\nEveryone is expected to understand all code used to do the analyses of your report.\nIndividual contribution evaluated by team members, my observations, etc."
  },
  {
    "objectID": "slides/00-welcome-199.html#grading",
    "href": "slides/00-welcome-199.html#grading",
    "title": "Welcome to MATH 246",
    "section": "Grading",
    "text": "Grading\n\n\n\nCategory\nPercentage\n\n\n\n\nCPA’s\n0%\n\n\nLabs\n35%\n\n\nProjects\n20%\n\n\nExams\n20%\n\n\nFinal Portfolio\n20%\n\n\nLabs\n35%\n\n\nAtt & Participation\n5%\n\n\nApplication Exercises\n5%\n\n\n\nSee course syllabus for how the final letter grade will be determined."
  },
  {
    "objectID": "slides/00-welcome-199.html#support",
    "href": "slides/00-welcome-199.html#support",
    "title": "Welcome to MATH 246",
    "section": "Support",
    "text": "Support\n\nAttend office hours\nAsk and answer questions on the Canvas discussion forum\nReserve email for questions on personal matters and/or grades\nRead the course support page"
  },
  {
    "objectID": "slides/00-welcome-199.html#announcements",
    "href": "slides/00-welcome-199.html#announcements",
    "title": "Welcome to MATH 246",
    "section": "Announcements",
    "text": "Announcements\n\nPosted on Canvas (Announcements tool) and/or sent via email, be sure to check both regularly.\nI’ll (try my best to) send a weekly update announcement each Friday, outlining the plan for the following week and reminding you what you need to do to stay on track."
  },
  {
    "objectID": "slides/00-welcome-199.html#diversity-inclusion",
    "href": "slides/00-welcome-199.html#diversity-inclusion",
    "title": "Welcome to MATH 246",
    "section": "Diversity + inclusion",
    "text": "Diversity + inclusion\nIt is my intent that students from all diverse backgrounds and perspectives be well-served by this course, that students’ learning needs be addressed both in and out of class, and that the diversity that the students bring to this class be viewed as a resource, strength and benefit.\n\n\nPlease let me know your preferred name and pronouns on the Getting to know you survey.\nIf you feel like your performance in the class is being impacted by your experiences outside of class, please don’t hesitate to come and talk with me. I want to be a resource for you. If you prefer to speak with someone outside of the course, your advisors, and deans are excellent resources.\nI (like many people) am still in the process of learning about diverse perspectives and identities. If something was said in class (by anyone) that made you feel uncomfortable, please talk to me about it."
  },
  {
    "objectID": "slides/00-welcome-199.html#accessibility",
    "href": "slides/00-welcome-199.html#accessibility",
    "title": "Welcome to MATH 246",
    "section": "Accessibility",
    "text": "Accessibility\n\nThe Student Accessibility Services (SAS) is available to ensure that students are able to engage with their courses and related assignments.\nI am committed to making all course materials accessible and I’m always learning how to do this better. If any course component is not accessible to you in any way, please don’t hesitate to let me know."
  },
  {
    "objectID": "slides/00-welcome-199.html#late-work-waivers-regrades-policy",
    "href": "slides/00-welcome-199.html#late-work-waivers-regrades-policy",
    "title": "Welcome to MATH 246",
    "section": "Late work, waivers, regrades policy",
    "text": "Late work, waivers, regrades policy\n\nWe have policies!\nRead about them on the course syllabus and refer back to them when you need it."
  },
  {
    "objectID": "slides/00-welcome-199.html#this-weeks-tasks",
    "href": "slides/00-welcome-199.html#this-weeks-tasks",
    "title": "Welcome to MATH 246",
    "section": "This week’s tasks",
    "text": "This week’s tasks\n\nComplete Lab 0\n\nComputational setup\nGetting to know you survey\n\nRead the syllabus\nStart readings for next week\n\n\n\n\n\n\n🔗 sta199-s24.github.io"
  },
  {
    "objectID": "slides/15-linear-model-single-predictor.html#announcements",
    "href": "slides/15-linear-model-single-predictor.html#announcements",
    "title": "Linear regression with a single predictor",
    "section": "Announcements",
    "text": "Announcements\n\nWe did not finish AE 10 last time, answers are posted for review. Today’s AE 11 will review much of the material we didn’t get to in AE 10.\nThe midsemester course feedback survey is open until Sunday midnight. It’s on Canvas &gt; Quizzes, anonymous and optional but participation much appreciated!"
  },
  {
    "objectID": "slides/15-linear-model-single-predictor.html#questions-from-last-time",
    "href": "slides/15-linear-model-single-predictor.html#questions-from-last-time",
    "title": "Linear regression with a single predictor",
    "section": "Questions from last time",
    "text": "Questions from last time\n\nCan you iterate using a function with multiple variables?\n\nYes, a function can have multiple inputs (just like, for example, the *_join() functions we’ve used take at least two inputs – the two data frames to be joined). We won’t cover writing functions in detail in this class but R4DS - Chp 25 is a good resource for getting started, and STA 323 goes into this topic deeper.\n\n\nCan you get special permission to scrape (if so, how common is this?)\n\nProbably not? They would just give you the data! Or access to an API where you can fetch the data from."
  },
  {
    "objectID": "slides/15-linear-model-single-predictor.html#questions-from-last-time-1",
    "href": "slides/15-linear-model-single-predictor.html#questions-from-last-time-1",
    "title": "Linear regression with a single predictor",
    "section": "Questions from last time",
    "text": "Questions from last time\n\nDo we have to use OpenIntro for data modelling?\n\nYes, I recommend the readings from the OpenIntro book for modeling, where relevant they’re linked from the prepare materials."
  },
  {
    "objectID": "slides/15-linear-model-single-predictor.html#goals",
    "href": "slides/15-linear-model-single-predictor.html#goals",
    "title": "Linear regression with a single predictor",
    "section": "Goals",
    "text": "Goals\n\nModeling with a single predictor\nModel parameters, estimates, and error terms\nInterpreting slopes and intercepts"
  },
  {
    "objectID": "slides/15-linear-model-single-predictor.html#setup",
    "href": "slides/15-linear-model-single-predictor.html#setup",
    "title": "Linear regression with a single predictor",
    "section": "Setup",
    "text": "Setup\n\nlibrary(tidyverse)\nlibrary(tidymodels)\nlibrary(fivethirtyeight) # for the fandango dataset"
  },
  {
    "objectID": "slides/15-linear-model-single-predictor.html#spurious-correlations",
    "href": "slides/15-linear-model-single-predictor.html#spurious-correlations",
    "title": "Linear regression with a single predictor",
    "section": "Spurious correlations",
    "text": "Spurious correlations\n\n\n\n\n\n\n\nSource: tylervigen.com/spurious-correlations"
  },
  {
    "objectID": "slides/15-linear-model-single-predictor.html#spurious-correlations-1",
    "href": "slides/15-linear-model-single-predictor.html#spurious-correlations-1",
    "title": "Linear regression with a single predictor",
    "section": "Spurious correlations",
    "text": "Spurious correlations\n\n\n\n\n\n\n\nSource: tylervigen.com/spurious-correlations"
  },
  {
    "objectID": "slides/15-linear-model-single-predictor.html#data-prep",
    "href": "slides/15-linear-model-single-predictor.html#data-prep",
    "title": "Linear regression with a single predictor",
    "section": "Data prep",
    "text": "Data prep\n\nRename Rotten Tomatoes columns as critics and audience\nRename the dataset as movie_scores\n\n\nmovie_scores &lt;- fandango |&gt;\n  rename(\n    critics = rottentomatoes, \n    audience = rottentomatoes_user\n  )"
  },
  {
    "objectID": "slides/15-linear-model-single-predictor.html#data-overview",
    "href": "slides/15-linear-model-single-predictor.html#data-overview",
    "title": "Linear regression with a single predictor",
    "section": "Data overview",
    "text": "Data overview\n\nmovie_scores |&gt;\n  select(critics, audience)\n\n# A tibble: 146 × 2\n   critics audience\n     &lt;int&gt;    &lt;int&gt;\n 1      74       86\n 2      85       80\n 3      80       90\n 4      18       84\n 5      14       28\n 6      63       62\n 7      42       53\n 8      86       64\n 9      99       82\n10      89       87\n# ℹ 136 more rows"
  },
  {
    "objectID": "slides/15-linear-model-single-predictor.html#data-visualization",
    "href": "slides/15-linear-model-single-predictor.html#data-visualization",
    "title": "Linear regression with a single predictor",
    "section": "Data visualization",
    "text": "Data visualization"
  },
  {
    "objectID": "slides/15-linear-model-single-predictor.html#regression-model-1",
    "href": "slides/15-linear-model-single-predictor.html#regression-model-1",
    "title": "Linear regression with a single predictor",
    "section": "Regression model",
    "text": "Regression model\nA regression model is a function that describes the relationship between the outcome, \\(Y\\), and the predictor, \\(X\\).\n\\[\\begin{aligned} Y &= \\color{black}{\\textbf{Model}} + \\text{Error} \\\\[8pt]\n&= \\color{black}{\\mathbf{f(X)}} + \\epsilon \\\\[8pt]\n&= \\color{black}{\\boldsymbol{\\mu_{Y|X}}} + \\epsilon \\end{aligned}\\]"
  },
  {
    "objectID": "slides/15-linear-model-single-predictor.html#regression-model",
    "href": "slides/15-linear-model-single-predictor.html#regression-model",
    "title": "Linear regression with a single predictor",
    "section": "Regression model",
    "text": "Regression model\n\n\n\\[\n\\begin{aligned} Y &= \\color{#325b74}{\\textbf{Model}} + \\text{Error} \\\\[8pt]\n&= \\color{#325b74}{\\mathbf{f(X)}} + \\epsilon \\\\[8pt]\n&= \\color{#325b74}{\\boldsymbol{\\mu_{Y|X}}} + \\epsilon\n\\end{aligned}\n\\]"
  },
  {
    "objectID": "slides/15-linear-model-single-predictor.html#simple-linear-regression",
    "href": "slides/15-linear-model-single-predictor.html#simple-linear-regression",
    "title": "Linear regression with a single predictor",
    "section": "Simple linear regression",
    "text": "Simple linear regression\nUse simple linear regression to model the relationship between a quantitative outcome (\\(Y\\)) and a single quantitative predictor (\\(X\\)): \\[\\Large{Y = \\beta_0 + \\beta_1 X + \\epsilon}\\]\n\n\n\\(\\beta_1\\): True slope of the relationship between \\(X\\) and \\(Y\\)\n\\(\\beta_0\\): True intercept of the relationship between \\(X\\) and \\(Y\\)\n\\(\\epsilon\\): Error (residual)"
  },
  {
    "objectID": "slides/15-linear-model-single-predictor.html#simple-linear-regression-1",
    "href": "slides/15-linear-model-single-predictor.html#simple-linear-regression-1",
    "title": "Linear regression with a single predictor",
    "section": "Simple linear regression",
    "text": "Simple linear regression\n\\[\\Large{\\hat{Y} = b_0 + b_1 X}\\]\n\n\\(b_1\\): Estimated slope of the relationship between \\(X\\) and \\(Y\\)\n\\(b_0\\): Estimated intercept of the relationship between \\(X\\) and \\(Y\\)\nNo error term!"
  },
  {
    "objectID": "slides/15-linear-model-single-predictor.html#choosing-values-for-b_1-and-b_0",
    "href": "slides/15-linear-model-single-predictor.html#choosing-values-for-b_1-and-b_0",
    "title": "Linear regression with a single predictor",
    "section": "Choosing values for \\(b_1\\) and \\(b_0\\)",
    "text": "Choosing values for \\(b_1\\) and \\(b_0\\)"
  },
  {
    "objectID": "slides/15-linear-model-single-predictor.html#residuals",
    "href": "slides/15-linear-model-single-predictor.html#residuals",
    "title": "Linear regression with a single predictor",
    "section": "Residuals",
    "text": "Residuals\n\n\\[\\text{residual} = \\text{observed} - \\text{predicted} = y - \\hat{y}\\]"
  },
  {
    "objectID": "slides/15-linear-model-single-predictor.html#least-squares-line",
    "href": "slides/15-linear-model-single-predictor.html#least-squares-line",
    "title": "Linear regression with a single predictor",
    "section": "Least squares line",
    "text": "Least squares line\n\nThe residual for the \\(i^{th}\\) observation is\n\n\\[e_i = \\text{observed} - \\text{predicted} = y_i - \\hat{y}_i\\]\n\nThe sum of squared residuals is\n\n\\[e^2_1 + e^2_2 + \\dots + e^2_n\\]\n\nThe least squares line is the one that minimizes the sum of squared residuals"
  },
  {
    "objectID": "slides/15-linear-model-single-predictor.html#least-squares-line-1",
    "href": "slides/15-linear-model-single-predictor.html#least-squares-line-1",
    "title": "Linear regression with a single predictor",
    "section": "Least squares line",
    "text": "Least squares line\n\nmovies_fit &lt;- linear_reg() |&gt;\n  fit(audience ~ critics, data = movie_scores)\n\ntidy(movies_fit)\n\n# A tibble: 2 × 5\n  term        estimate std.error statistic  p.value\n  &lt;chr&gt;          &lt;dbl&gt;     &lt;dbl&gt;     &lt;dbl&gt;    &lt;dbl&gt;\n1 (Intercept)   32.3      2.34        13.8 4.03e-28\n2 critics        0.519    0.0345      15.0 2.70e-31"
  },
  {
    "objectID": "slides/15-linear-model-single-predictor.html#properties-of-least-squares-regression",
    "href": "slides/15-linear-model-single-predictor.html#properties-of-least-squares-regression",
    "title": "Linear regression with a single predictor",
    "section": "Properties of least squares regression",
    "text": "Properties of least squares regression\n\n\nThe regression line goes through the center of mass point (the coordinates corresponding to average \\(X\\) and average \\(Y\\)): \\(b_0 = \\bar{Y} - b_1~\\bar{X}\\)\nSlope has the same sign as the correlation coefficient: \\(b_1 = r \\frac{s_Y}{s_X}\\)\nSum of the residuals is zero: \\(\\sum_{i = 1}^n \\epsilon_i = 0\\)\nResiduals and \\(X\\) values are uncorrelated"
  },
  {
    "objectID": "slides/15-linear-model-single-predictor.html#interpreting-the-slope",
    "href": "slides/15-linear-model-single-predictor.html#interpreting-the-slope",
    "title": "Linear regression with a single predictor",
    "section": "Interpreting the slope",
    "text": "Interpreting the slope\n\nQuestionSubmit\n\n\n\nThe slope of the model for predicting audience score from critics score is 0.519. Which of the following is the best interpretation of this value?\n\n\nFor every one point increase in the critics score, the audience score goes up by 0.519 points, on average.\nFor every one point increase in the critics score, we expect the audience score to be higher by 0.519 points, on average.\nFor every one point increase in the critics score, the audience score goes up by 0.519 points.\nFor every one point increase in the audience score, the critics score goes up by 0.519 points, on average."
  },
  {
    "objectID": "slides/15-linear-model-single-predictor.html#interpreting-slope-intercept",
    "href": "slides/15-linear-model-single-predictor.html#interpreting-slope-intercept",
    "title": "Linear regression with a single predictor",
    "section": "Interpreting slope & intercept",
    "text": "Interpreting slope & intercept\n\\[\\widehat{\\text{audience}} = 32.3 + 0.519 \\times \\text{critics}\\]\n\n\nSlope: For every one point increase in the critics score, we expect the audience score to be higher by 0.519 points, on average.\nIntercept: If the critics score is 0 points, we expect the audience score to be 32.3 points."
  },
  {
    "objectID": "slides/15-linear-model-single-predictor.html#is-the-intercept-meaningful",
    "href": "slides/15-linear-model-single-predictor.html#is-the-intercept-meaningful",
    "title": "Linear regression with a single predictor",
    "section": "Is the intercept meaningful?",
    "text": "Is the intercept meaningful?\n✅ The intercept is meaningful in context of the data if\n\nthe predictor can feasibly take values equal to or near zero or\nthe predictor has values near zero in the observed data\n\n\n🛑 Otherwise, it might not be meaningful!"
  },
  {
    "objectID": "slides/15-linear-model-single-predictor.html#application-exercise-ae-11-penguins-modeling",
    "href": "slides/15-linear-model-single-predictor.html#application-exercise-ae-11-penguins-modeling",
    "title": "Linear regression with a single predictor",
    "section": "Application exercise: ae-11-penguins-modeling",
    "text": "Application exercise: ae-11-penguins-modeling\n\n\nGo back to your project called ae.\nIf there are any uncommitted files, commit them, and push.\nPull, and then work on ae-11-penguins-modeling.qmd.\n\n\n\n\n\n\n🔗 sta199-s24.github.io  ·  ❓ Ask on Ed"
  },
  {
    "objectID": "slides/25-wrapup-shiny.html#while-you-wait-for-class-to-begin",
    "href": "slides/25-wrapup-shiny.html#while-you-wait-for-class-to-begin",
    "title": "Wrap-up + Shiny",
    "section": "While you wait for class to begin…",
    "text": "While you wait for class to begin…\n\nTake the time to fill out course and TA evaluations!\nWant to nominate a TA as “TA of the Year”? Send an email to dus@stat.duke.edu with your nomination."
  },
  {
    "objectID": "slides/25-wrapup-shiny.html#ae-19---last-one",
    "href": "slides/25-wrapup-shiny.html#ae-19---last-one",
    "title": "Wrap-up + Shiny",
    "section": "AE 19 - Last one!",
    "text": "AE 19 - Last one!\n\n\nGo to your ae repo, and pull.\nMake a change, any change, to ae-19-last-ae.qmd. render, commit, and push."
  },
  {
    "objectID": "slides/25-wrapup-shiny.html#announcements",
    "href": "slides/25-wrapup-shiny.html#announcements",
    "title": "Wrap-up + Shiny",
    "section": "Announcements",
    "text": "Announcements\n\nFinalize (render, commit, push) by 8 am tomorrow (Wednesday) morning\nFill out last peer evaluations by Sunday"
  },
  {
    "objectID": "slides/25-wrapup-shiny.html#shiny-1",
    "href": "slides/25-wrapup-shiny.html#shiny-1",
    "title": "Wrap-up + Shiny",
    "section": "Shiny",
    "text": "Shiny\n\nShiny is an R package that makes it easy to build interactive web apps straight from R. You can host standalone apps on a webpage or embed them in R Markdown documents or build dashboards. You can also extend your Shiny apps with CSS themes, htmlwidgets, and JavaScript actions."
  },
  {
    "objectID": "slides/25-wrapup-shiny.html#shiny-app",
    "href": "slides/25-wrapup-shiny.html#shiny-app",
    "title": "Wrap-up + Shiny",
    "section": "Shiny App",
    "text": "Shiny App\n\n\n\nServer\n\n + \n\n\n\n⇄\n\n\nClient / Browser\n\n\n\n\n\n +  +"
  },
  {
    "objectID": "slides/25-wrapup-shiny.html#anatomy-of-an-app",
    "href": "slides/25-wrapup-shiny.html#anatomy-of-an-app",
    "title": "Wrap-up + Shiny",
    "section": "Anatomy of an App",
    "text": "Anatomy of an App\n\nlibrary(shiny)\n\nshinyApp(\n  ui = list(\n    # new (to you) widgets go here\n  ),\n  \n  server = function(input, output, session) {\n    # somewhat familiat (to you) code goes here\n  }\n)"
  },
  {
    "objectID": "slides/25-wrapup-shiny.html#shiny-widgets-gallery",
    "href": "slides/25-wrapup-shiny.html#shiny-widgets-gallery",
    "title": "Wrap-up + Shiny",
    "section": "Shiny Widgets Gallery",
    "text": "Shiny Widgets Gallery\n\nhttps://shiny.posit.co/r/gallery/widgets/widget-gallery/"
  },
  {
    "objectID": "slides/25-wrapup-shiny.html#a-brief-widget-tour",
    "href": "slides/25-wrapup-shiny.html#a-brief-widget-tour",
    "title": "Wrap-up + Shiny",
    "section": "A brief widget tour",
    "text": "A brief widget tour\n\nrundel.shinyapps.io/widgets/"
  },
  {
    "objectID": "slides/25-wrapup-shiny.html#live-demo",
    "href": "slides/25-wrapup-shiny.html#live-demo",
    "title": "Wrap-up + Shiny",
    "section": "Live demo",
    "text": "Live demo\nLet’s make a weather app!\nGo to https://github.com/sta199-s24/shiny-demo to follow along.\n\n\n\n\n\n\nNote\n\n\nIf you want to code along, click on the “Use this template” button to create a copy of this repo for yourself, clone it in RStudio, and code along as usual.\n\n\n\n\n\n\n\n🔗 sta199-s24.github.io  ·  ❓ Ask on Ed"
  },
  {
    "objectID": "slides/08-data-types-classes.html#while-you-wait-for-class-to-begin",
    "href": "slides/08-data-types-classes.html#while-you-wait-for-class-to-begin",
    "title": "Data types and classes",
    "section": "While you wait for class to begin…",
    "text": "While you wait for class to begin…\n\nGo to your ae repo, click Pull to get today’s application exercise to get ready for later.\nQuestions from the prepare materials?"
  },
  {
    "objectID": "slides/08-data-types-classes.html#pivoting-data",
    "href": "slides/08-data-types-classes.html#pivoting-data",
    "title": "Data types and classes",
    "section": "Pivoting data",
    "text": "Pivoting data\nSuppose we have the following patient data:\n\npatients\n\n# A tibble: 3 × 4\n  patient_id pulse_1 pulse_2 pulse_3\n  &lt;chr&gt;        &lt;dbl&gt;   &lt;dbl&gt;   &lt;dbl&gt;\n1 XYZ             70      85      73\n2 ABC             90      95     102\n3 DEF            100      80      70\n\n\nAnd we want to know:\n\nAverage pulse rate for each patient.\nTrends in pulse rates across measurements."
  },
  {
    "objectID": "slides/08-data-types-classes.html#pivoting-data-1",
    "href": "slides/08-data-types-classes.html#pivoting-data-1",
    "title": "Data types and classes",
    "section": "Pivoting data",
    "text": "Pivoting data\nSuppose we have the following patient data:\n\npatients\n\n# A tibble: 3 × 4\n  patient_id pulse_1 pulse_2 pulse_3\n  &lt;chr&gt;        &lt;dbl&gt;   &lt;dbl&gt;   &lt;dbl&gt;\n1 XYZ             70      85      73\n2 ABC             90      95     102\n3 DEF            100      80      70\n\n\nAnd we want to know:\n\nAverage pulse rate for each patient.\nTrends in pulse rates across measurements.\n\nThese require a longer format of the data where all pulse rates are in a single column and another column identifies the measurement number."
  },
  {
    "objectID": "slides/08-data-types-classes.html#pivoting-data-2",
    "href": "slides/08-data-types-classes.html#pivoting-data-2",
    "title": "Data types and classes",
    "section": "Pivoting data",
    "text": "Pivoting data\n\npatients_longer &lt;- patients |&gt;\n  pivot_longer(\n    cols = !patient_id,\n    names_to = \"measurement\",\n    values_to = \"pulse_rate\"\n  )"
  },
  {
    "objectID": "slides/08-data-types-classes.html#summarizing-pivoted-data",
    "href": "slides/08-data-types-classes.html#summarizing-pivoted-data",
    "title": "Data types and classes",
    "section": "Summarizing pivoted data",
    "text": "Summarizing pivoted data\n\npatients_longer |&gt;\n  group_by(patient_id) |&gt;\n  summarize(mean_pulse = mean(pulse_rate))\n\n# A tibble: 3 × 2\n  patient_id mean_pulse\n  &lt;chr&gt;           &lt;dbl&gt;\n1 ABC              95.7\n2 DEF              83.3\n3 XYZ              76"
  },
  {
    "objectID": "slides/08-data-types-classes.html#visualizing-pivoted-data",
    "href": "slides/08-data-types-classes.html#visualizing-pivoted-data",
    "title": "Data types and classes",
    "section": "Visualizing pivoted data",
    "text": "Visualizing pivoted data\n\nggplot(\n  patients_longer, \n  aes(x = measurement, y = pulse_rate, group = patient_id, color = patient_id)\n  ) +\n  geom_line()"
  },
  {
    "objectID": "slides/08-data-types-classes.html#types-and-classes-1",
    "href": "slides/08-data-types-classes.html#types-and-classes-1",
    "title": "Data types and classes",
    "section": "Types and classes",
    "text": "Types and classes\n\nType is how an object is stored in memory, e.g.,\n\ndouble: a real number stored in double-precision floatint point format.\ninteger: an integer (positive or negative)\n\nClass is metadata about the object that can determine how common functions operate on that object, e.g.,\n\nfactor"
  },
  {
    "objectID": "slides/08-data-types-classes.html#types-of-vectors",
    "href": "slides/08-data-types-classes.html#types-of-vectors",
    "title": "Data types and classes",
    "section": "Types of vectors",
    "text": "Types of vectors\n\n\nYou’ll commonly encounter:\n\nlogical\ninteger\ndouble\ncharacter\n\n\nYou’ll less commonly encounter:\n\nlist\nNULL\ncomplex\nraw"
  },
  {
    "objectID": "slides/08-data-types-classes.html#types-of-functions",
    "href": "slides/08-data-types-classes.html#types-of-functions",
    "title": "Data types and classes",
    "section": "Types of functions",
    "text": "Types of functions\nYes, functions have types too, but you don’t need to worry about the differences in the context of doing data science.\n\ntypeof(mean) # regular function\n\n[1] \"closure\"\n\ntypeof(`$`) # internal function\n\n[1] \"special\"\n\ntypeof(sum) # primitive function\n\n[1] \"builtin\""
  },
  {
    "objectID": "slides/08-data-types-classes.html#factors",
    "href": "slides/08-data-types-classes.html#factors",
    "title": "Data types and classes",
    "section": "Factors",
    "text": "Factors\nA factor is a vector that can contain only predefined values. It is used to store categorical data.\n\n\n\nx &lt;- factor(c(\"a\", \"b\", \"b\", \"a\"))\nx\n\n[1] a b b a\nLevels: a b\n\ntypeof(x)\n\n[1] \"integer\"\n\nattributes(x)\n\n$levels\n[1] \"a\" \"b\"\n\n$class\n[1] \"factor\""
  },
  {
    "objectID": "slides/08-data-types-classes.html#other-classes",
    "href": "slides/08-data-types-classes.html#other-classes",
    "title": "Data types and classes",
    "section": "Other classes",
    "text": "Other classes\nJust a couple of examples…\n\n\nDate:\n\ntoday &lt;- Sys.Date()\ntoday\n\n[1] \"2024-02-29\"\n\ntypeof(today)\n\n[1] \"double\"\n\nattributes(today)\n\n$class\n[1] \"Date\"\n\n\n\nDate-time:\n\nnow &lt;- as.POSIXct(\"2024-02-08 11:45\", tz = \"EST\")\nnow\n\n[1] \"2024-02-08 11:45:00 EST\"\n\ntypeof(now)\n\n[1] \"double\"\n\nattributes(now)\n\n$class\n[1] \"POSIXct\" \"POSIXt\" \n\n$tzone\n[1] \"EST\""
  },
  {
    "objectID": "slides/08-data-types-classes.html#ae-07-population-types",
    "href": "slides/08-data-types-classes.html#ae-07-population-types",
    "title": "Data types and classes",
    "section": "ae-07-population-types",
    "text": "ae-07-population-types\n\n\nGo to the project navigator in RStudio (top right corner of your RStudio window) and open the project called ae.\nIf there are any uncommitted files, commit them, and then click Pull.\nOpen the file called ae-07-population-types.qmd and render it.\n\n\n\n\n\n\n🔗 sta199-s24.github.io  ·  ❓ Ask on Ed"
  },
  {
    "objectID": "slides/02-grammar-of-graphics.html#while-you-wait",
    "href": "slides/02-grammar-of-graphics.html#while-you-wait",
    "title": "Grammar of graphics",
    "section": "While you wait…",
    "text": "While you wait…\nQuestions from the prepare materials?"
  },
  {
    "objectID": "slides/02-grammar-of-graphics.html#announcements",
    "href": "slides/02-grammar-of-graphics.html#announcements",
    "title": "Grammar of graphics",
    "section": "Announcements",
    "text": "Announcements\n\nLab 1 on Monday – go to your assigned lab\nCatch up with the prepare materials"
  },
  {
    "objectID": "slides/02-grammar-of-graphics.html#from-the-survey",
    "href": "slides/02-grammar-of-graphics.html#from-the-survey",
    "title": "Grammar of graphics",
    "section": "From the survey",
    "text": "From the survey\n\nAlmost half of the class mentioned being nervous about coding – you’re not alone! 💙\nA good number of students mentioned being nervous about being new to stats + data science – you’re also not alone! 💜\nVisibility of text on slides: Cranked up font size! 💛\nAbout exams: No coding on the in class (time-limited) exam + there will be practice exams\nAbout teams: Peer evaluations + milestones throughout semester\nGrading criteria: Scale of 0-4 for each exercise on lab + more details in lab instructions\nHardware: Code running on university containers"
  },
  {
    "objectID": "slides/02-grammar-of-graphics.html#git-and-github",
    "href": "slides/02-grammar-of-graphics.html#git-and-github",
    "title": "Grammar of graphics",
    "section": "Git and GitHub",
    "text": "Git and GitHub\n\n\n\n\n\n\n\n\nGit is a version control system – like “Track Changes” features from Microsoft Word, on steroids\nIt’s not the only version control system, but it’s a very popular one\n\n\n\n\n\n\n\n\nGitHub is the home for your Git-based projects on the internet – like DropBox but much, much better\nWe will use GitHub as a platform for web hosting and collaboration (and as our course management system!)"
  },
  {
    "objectID": "slides/02-grammar-of-graphics.html#versioning---done-badly",
    "href": "slides/02-grammar-of-graphics.html#versioning---done-badly",
    "title": "Grammar of graphics",
    "section": "Versioning - done badly",
    "text": "Versioning - done badly"
  },
  {
    "objectID": "slides/02-grammar-of-graphics.html#versioning---done-better",
    "href": "slides/02-grammar-of-graphics.html#versioning---done-better",
    "title": "Grammar of graphics",
    "section": "Versioning - done better",
    "text": "Versioning - done better"
  },
  {
    "objectID": "slides/02-grammar-of-graphics.html#versioning---done-even-better",
    "href": "slides/02-grammar-of-graphics.html#versioning---done-even-better",
    "title": "Grammar of graphics",
    "section": "Versioning - done even better",
    "text": "Versioning - done even better\nwith human readable messages"
  },
  {
    "objectID": "slides/02-grammar-of-graphics.html#how-will-we-use-git-and-github",
    "href": "slides/02-grammar-of-graphics.html#how-will-we-use-git-and-github",
    "title": "Grammar of graphics",
    "section": "How will we use Git and GitHub?",
    "text": "How will we use Git and GitHub?"
  },
  {
    "objectID": "slides/02-grammar-of-graphics.html#how-will-we-use-git-and-github-1",
    "href": "slides/02-grammar-of-graphics.html#how-will-we-use-git-and-github-1",
    "title": "Grammar of graphics",
    "section": "How will we use Git and GitHub?",
    "text": "How will we use Git and GitHub?"
  },
  {
    "objectID": "slides/02-grammar-of-graphics.html#how-will-we-use-git-and-github-2",
    "href": "slides/02-grammar-of-graphics.html#how-will-we-use-git-and-github-2",
    "title": "Grammar of graphics",
    "section": "How will we use Git and GitHub?",
    "text": "How will we use Git and GitHub?"
  },
  {
    "objectID": "slides/02-grammar-of-graphics.html#how-will-we-use-git-and-github-3",
    "href": "slides/02-grammar-of-graphics.html#how-will-we-use-git-and-github-3",
    "title": "Grammar of graphics",
    "section": "How will we use Git and GitHub?",
    "text": "How will we use Git and GitHub?"
  },
  {
    "objectID": "slides/02-grammar-of-graphics.html#git-and-github-tips",
    "href": "slides/02-grammar-of-graphics.html#git-and-github-tips",
    "title": "Grammar of graphics",
    "section": "Git and GitHub tips",
    "text": "Git and GitHub tips\n\n\nThere are millions of git commands – ok, that’s an exaggeration, but there are a lot of them – and very few people know them all. 99% of the time you will use git to add, commit, push, and pull.\nWe will be doing Git things and interfacing with GitHub through RStudio, but if you google for help you might come across methods for doing these things in the command line – skip that and move on to the next resource unless you feel comfortable trying it out.\nThere is a great resource for working with git and R: happygitwithr.com. Some of the content in there is beyond the scope of this course, but it’s a good place to look for help."
  },
  {
    "objectID": "slides/02-grammar-of-graphics.html#tour-git-github",
    "href": "slides/02-grammar-of-graphics.html#tour-git-github",
    "title": "Grammar of graphics",
    "section": "Tour: Git + GitHub",
    "text": "Tour: Git + GitHub\n\nJust one option for now:\nSit back and enjoy the show!"
  },
  {
    "objectID": "slides/02-grammar-of-graphics.html#examining-data-visualization",
    "href": "slides/02-grammar-of-graphics.html#examining-data-visualization",
    "title": "Grammar of graphics",
    "section": "Examining data visualization",
    "text": "Examining data visualization\n\n\nDiscuss the following for the visualization.\n\n\n\n\n−+\n04:00\n\n\n\n\n\n\n\nSource: Twitter"
  },
  {
    "objectID": "slides/02-grammar-of-graphics.html#ae-02-bechdel-dataviz",
    "href": "slides/02-grammar-of-graphics.html#ae-02-bechdel-dataviz",
    "title": "Grammar of graphics",
    "section": "ae-02-bechdel-dataviz",
    "text": "ae-02-bechdel-dataviz\n\n\nGo to the course GitHub org and find your ae repo (repo name will be suffixed with your GitHub name).\nClone the repo in your container, open the Quarto document in the repo, and follow along and complete the exercises.\nRender, commit, and push your edits by the AE deadline (end of this week)"
  },
  {
    "objectID": "slides/02-grammar-of-graphics.html#recap-of-ae",
    "href": "slides/02-grammar-of-graphics.html#recap-of-ae",
    "title": "Grammar of graphics",
    "section": "Recap of AE",
    "text": "Recap of AE\n\nConstruct plots with ggplot().\nLayers of ggplots are separated by +s.\nThe formula is (almost) always as follows:\n\n\nggplot(DATA, aes(x = X-VAR, y = Y-VAR, ...)) +\n  geom_XXX()\n\n\nAesthetic attributes of a geometries (color, size, transparency, etc.) can be mapped to variables in the data or set by the user, e.g. color = binary vs. color = \"pink\".\nUse facet_wrap() when faceting (creating small multiples) by one variable and facet_grid() when faceting by two variables.\n\n\n\n\n\n🔗 sta199-s24.github.io"
  },
  {
    "objectID": "exam-review/exam-1-review-A.html",
    "href": "exam-review/exam-1-review-A.html",
    "title": "Exam 1 Review",
    "section": "",
    "text": "b, c, f, g -\n\nThe blizzard_salary dataset has 409 rows.\nThe percent_incr variable is numerical and continuous.\nThe salary_type variable is categorical.\n\nFigure 1 - A shared x-axis makes it easier to compare summary statistics for the variable on the x-axis.\nc - It’s a value higher than the median for hourly but lower than the mean for salaried.\nb - There is more variability around the mean compared to the hourly distribution.\na, b, e - Pie charts and waffle charts are for visualizing distributions of categorical data only. Scatterplots are for visualizing the relationship between two numerical variables.\nc - mutate() is used to create or modify a variable.\na - \"Poor\", \"Successful\", \"High\", \"Top\"\nb - Option 2. The plot in Option 1 shows the number of employees with a given performance rating for each salary type while the plot in Option 2 gives the proportion of employees with a given performance rating for each salary type. In order to assess the relationship between these variables (e.g., how much more likely is a Top rating among Salaried vs. Hourly workers), we need the proportions, not the counts.\nThere may be some NAs in these two variables that are not visible in the plot.\nThe proportions under Hourly would go in the Hourly bar, and those under Salaried would go in the Salaried bar.\nc - filter(salary_type != \"Hourly\" & performance_rating == \"Poor\") - There are 5 observations for “not Hourly” “and” Poor.\na - arrange() - The result is arranged in increasing order of annual_salary, which is the default for arrange().\nc, d, e, f.\nPart 1: The following should be fixed:\n\nThere should be a | after # before label\nThere should be a : after label, not =\nThere shouldn’t be a space in the chunk label, it should be plot-blizzard\nThere should be spaces after commas in the code\nThere should be spaces on both sides of = in the code\nThere should be a space before +\ngeom_boxplot() should be on the next line and indented\nThere should be a + at the end of the geom_boxplot() line\nlabs() should be indented\n\nPart 2: The warning is caused by NA in the data. It means that 39 observations were NAs and are not plotted/represented on the plot.\nPart 1:\n\nRender: Run all of the code and render all of the text in the document and produce an output.\nCommit: Take a snapshot of your changes in Git with an appropriate message.\nPush: Send your changes off to GitHub.\n\nPart 2: c - Rendering or committing isn’t sufficient to send your changes to your GitHub repository, a push is needed. A pull is also not needed to view the changes in the browser."
  },
  {
    "objectID": "exam-review/exam-2-review.html",
    "href": "exam-review/exam-2-review.html",
    "title": "Exam 2 Review",
    "section": "",
    "text": "Come back later!!",
    "crumbs": [
      "Exam review",
      "Exam 2"
    ]
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "MATH 246: Intermediate Statistics",
    "section": "",
    "text": "This page contains an outline of the topics, content, and assignments for the semester. Note that this schedule will be updated as the semester progresses and the timeline of topics and assignments might be updated throughout the semester.\n\n\n\n\n\n\n\n\nWEEK\nDATE\nPREPARE\nTOPIC\nMATERIALS\nDUE\n\n\n\n\n1\nMon, Aug 26\n\n\nIntroductions & Syllabus\n💻 lab 0\n\n\n\n\n\n\nWed, Aug 28\n\n\n\nR(e)-Introduction to Statistics:\n(R & RStudio: Base R basics and R packages)\n\n🖥️ slides 00  ⌨️ ae 00\n\n\n\n\n\n\nFri, Aug 30\n\n\n\nLab 1:  Reproducible reports: Introducing Quarto, Tidyverse, & ggplot2\n\n\n\n\n\n\n\n2\nMon, Sep 2\n\n\n\nNo class - Labor Day holiday\n\n\n\n\n\n\n\n\n\nWed, Sep 4\n📘 ims - chp 4  📘 ims - chp 5  📗 r4ds - chp 1  🎥 Visualising data with ggplot2 🎥 Visualizing numerical data  🎥 Visualizing categorical data\n\nExploratory Data Analysis: Categorical and Numerical data\n\n🖥️ slides 02  ⌨️ ae 02  ✅ ae 02\n\n\n\n\n\n\nFri, Sep 6\n📘 ims - chp 7.1\n\nRegression Modeling (Single predictor)\n\n💻 lab 1  ✅ lab 1\n\n\n\n\n3\nMon, Sep 9\n📘 ims - chp 7.2 \n\nRegression Modeling (Single predictor)\n\n🖥️ slides 03  ⌨️ ae 02 (cont.)  ✅ ae 02\n\n\n\n\n\n\nWed, Sep 11\n📘 ims - chp 6\n\nShort Quiz 1 \nGitHub, Student developer pack \nCatchup and Review\n\n🖥️ slides 04  ⌨️ ae 03  ✅ ae 03\n\n\n\n\n\n\nFri, Sep 13\n📘 ims - chp 7.3 \n\nLab 2: Regression Modelling (single predictor)\n\n💻 lab 2  ✅ lab 2\nLab 1 at 8 am\n\n\n4\nMon, Sep 16\n📘 ims - chp 8.1  📘 ims - chp 8.2 \n\nRegression Modeling (Multiple Predictors)\n\n🖥️ slides 05  ⌨️ ae 04  ✅ ae 04\n\n\n\n\n\n\nWed, Sep 18\n📘 ims - chp 8.3  📘 ims - chp 8.4 \n\nRegression Modeling (Multiple Predictors)\n\n🖥️ slides 06  ⌨️ ae 05  ✅ ae 05\n\n\n\n\n\n\nFri, Sep 20\n\n\n\nShort Quiz 2 \nLab 3: Regression Modelling (Multiple predictors) \nIntro to GitHub Copilot\n\n💻 lab 3  ✅ lab 3\nLab 2 at 8 am\n\n\n5\nMon, Sep 23\n📘 ims - chp 9.1 & 9.2  🎥 Logistic regression \n\nRegression Modeling (Binary outcomes)\n\n🖥️ slides 07  ⌨️ ae 06  ✅ ae 06\n\n\n\n\n\n\nWed, Sep 25\n📘 ims - chp 9.3 \n\nRegression Modeling (Binary outcomes)\n\n🖥️ slides 08  ⌨️ ae 07  ✅ ae 07\n\n\n\n\n\n\nFri, Sep 27\n\n\n\nShort Quiz 3 \nLab 4: Regression Modelling (Binary Outcomes)\n\n📝 exam 1 review  ✅ exam 1 review\nLab 3 at 8 am\n\n\n6\nMon, Sep 30\n📘 ims - chp 11 \n\nIntro to Statistical Inference:  Hypothesis testing via randomization\n\n🖥️ slides 09\n\n\n\n\n\n\nWed, Oct 2\n📘 ims - chp 12  🎥 Bootstrapping \n\nIntro to Statistical Inference:  Confidence Intervals via bootstrapping\n\n\n\n\n\n\n\n\n\nFri, Oct 4\n\n\n\nShort Quiz 4 \nLab 5: Statistical Inference\n\n📓 project milestone 1\nExam 1 take-home at 8 am\n\n\n7\nMon, Oct 7\n\n\n\nProject Time (in-class)\n\n🖥️ slides 10  ⌨️ ae 08  ✅ ae 08\n\n\n\n\n\n\nWed, Oct 9\n\n\n\nProject Time (in-class)\n\n🖥️ slides 11  ⌨️ ae 09  ⌨️ ae 09  ✅ ae 09\n\n\n\n\n\n\nFri, Oct 11\n\n\n\nExam 1 Review\n\n💻 lab 4  ✅ lab 4\nProject milestone 1 at 8 am\n\n\n8\nMon, Oct 14\n\n\n\nExam 1 (in-class) \nTake-home exam released\n\n🖥️ slides 12  ⌨️ ae 09  ✅ ae 09\n\n\n\n\n\n\nWed, Oct 16\n\n\n\nProject Presentations (possibly online)\n\n🖥️ slides 13\n\n\n\n\n\n\nFri, Oct 18\n\n\n\n🌴 No classes - Fall Break\n\n💻 lab 5  ✅ lab 5\nLab 4 at 8 am\n\n\n9\nMon, Oct 21\n📘 ims - chp 13.1-13.3\n\nStatistical Inference: Mathematical models\n\n🖥️ slides 14  ⌨️ ae 10  ✅ ae 10\n\n\n\n\n\n\nWed, Oct 23\n📘 ims - chp 14\n\nStatistical Inference: Mathematical models\nDecision Errors\n\n🖥️ slides 15  ⌨️ ae 11  ✅ ae 11\n\n\n\n\n\n\nFri, Oct 25\n\n\n\nShort Quiz 5 \nLab 6: Inference with mathematical models\n\n\n\n\n\n\n\n10\nMon, Oct 28\n\n\n\nInferential modelling:  Inf. for linear regression with a single predictor\n\n\n\n\n\n\n\n\n\nWed, Oct 30\n\n\n\nInferential modelling: Inf. for linear regression with a single predictor\n\n\n\n\n\n\n\n\n\nFri, Nov 1\n\n\n\nLab 7:  Inf. for linear regression with a single predictor\n\n📓 project milestone 2\nLab 5 at 8 am\n\n\n11\nMon, Nov 4\n\n\n\nInferential modelling: Inf. for linear regression with multiple predictors\n\n🖥️ slides 16  ⌨️ ae 12  ✅ ae 12\n\n\n\n\n\n\nWed, Nov 6\n\n\n\nInferential modelling:  Inf. for linear regression with multiple predictors\n\n🖥️ slides 17\n\n\n\n\n\n\nFri, Nov 8\n\n\n\nLab 8:  Inferential modelling: Inf. for linear regression with multiple predictors\n\n💻 lab 6  ✅ lab 6\nProject milestone 2 at 8 am\n\n\n12\nMon, Nov 11\n\n\n\nInferential modelling:  Inf. for logistic regression\n\n🖥️ slides 18  ⌨️ ae 13  ✅ ae 13\n\n\n\n\n\n\nWed, Nov 13\n\n\n\nInferential modelling:  Inf. for logistic regression\n\n🖥️ slides 19  ⌨️ ae 14  ✅ ae 14\n\n\n\n\n\n\nFri, Nov 15\n\n\n\nLab 9:  Inferential modelling: Inf. for logistic regression\n\n💻 lab 7  ✅ lab 7\nLab 6 at 8 am\n\n\n13\nMon, Nov 18\n\n\n\nExam 2 Review session\n\n🖥️ slides 20  ⌨️ ae 15  ✅ ae 15\n\n\n\n\n\n\nWed, Nov 20\n\n\n\nExam 2 (in-class) \nTake-home exam released\n\n🖥️ slides 21  ⌨️ ae 16  ✅ ae 16\n\n\n\n\n\n\nFri, Nov 22\n\n\n\nStudent check-ins\n\n📝 exam 2 review  ✅ exam 2 review\nLab 7 at 8 am\n\n\n14\nMon, Nov 25\n\n\n\n🌴 No classes - Thanksgiving Break\n\n🖥️ slides 22\n\n\n\n\n\n\nWed, Nov 27\n\n\n\n🌴 No classes - Thanksgiving Break\n\n\n\n\n\n\n\n\n\nFri, Nov 29\n\n\n\n\n📓 project milestone 3\nExam 2 take-home at 8 am  Project milestone 3 at the end of lab session\n\n\n15\nMon, Dec 2\n\n\n\nProject Time (in-class)\n\n🖥️ slides 23  ⌨️ ae 17  ✅ ae 17\n\n\n\n\n\n\nWed, Dec 4\n\n\n\nProject Time (in-class)\n\n🖥️ slides 24  ⌨️ ae 18\n\n\n\n\n\n\nFri, Dec 6\n\n\n\nProject presentations\n\n📓 project milestone 4\nProject presentations at the beginning of lab session\n\n\n16\nMon, Dec 9\n\n\n\nFinal portfolio check ins\n\n🖥️ slides 25  ⌨️ ae 19\n\n\n\n\n\n\nWed, Dec 11\n\n\n\nFinal portfolio check ins\n\n\n\nProject writeup at 8 am",
    "crumbs": [
      "Course information",
      "Schedule"
    ]
  },
  {
    "objectID": "ae/ae-07-population-types.html",
    "href": "ae/ae-07-population-types.html",
    "title": "AE 07: Types and classes and populations",
    "section": "",
    "text": "We will use the following two packages in this application exercise.\n\ntidyverse: For data import, wrangling, and visualization.\nscales: For better axis labels.\n\n\nlibrary(tidyverse)\nlibrary(scales)"
  },
  {
    "objectID": "ae/ae-07-population-types.html#packages",
    "href": "ae/ae-07-population-types.html#packages",
    "title": "AE 07: Types and classes and populations",
    "section": "",
    "text": "We will use the following two packages in this application exercise.\n\ntidyverse: For data import, wrangling, and visualization.\nscales: For better axis labels.\n\n\nlibrary(tidyverse)\nlibrary(scales)"
  },
  {
    "objectID": "ae/ae-07-population-types.html#type-coercion",
    "href": "ae/ae-07-population-types.html#type-coercion",
    "title": "AE 07: Types and classes and populations",
    "section": "Type coercion",
    "text": "Type coercion\n\nDemo: Determine the type of the following vector. And then, change the type to numeric.\n\n\nx &lt;- c(\"1\", \"2\", \"3\")\n\n# add code here\n\n\nDemo: Once again, determine the type of the following vector. And then, change the type to numeric. What’s different than the previous exercise?\n\n\ny &lt;- c(\"a\", \"b\", \"c\")\n\n# add code here\n\n\nDemo: Once again, determine the type of the following vector. And then, change the type to numeric. What’s different than the previous exercise?\n\n\nz &lt;- c(\"1\", \"2\", \"three\")\n\n# add code here\n\n\nDemo: Suppose you conducted a survey where you asked people how many cars their household owns collectively. And the answers are as follows:\n\n\nsurvey_results &lt;- tibble(cars = c(1, 2, \"three\"))\nsurvey_results\n\n# A tibble: 3 × 1\n  cars \n  &lt;chr&gt;\n1 1    \n2 2    \n3 three\n\n\nThis is annoying because of that third survey taker who just had to go and type out the number instead of providing as a numeric value. So now you need to update the cars variable to be numeric. You do the following:\n\n# add code here\n\nAnd now things are even more annoying because you get a warning NAs introduced by coercion that happened while computing cars = as.numeric(cars) and the response from the third survey taker is now an NA (you lost their data). Fix your mutate() call to avoid this warning.\n\n# add code here\n\n\nYour turn: First, guess the type of the vector. Then, check if you guessed right. I’ve done the first one for you, you’ll see that it’s helpful to check the type of each element of the vector first.\n\nc(1, 1L, \"C\")\n\n\n\nv1 &lt;- c(1, 1L, \"C\")\n\n# to help you guess\ntypeof(1)\n\n[1] \"double\"\n\ntypeof(1L)\n\n[1] \"integer\"\n\ntypeof(\"C\")\n\n[1] \"character\"\n\n# to check after you guess\ntypeof(v1)\n\n[1] \"character\"\n\n\n-   `c(1L / 0, \"A\")`\n\nv2 &lt;- c(1L / 0, \"A\")\n\n# to help you guess\ntypeof(1L)\n\n[1] \"integer\"\n\ntypeof(0)\n\n[1] \"double\"\n\ntypeof(1L / 0)\n\n[1] \"double\"\n\ntypeof(\"A\")\n\n[1] \"character\"\n\n# to check after you guess\ntypeof(v2)\n\n[1] \"character\"\n\n\n- `c(1:3, 5)`\n\nv3 &lt;- c(1:3, 5)\n\n# to help you guess\n\n# add code here\n\n# to check after you guess\n\n# add code here\n\n-   `c(3, \"3+\")`\n\nv4 &lt;- c(3, \"3+\")\n\n# to help you guess\n\n# add code here\n\n# to check after you guess\n\n# add code here\n\n-   `c(NA, TRUE)`\n\nv5 &lt;- c(NA, TRUE)\n\n# to help you guess\n\n# add code here\n\n# to check after you guess\n\n# add code here"
  },
  {
    "objectID": "ae/ae-07-population-types.html#populations-in-continents",
    "href": "ae/ae-07-population-types.html#populations-in-continents",
    "title": "AE 07: Types and classes and populations",
    "section": "Populations in continents",
    "text": "Populations in continents\nIn the previous application exercise you joined two datasets (after a bit of data cleaning), and calculated total population in each continent and visualized it.\n\nFirst, you loaded the data:\n\n\ncontinents &lt;- read_csv(\"https://sta199-s24.github.io/data/continents.csv\")\n\nRows: 285 Columns: 4\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (3): entity, code, continent\ndbl (1): year\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\npopulation &lt;- read_csv(\"https://sta199-s24.github.io/data/world-pop-2022.csv\")\n\nRows: 217 Columns: 3\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (1): country\ndbl (2): year, population\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n\n\nThen you cleaned the country names where the spelling in one data frame didn’t match the other, and joined the data sets:\n\n\npopulation_continent &lt;- population |&gt;\n  mutate(country = case_when(\n    country == \"Congo, Dem. Rep.\" ~ \"Democratic Republic of Congo\",\n    country == \"Congo, Rep.\" ~ \"Congo\",\n    country == \"Hong Kong SAR, China\" ~ \"Hong Kong\",\n    country == \"Korea, Dem. People's Rep.\" ~ \"North Korea\",\n    country == \"Korea, Rep.\" ~ \"South Korea\",\n    country == \"Kyrgyz Republic\" ~ \"Kyrgyzstan\",\n    .default = country\n    )\n  ) |&gt;\n  left_join(continents, by = join_by(country == entity))\n\n\nThen, you calculated total population for each continent.\n\n\npopulation_summary &lt;- population_continent |&gt;\n  group_by(continent) |&gt;\n  summarize(total_pop = sum(population)) |&gt;\n  arrange(desc(total_pop))\n\n\nAnd finally, you visualized these data.\n\n\nggplot(population_summary) +\n  geom_point(aes(x = total_pop, y = continent)) +\n  geom_segment(aes(y = continent, yend = continent, x = 0, xend = total_pop)) +\n  scale_x_continuous(labels = label_number(scale = 1/1000000, suffix = \" bil\")) +\n  theme_minimal() +\n  labs(\n    x = \"Total population\",\n    y = \"Continent\",\n    title = \"World population\",\n    subtitle = \"As of 2022\",\n    caption = \"Data sources: The World Bank and Our World in Data\"\n  )\n\n\n\n\n\n\n\n\n\nQuestion: Take a look at the visualization. How are the continents ordered? What would be a better order?\n\nAdd answer here.\n\nDemo: Reorder the continents on the y-axis (levels of continent) in order of value of total population. You will want to use a function from the forcats package, see https://forcats.tidyverse.org/reference/index.html for inspiration and help.\n\n\n# add code here\n\n\nThink out loud: Describe what is happening in the each step of the code chunk above.\n\nAdd answer here."
  },
  {
    "objectID": "ae/ae-09-chronicle-scrape.html",
    "href": "ae/ae-09-chronicle-scrape.html",
    "title": "AE 09: Opinion articles in The Chronicle",
    "section": "",
    "text": "This will be done in the chronicle-scrape.R R script. Save the resulting data frame in the data folder."
  },
  {
    "objectID": "ae/ae-09-chronicle-scrape.html#part-1---data-scraping",
    "href": "ae/ae-09-chronicle-scrape.html#part-1---data-scraping",
    "title": "AE 09: Opinion articles in The Chronicle",
    "section": "",
    "text": "This will be done in the chronicle-scrape.R R script. Save the resulting data frame in the data folder."
  },
  {
    "objectID": "ae/ae-09-chronicle-scrape.html#part-2---data-analysis",
    "href": "ae/ae-09-chronicle-scrape.html#part-2---data-analysis",
    "title": "AE 09: Opinion articles in The Chronicle",
    "section": "Part 2 - Data analysis",
    "text": "Part 2 - Data analysis\nLet’s start by loading the packages we will need:\n\nlibrary(tidyverse)\n\n\nYour turn (1 minute): Load the data you saved into the data folder and name it chronicle.\n\n\n# add code here\n\n\nYour turn (3 minutes): Who are the most prolific authors of the 100 most recent opinion articles in The Chronicle?\n\n\n# add code here\n\n\nDemo: Draw a line plot of the number of opinion articles published per day in The Chronicle.\n\n\n# add code here\n\n\nDemo: What percent of the most recent 100 opinion articles in The Chronicle mention “climate” in their title?\n\n\n# add code here\n\n\nYour turn (5 minutes): What percent of the most recent 100 opinion articles in The Chronicle mention “climate” in their title or abstract?\n\n\n# add code here\n\n\nTime permitting: Come up with another question and try to answer it using the data.\n\n\n# add code here"
  },
  {
    "objectID": "ae/ae-19-last-ae.html",
    "href": "ae/ae-19-last-ae.html",
    "title": "Last AE",
    "section": "",
    "text": "Make a change, any change, to this document. Render, commit, and push by Sunday evening."
  },
  {
    "objectID": "ae/ae-05-majors-tidying.html",
    "href": "ae/ae-05-majors-tidying.html",
    "title": "AE 05: Tidying StatSci Majors",
    "section": "",
    "text": "Our ultimate goal in this application exercise is to make the following data visualization."
  },
  {
    "objectID": "ae/ae-05-majors-tidying.html#goal",
    "href": "ae/ae-05-majors-tidying.html#goal",
    "title": "AE 05: Tidying StatSci Majors",
    "section": "",
    "text": "Our ultimate goal in this application exercise is to make the following data visualization."
  },
  {
    "objectID": "ae/ae-05-majors-tidying.html#data",
    "href": "ae/ae-05-majors-tidying.html#data",
    "title": "AE 05: Tidying StatSci Majors",
    "section": "Data",
    "text": "Data\nThe data come from the Office of the University Registrar. They make the data available as a table that you can download as a PDF, but I’ve put the data exported in a CSV file for you. Let’s load that in.\n\nlibrary(tidyverse)\n\nstatsci &lt;- read_csv(\"https://sta199-s24.github.io/data/statsci.csv\")\n\nAnd let’s take a look at the data.\n\nstatsci\n\n# A tibble: 4 × 14\n  degree   `2011` `2012` `2013` `2014` `2015` `2016` `2017` `2018` `2019` `2020`\n  &lt;chr&gt;     &lt;dbl&gt;  &lt;dbl&gt;  &lt;dbl&gt;  &lt;dbl&gt;  &lt;dbl&gt;  &lt;dbl&gt;  &lt;dbl&gt;  &lt;dbl&gt;  &lt;dbl&gt;  &lt;dbl&gt;\n1 Statist…     NA      1     NA     NA      4      4      1     NA     NA      1\n2 Statist…      2      2      4      1      3      6      3      4      4      1\n3 Statist…      2      6      1     NA      5      6      6      8      8     17\n4 Statist…      5      9      4     13     10     17     24     21     26     27\n# ℹ 3 more variables: `2021` &lt;dbl&gt;, `2022` &lt;dbl&gt;, `2023` &lt;dbl&gt;"
  },
  {
    "objectID": "ae/ae-05-majors-tidying.html#pivoting",
    "href": "ae/ae-05-majors-tidying.html#pivoting",
    "title": "AE 05: Tidying StatSci Majors",
    "section": "Pivoting",
    "text": "Pivoting\n\nDemo: Pivot the statsci data frame longer such that each row represents a degree type / year combination and year and number of graduates for that year are columns in the data frame.\n\n\n# add your code here\n\n\nQuestion: What is the type of the year variable? Why? What should it be?\n\nAdd your response here.\n\nDemo: Start over with pivoting, and this time also make sure year is a numerical variable in the resulting data frame.\n\n\n# add your code here\n\n\nQuestion: What does an NA mean in this context? Hint: The data come from the university registrar, and they have records on every single graduates, there shouldn’t be anything “unknown” to them about who graduated when.\n\nAdd your response here.\n\nDemo: Add on to your pipeline that you started with pivoting and convert NAs in n to 0s.\n\n\n# add your code here\n\n\nDemo: In our plot the degree types are BS, BS2, AB, and AB2. This information is in our dataset, in the degree column, but this column also has additional characters we don’t need. Create a new column called degree_type with levels BS, BS2, AB, and AB2 (in this order) based on degree. Do this by adding on to your pipeline from earlier.\n\n\n# add your code here\n\n\nYour turn: Now we start making our plot, but let’s not get too fancy right away. Create the following plot, which will serve as the “first draft” on the way to our Goal. Do this by adding on to your pipeline from earlier.\n\n\n\n\n\n\n\n# add your code here\n\n\nYour turn: What aspects of the plot need to be updated to go from the draft you created above to the Goal plot at the beginning of this application exercise.\n\nAdd your response here.\n\nDemo: Update x-axis scale such that the years displayed go from 2011 to 2023 in increments of 2 years. Do this by adding on to your pipeline from earlier.\n\n\n# add your code here\n\n\nDemo: Update line colors using the following level / color assignments. Once again, do this by adding on to your pipeline from earlier.\n\n“BS” = “cadetblue4”\n“BS2” = “cadetblue3”\n“AB” = “lightgoldenrod4”\n“AB2” = “lightgoldenrod3”\n\n\n\n# add your code here\n\n\nYour turn: Update the plot labels (title, subtitle, x, y, and caption) and use theme_minimal(). Once again, do this by adding on to your pipeline from earlier.\n\n\n# add your code here\n\n\nDemo: Finally, adding to your pipeline you’ve developed so far, move the legend into the plot, make its background white, and its border gray. Set fig-width: 7 and fig-height: 5 for your plot in the chunk options.\n\n\n# add your code here"
  },
  {
    "objectID": "ae/ae-10-modeling-fish.html",
    "href": "ae/ae-10-modeling-fish.html",
    "title": "Modelling fish",
    "section": "",
    "text": "For this application exercise, we will work with data on fish. The dataset we will use, called fish, is on two common fish species in fish market sales.\n\nlibrary(tidyverse)\nlibrary(tidymodels)\n\nfish &lt;- read_csv(\"data/fish.csv\")\n\nThe data dictionary is below:\n\n\n\nvariable\ndescription\n\n\n\n\nspecies\nSpecies name of fish\n\n\nweight\nWeight, in grams\n\n\nlength_vertical\nVertical length, in cm\n\n\nlength_diagonal\nDiagonal length, in cm\n\n\nlength_cross\nCross length, in cm\n\n\nheight\nHeight, in cm\n\n\nwidth\nDiagonal width, in cm\n\n\n\n\nVisualizing the model\nWe’re going to investigate the relationship between the weights and heights of fish.\n\nDemo: Create an appropriate plot to investigate this relationship. Add appropriate labels to the plot.\n\n\n# add code here\n\n\nYour turn (5 minutes):\n\nIf you were to draw a a straight line to best represent the relationship between the heights and weights of fish, where would it go? Why?\nAdd response here.\nNow, let R draw the line for you. Refer to the documentation at https://ggplot2.tidyverse.org/reference/geom_smooth.html. Specifically, refer to the method section.\n\n\n# add code here\n\n\nWhat types of questions can this plot help answer?\n\nAdd response here.\nYour turn (3 minutes):\n\nWe can use this line to make predictions. Predict what you think the weight of a fish would be with a height of 10 cm, 15 cm, and 20 cm. Which prediction is considered extrapolation?\n\nAdd response here.\n\nWhat is a residual?\n\nAdd response here.\n\n\n\nModel fitting\n\nDemo: Fit a model to predict fish weights from their heights.\n\n\n# add code here\n\n\nYour turn (3 minutes): Predict what the weight of a fish would be with a height of 10 cm, 15 cm, and 20 cm using this model.\n\n\n# add code here\n\n\nDemo: Calculate predicted weights for all fish in the data and visualize the residuals under this model.\n\n\n# add code here\n\n\n\nModel summary\n\nDemo: Display the model summary including estimates for the slope and intercept along with measurements of uncertainty around them. Show how you can extract these values from the model output.\n\n\n# add code here\n\n\nDemo: Write out your model using mathematical notation.\n\nAdd response here.\n\n\nCorrelation\nWe can also assess correlation between two quantitative variables.\n\nYour turn (5 minutes):\n\nWhat is correlation? What are values correlation can take?\n\nAdd response here.\n\nAre you good at guessing correlation? Give it a try! https://www.rossmanchance.com/applets/2021/guesscorrelation/GuessCorrelation.html\n\nDemo: What is the correlation between heights and weights of fish?\n\n\n# add code here\n\n\n\nAdding a third variable\n\nDemo: Does the relationship between heights and weights of fish change if we take into consideration species? Plot two separate straight lines for the Bream and Roach species.\n\n\n# add code here\n\n\n\nFitting other models\n\nDemo: We can fit more models than just a straight line. Change the following code below to read method = \"loess\". What is different from the plot created before?\n\n\n# add code here"
  },
  {
    "objectID": "ae/ae-12-modeling-penguins-multi.html",
    "href": "ae/ae-12-modeling-penguins-multi.html",
    "title": "AE 12: Modeling penguins with multiple predictors",
    "section": "",
    "text": "In this application exercise we will be studying penguins. The data can be found in the palmerpenguins package and we will use tidyverse and tidymodels for data exploration and modeling, respectively.\nlibrary(tidyverse)\nlibrary(tidymodels)\nlibrary(palmerpenguins)\nPlease read the following context and take a glimpse at the data set before we get started.\nglimpse(penguins)\n\nRows: 344\nColumns: 8\n$ species           &lt;fct&gt; Adelie, Adelie, Adelie, Adelie, Adelie, Adelie, Adel…\n$ island            &lt;fct&gt; Torgersen, Torgersen, Torgersen, Torgersen, Torgerse…\n$ bill_length_mm    &lt;dbl&gt; 39.1, 39.5, 40.3, NA, 36.7, 39.3, 38.9, 39.2, 34.1, …\n$ bill_depth_mm     &lt;dbl&gt; 18.7, 17.4, 18.0, NA, 19.3, 20.6, 17.8, 19.6, 18.1, …\n$ flipper_length_mm &lt;int&gt; 181, 186, 195, NA, 193, 190, 181, 195, 193, 190, 186…\n$ body_mass_g       &lt;int&gt; 3750, 3800, 3250, NA, 3450, 3650, 3625, 4675, 3475, …\n$ sex               &lt;fct&gt; male, female, female, NA, female, male, female, male…\n$ year              &lt;int&gt; 2007, 2007, 2007, 2007, 2007, 2007, 2007, 2007, 2007…\nOur goal is to understand better how various body measurements and attributes of penguins relate to their body mass."
  },
  {
    "objectID": "ae/ae-12-modeling-penguins-multi.html#additive-vs.-interaction-models",
    "href": "ae/ae-12-modeling-penguins-multi.html#additive-vs.-interaction-models",
    "title": "AE 12: Modeling penguins with multiple predictors",
    "section": "Additive vs. interaction models",
    "text": "Additive vs. interaction models\n\nYour turn: Run the two chunks of code below and create two separate plots. How are the two plots different than each other? Which plot does the model we fit above represent?\n\n\n`geom_smooth()` using formula = 'y ~ x'\n\n\nWarning: Removed 2 rows containing non-finite values (`stat_smooth()`).\n\n\nWarning: Removed 2 rows containing missing values (`geom_point()`).\n\n\n`geom_smooth()` using formula = 'y ~ x'\n\n\nWarning: Removed 2 rows containing non-finite values (`stat_smooth()`).\nRemoved 2 rows containing missing values (`geom_point()`).\n\n\n\n\n\n\n\n\n\n\n\nAdd response here.\n\nYour turn: Interpret the slope coefficient for flipper length in the context of the data and the research question.\n\nAdd response here.\n\nDemo: Predict the body mass of a Dream island penguin with a flipper length of 200 mm.\n\n\n# add code here\n\n\nReview: Look back at Plot B. What assumption does the additive model make about the slopes between flipper length and body mass for each of the three islands?\n\nThe additive model assumes the same slope between body mass and flipper length for all three islands.\n\nDemo: Now fit the interaction model represented in Plot A and write the estimated regression model.\n\n\n# add code here\n\n\\[\nadd~math~text~here\n\\]\n\nReview: What does modeling body mass with an interaction effect get us that without doing so does not?\n\nThe interaction effect allows us to model the rate of change in estimated body mass as flipper length increases as different in the three islands.\n\nYour turn: Predict the body mass of a Dream island penguin with a flipper length of 200 mm.\n\n\n# add code here"
  },
  {
    "objectID": "ae/ae-12-modeling-penguins-multi.html#choosing-a-model",
    "href": "ae/ae-12-modeling-penguins-multi.html#choosing-a-model",
    "title": "AE 12: Modeling penguins with multiple predictors",
    "section": "Choosing a model",
    "text": "Choosing a model\nRule of thumb: Occam’s Razor - Don’t overcomplicate the situation! We prefer the simplest best model.\n\n# add code here\n\n\nReview: What is R-squared? What is adjusted R-squared?\n\nR-squared is the percent variability in the response that is explained by our model. (Can use when models have same number of variables for model selection)\nAdjusted R-squared is similar, but has a penalty for the number of variables in the model. (Should use for model selection when models have different numbers of variables)."
  },
  {
    "objectID": "ae/ae-16-equality-randomization-A.html",
    "href": "ae/ae-16-equality-randomization-A.html",
    "title": "AE 16: Equality",
    "section": "",
    "text": "In this application exercise, we’ll do inference on two population proportions."
  },
  {
    "objectID": "ae/ae-16-equality-randomization-A.html#exercise-1",
    "href": "ae/ae-16-equality-randomization-A.html#exercise-1",
    "title": "AE 16: Equality",
    "section": "Exercise 1",
    "text": "Exercise 1\nThe two populations of interest in this survey are 18-24 year olds and 25+ year olds. State the hypotheses for evaluating whether there is a discernible difference between the proportions of those who think “The country needs to continue to make changes to give women equal rights to men.” (need more changes) in the two age groups.\nLet \\(p\\) = the true proportion of those who think “The country needs to continue to make changes to give women equal rights to men” among 18-24 year old NC voters and 25+ year old NC voters.\n\\(H_0: p_{18-24} = p_{25+}\\)\n\\(H_A: p_{18-24} \\ne p_{25+}\\)"
  },
  {
    "objectID": "ae/ae-16-equality-randomization-A.html#exercise-2",
    "href": "ae/ae-16-equality-randomization-A.html#exercise-2",
    "title": "AE 16: Equality",
    "section": "Exercise 2",
    "text": "Exercise 2\nWhat proportion of 18-24 year olds think “The country needs to continue to make changes to give women equal rights to men”? What proportion of 25+ year olds? Calculate and visualize these proportions.\n\nequality |&gt;\n  count(age, response) |&gt;\n  group_by(age) |&gt;\n  mutate(p_hat = n / sum(n))\n\n# A tibble: 4 × 4\n# Groups:   age [2]\n  age   response              n p_hat\n  &lt;chr&gt; &lt;chr&gt;             &lt;int&gt; &lt;dbl&gt;\n1 18-24 Most changes done    32 0.478\n2 18-24 Need more changes    35 0.522\n3 25+   Most changes done   211 0.319\n4 25+   Need more changes   450 0.681\n\nggplot(equality, aes(y = age, fill = response)) +\n  geom_bar(position = \"fill\")"
  },
  {
    "objectID": "ae/ae-16-equality-randomization-A.html#exercise-3",
    "href": "ae/ae-16-equality-randomization-A.html#exercise-3",
    "title": "AE 16: Equality",
    "section": "Exercise 3",
    "text": "Exercise 3\nCalculate the observed sample statistic, i.e., the difference between the proportions of respondents who think “The country needs to continue to make changes to give women equal rights to men” between the two age groups.\n\nobs_stat &lt;- equality |&gt;\n  specify(response = response, explanatory = age, success = \"Need more changes\") |&gt;\n  calculate(stat = \"diff in props\", order = c(\"18-24\", \"25+\"))\n\nobs_stat\n\nResponse: response (factor)\nExplanatory: age (factor)\n# A tibble: 1 × 1\n    stat\n   &lt;dbl&gt;\n1 -0.158"
  },
  {
    "objectID": "ae/ae-16-equality-randomization-A.html#exercise-4",
    "href": "ae/ae-16-equality-randomization-A.html#exercise-4",
    "title": "AE 16: Equality",
    "section": "Exercise 4",
    "text": "Exercise 4\nWhat is the parameter of interest?\nDifference between the proportions of those who think “The country needs to continue to make changes to give women equal rights to men” between 18-24 and 25+ year old NC voters."
  },
  {
    "objectID": "ae/ae-16-equality-randomization-A.html#exercise-5",
    "href": "ae/ae-16-equality-randomization-A.html#exercise-5",
    "title": "AE 16: Equality",
    "section": "Exercise 5",
    "text": "Exercise 5\nExplain how you can set up a simulation for this hypothesis test.\nAdd response here."
  },
  {
    "objectID": "ae/ae-16-equality-randomization-A.html#exercise-6",
    "href": "ae/ae-16-equality-randomization-A.html#exercise-6",
    "title": "AE 16: Equality",
    "section": "Exercise 6",
    "text": "Exercise 6\nConduct the hypothesis test using randomization and visualize and report the p-value.\n\nset.seed(1234)\n\nnull_dist &lt;- equality |&gt;\n  specify(response = response, explanatory = age, success = \"Need more changes\") |&gt;\n  hypothesize(null = \"independence\") |&gt;\n  generate(reps = 1000, type = \"permute\") |&gt;\n  calculate(stat = \"diff in props\", order = c(\"18-24\", \"25+\"))\n\nnull_dist |&gt;\n  get_p_value(obs_stat = obs_stat, direction = \"two sided\")\n\n# A tibble: 1 × 1\n  p_value\n    &lt;dbl&gt;\n1   0.012\n\nnull_dist |&gt;\n  visualize() +\n  shade_p_value(obs_stat = obs_stat, direction = \"two sided\")"
  },
  {
    "objectID": "ae/ae-16-equality-randomization-A.html#exercise-7",
    "href": "ae/ae-16-equality-randomization-A.html#exercise-7",
    "title": "AE 16: Equality",
    "section": "Exercise 7",
    "text": "Exercise 7\nWhat is the conclusion of the hypothesis test?\nWith a p-value of 0.018, which is smaller than the discernability level of 0.05, we reject the null hypothesis. The data provide convincing evidence that there is a difference between the proportions of those who think “The country needs to continue to make changes to give women equal rights to men”."
  },
  {
    "objectID": "ae/ae-16-equality-randomization-A.html#exercise-8",
    "href": "ae/ae-16-equality-randomization-A.html#exercise-8",
    "title": "AE 16: Equality",
    "section": "Exercise 8",
    "text": "Exercise 8\nInterpret the p-value in the context of the data and the hypotheses.\nThe probability of observing a difference in sample proportions of those who think “The country needs to continue to make changes to give women equal rights to men” between a sample of 67 18-24 year olds and 661 25+ year olds of 0.158 or more (in either direction) is 0.018 if in fact the two population proportions are equal."
  },
  {
    "objectID": "ae/ae-16-equality-randomization-A.html#exercise-9",
    "href": "ae/ae-16-equality-randomization-A.html#exercise-9",
    "title": "AE 16: Equality",
    "section": "Exercise 9",
    "text": "Exercise 9\nEstimate the difference in population proportions of 18-24 year old NC voters and 25+ year old NC voters using a 95% bootstrap interval.\n\nset.seed(1234)\n\nboot_dist &lt;- equality |&gt;\n  specify(response = response, explanatory = age, success = \"Need more changes\") |&gt;\n  generate(reps = 1000, type = \"bootstrap\") |&gt;\n  calculate(stat = \"diff in props\", order = c(\"18-24\", \"25+\"))\n\nci &lt;- boot_dist |&gt;\n  get_ci()\nci\n\n# A tibble: 1 × 2\n  lower_ci upper_ci\n     &lt;dbl&gt;    &lt;dbl&gt;\n1   -0.288  -0.0279\n\nvisualize(boot_dist) +\n  shade_ci(ci)"
  },
  {
    "objectID": "ae/ae-16-equality-randomization-A.html#exercise-10",
    "href": "ae/ae-16-equality-randomization-A.html#exercise-10",
    "title": "AE 16: Equality",
    "section": "Exercise 10",
    "text": "Exercise 10\nInterpret the confidence interval in context of the data.\nWe are 95% confident that the proportion of 18-24 year old NC voters who think “The country needs to continue to make changes to give women equal rights to men” is 28.4% to 3.4% lower than 25+ year old NC voters who share this opinion."
  },
  {
    "objectID": "ae/ae-16-equality-randomization-A.html#exercise-11",
    "href": "ae/ae-16-equality-randomization-A.html#exercise-11",
    "title": "AE 16: Equality",
    "section": "Exercise 11",
    "text": "Exercise 11\nDescribe how the simulation scheme for bootstrapping is different than that for the hypothesis test.\nFor bootstrapping we resample with replacement. For testing, we shuffle under the assumption of independence."
  },
  {
    "objectID": "ae/ae-16-equality-randomization-A.html#exercise-12",
    "href": "ae/ae-16-equality-randomization-A.html#exercise-12",
    "title": "AE 16: Equality",
    "section": "Exercise 12",
    "text": "Exercise 12\nWhat is \\(p\\) vs. \\(\\hat{p}\\) vs. p-value. Explain generically as well as in the context of these data and research question.\nAdd response here."
  },
  {
    "objectID": "ae/ae-16-equality-randomization-A.html#exercise-13",
    "href": "ae/ae-16-equality-randomization-A.html#exercise-13",
    "title": "AE 16: Equality",
    "section": "Exercise 13",
    "text": "Exercise 13\nWhat is bootstrap distribution vs. null distribution? Explain generically as well as in the context of these data and research question.\nAdd response here."
  },
  {
    "objectID": "ae/ae-01-meet-the-penguins.html",
    "href": "ae/ae-01-meet-the-penguins.html",
    "title": "AE 01: Meet the penguins",
    "section": "",
    "text": "For this application exercise, we’ll use the tidyverse and palmerpenguins packages.\n\nlibrary(tidyverse)\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.4.4     ✔ tibble    3.2.1\n✔ lubridate 1.9.3     ✔ tidyr     1.3.1\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\nlibrary(palmerpenguins)\n\nThe dataset we will visualize is called penguins. Let’s glimpse() at it.\n\nYour turn: Replace #add code here with the code for “glimpse”ing at the data penguins data frame – glimpse(penguins). Render the document and view the output.\n\n\n# add code here\n\n\nDemo: First, replace the blank below with the number of rows in the penguins data frame based on the output of the chunk below. Then, replace it with “inline code” and render again.\n\n\nnrow(penguins)\n\n[1] 344\n\n\nThere are ___ penguins in the penguins data frame.\n\nx &lt;- 2\nx * 3\n\n[1] 6"
  },
  {
    "objectID": "ae/ae-06-population-joining.html",
    "href": "ae/ae-06-population-joining.html",
    "title": "AE 06: Joining country populations with continents",
    "section": "",
    "text": "Our ultimate goal in this application exercise is to create a bar plot of total populations of continents, where the input data are:\n\nCountries and populations\nCountries and continents\n\n\nlibrary(tidyverse) # for data wrangling and visualization\nlibrary(scales)    # for pretty axis breaks"
  },
  {
    "objectID": "ae/ae-06-population-joining.html#goal",
    "href": "ae/ae-06-population-joining.html#goal",
    "title": "AE 06: Joining country populations with continents",
    "section": "",
    "text": "Our ultimate goal in this application exercise is to create a bar plot of total populations of continents, where the input data are:\n\nCountries and populations\nCountries and continents\n\n\nlibrary(tidyverse) # for data wrangling and visualization\nlibrary(scales)    # for pretty axis breaks"
  },
  {
    "objectID": "ae/ae-06-population-joining.html#data",
    "href": "ae/ae-06-population-joining.html#data",
    "title": "AE 06: Joining country populations with continents",
    "section": "Data",
    "text": "Data\n\nCountries and populations\nThese data come from The World Bank and reflect population counts as of 2022.\n\npopulation &lt;- read_csv(\"https://sta199-s24.github.io/data/world-pop-2022.csv\")\n\nLet’s take a look at the data.\n\npopulation\n\n# A tibble: 217 × 3\n   country              year population\n   &lt;chr&gt;               &lt;dbl&gt;      &lt;dbl&gt;\n 1 Afghanistan          2022    41129. \n 2 Albania              2022     2778. \n 3 Algeria              2022    44903. \n 4 American Samoa       2022       44.3\n 5 Andorra              2022       79.8\n 6 Angola               2022    35589. \n 7 Antigua and Barbuda  2022       93.8\n 8 Argentina            2022    46235. \n 9 Armenia              2022     2780. \n10 Aruba                2022      106. \n# ℹ 207 more rows\n\n\n\n\nContinents\nThese data come from Our World in Data.\n\ncontinents &lt;- read_csv(\"https://sta199-s24.github.io/data/continents.csv\")\n\nLet’s take a look at the data.\n\ncontinents\n\n# A tibble: 285 × 4\n   entity                code      year continent    \n   &lt;chr&gt;                 &lt;chr&gt;    &lt;dbl&gt; &lt;chr&gt;        \n 1 Abkhazia              OWID_ABK  2015 Asia         \n 2 Afghanistan           AFG       2015 Asia         \n 3 Akrotiri and Dhekelia OWID_AKD  2015 Asia         \n 4 Aland Islands         ALA       2015 Europe       \n 5 Albania               ALB       2015 Europe       \n 6 Algeria               DZA       2015 Africa       \n 7 American Samoa        ASM       2015 Oceania      \n 8 Andorra               AND       2015 Europe       \n 9 Angola                AGO       2015 Africa       \n10 Anguilla              AIA       2015 North America\n# ℹ 275 more rows"
  },
  {
    "objectID": "ae/ae-06-population-joining.html#exercises",
    "href": "ae/ae-06-population-joining.html#exercises",
    "title": "AE 06: Joining country populations with continents",
    "section": "Exercises",
    "text": "Exercises\n\nThink out loud:\n\nWhich variable(s) will we use to join the population and continents data frames?\n\nAdd response here.\n\nWe want to create a new data frame that keeps all rows and columns from population and brings in the corresponding information from continents. Which join function should we use?\n\nAdd response here.\nDemo: Join the two data frames and name assign the joined data frame to a new data frame population_continents.\n\n\n# add code here\n\n\nDemo: Take a look at the newly created population_continent data frame. There are some countries that were not in continents. First, identify which countries these are (they will have NA values for continent).\n\n\n# add code here\n\n\nDemo: All of these countries are actually in the continents data frame, but under different names. So, let’s clean that data first by updating the country names in the population data frame in a way they will match the continents data frame, and then joining them, using a case_when() statement in mutate(). At the end, check that all countries now have continent information.\n\n\n# add code here\n\n\nThink out loud: Which continent do you think has the highest population? Which do you think has the second highest? The lowest?\n\nAdd your response here.\n\nDemo: Create a new data frame called population_summary that contains a row for each continent and a column for the total population for that continent, in descending order of population. Note that the function for calculating totals in R is sum().\n\n\n# add code here\n\n\nYour turn: Make a bar plot with total population on the y-axis and continent on the x-axis, where the height of each bar represents the total population in that continent.\n\n\n# add code here\n\n\nYour turn: Recreate the following plot, which is commonly referred to as a lollipop plot. Hint: Start with the points, then try adding the segments, then add axis labels and caption, and finally, as a stretch goal, update the x scale (which will require a function we haven’t introduced in lectures or labs yet!).\n\n\n\n# add code here\n\n\nThink out loud: What additional improvements would you like to make to this plot.\n\nAdd your response here."
  },
  {
    "objectID": "ae/ae-11-modeling-penguins.html",
    "href": "ae/ae-11-modeling-penguins.html",
    "title": "AE 11: Modelling penguins",
    "section": "",
    "text": "In this application exercise we will be studying penguins. The data can be found in the palmerpenguins package and we will use tidyverse and tidymodels for data exploration and modeling, respectively.\n\nlibrary(tidyverse)\nlibrary(tidymodels)\nlibrary(palmerpenguins)\n\nPlease read the following context and take a glimpse at the data set before we get started.\n\nThis data set comprising various measurements of three different penguin species, namely Adelie, Gentoo, and Chinstrap. The rigorous study was conducted in the islands of the Palmer Archipelago, Antarctica. These data were collected from 2007 to 2009 by Dr. Kristen Gorman with the Palmer Station Long Term Ecological Research Program, part of the US Long Term Ecological Research Network. The data set is called penguins.\n\n\n# add code here\n\nOur goal is to understand better how various body measurements and attributes of penguins relate to their body mass. First, we are going to investigate the relationship between a penguins’ flipper lengths and their body masses.\n\nQuestion: Based on our research focus, which variable is the response variable?\n\nAdd response here\n\nDemo: Visualize the relationship between flipper length and body mass of penguins.\n\n\n# add code here \n\n\nCorrelation\n\nYour turn (5 minutes):\n\nWhat is correlation? What values can correlation take?\nStrength and direction of a linear relationship. It’s bounded by -1 and 1.\nAre you good at guessing correlation? Give it a try! https://www.rossmanchance.com/applets/2021/guesscorrelation/GuessCorrelation.html\n\nDemo: What is the correlation between flipper length and body mass of penguins?\n\n\n# add code here\n\n\n\nDefining, fitting, and summarizing a model\n\nDemo: Write the population model below that explains the relationship between body mass and flipper length.\n\n\\[\nadd~math~text~here\n\\]\n\nDemo: Fit the linear regression model and display the results. Write the estimated model output below.\n\n\n# add code here\n\n\\[\nadd~math~text~here\n\\]\n\nYour turn: Interpret the slope and the intercept in the context of the data.\n\nIntercept: Add your response here\nSlopes: Add your response here\n\nYour turn: Recreate the visualization from above, this time adding a regression line to the visualization geom_smooth(method = \"lm\").\n\n\n# add code here\n\n\nWhat is the estimated body mass for a penguin with a flipper length of 210?\n\n\n# add code here\n\n\nWhat is the estimated body mass for a penguin with a flipper length of 100?\n\n\n# add code here\n\n\n\nAnother model\n\nDemo: A different researcher wants to look at body weight of penguins based on the island they were recorded on. How are the variables involved in this analysis different?\n\nAdd response here\n\nDemo: Make an appropriate visualization to investigate this relationship below. Additionally, calculate the mean body mass by island.\n\n\n# add code here\n\n\n# add code here\n\n\nDemo: Change the geom of your previous plot to geom_point(). Use this plot to think about how R models these data.\n\n\n# add code here\n\n\nYour turn: Fit the linear regression model and display the results. Write the estimated model output below.\n\n\n# add code here\n\nAdd math text here\n\nDemo: Interpret each coefficient in context of the problem.\n\nIntercept: Add your response here\nSlopes: Add your response here\n\nDemo: What is the estimated body weight of a penguin on Biscoe island? What are the estimated body weights of penguins on Dream and Torgersen islands?\n\n\n# add code here"
  },
  {
    "objectID": "ae/ae-13-modeling-loans.html",
    "href": "ae/ae-13-modeling-loans.html",
    "title": "Modelling loan interest rates",
    "section": "",
    "text": "In this application exercise we will be studying loan interest rates. The dataset is one you’ve come across before in your reading – the dataset about loans from the peer-to-peer lender, Lending Club, from the openintro package. We will use tidyverse and tidymodels for data exploration and modeling, respectively.\nlibrary(tidyverse)\nlibrary(tidymodels)\nlibrary(openintro)\nBefore we use the dataset, we’ll make a few transformations to it.\nAdd response here.\nloans &lt;- loans_full_schema |&gt;\n  mutate(\n    credit_util = total_credit_utilized / total_credit_limit,\n    bankruptcy = as.factor(if_else(public_record_bankrupt == 0, 0, 1)),\n    verified_income = droplevels(verified_income),\n    homeownership = str_to_title(homeownership),\n    homeownership = fct_relevel(homeownership, \"Rent\", \"Mortgage\", \"Own\")\n  ) |&gt;\n  rename(credit_checks = inquiries_last_12m) |&gt;\n  select(\n    interest_rate, loan_amount, verified_income, \n    debt_to_income, credit_util, bankruptcy, term, \n    credit_checks, issue_month, homeownership\n  )\nHere is a glimpse at the data:\nglimpse(loans)\n\nRows: 10,000\nColumns: 10\n$ interest_rate   &lt;dbl&gt; 14.07, 12.61, 17.09, 6.72, 14.07, 6.72, 13.59, 11.99, …\n$ loan_amount     &lt;int&gt; 28000, 5000, 2000, 21600, 23000, 5000, 24000, 20000, 2…\n$ verified_income &lt;fct&gt; Verified, Not Verified, Source Verified, Not Verified,…\n$ debt_to_income  &lt;dbl&gt; 18.01, 5.04, 21.15, 10.16, 57.96, 6.46, 23.66, 16.19, …\n$ credit_util     &lt;dbl&gt; 0.54759517, 0.15003472, 0.66134832, 0.19673228, 0.7549…\n$ bankruptcy      &lt;fct&gt; 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, …\n$ term            &lt;dbl&gt; 60, 36, 36, 36, 36, 36, 60, 60, 36, 36, 60, 60, 36, 60…\n$ credit_checks   &lt;int&gt; 6, 1, 4, 0, 7, 6, 1, 1, 3, 0, 4, 4, 8, 6, 0, 0, 4, 6, …\n$ issue_month     &lt;fct&gt; Mar-2018, Feb-2018, Feb-2018, Jan-2018, Mar-2018, Jan-…\n$ homeownership   &lt;fct&gt; Mortgage, Rent, Rent, Rent, Rent, Own, Mortgage, Mortg…"
  },
  {
    "objectID": "ae/ae-13-modeling-loans.html#main-effects-model",
    "href": "ae/ae-13-modeling-loans.html#main-effects-model",
    "title": "Modelling loan interest rates",
    "section": "Main effects model",
    "text": "Main effects model\n\nDemo: Fit a model to predict interest rate from credit utilization and homeownership, without an interaction effect between the two predictors. Display the summary output and write out the estimated regression equation.\n\n\n# add code here\n\nAdd response here.\n\nDemo: Write the estimated regression equation for loan applications from each of the homeownership groups separately.\n\nRent: Add response here.\nMortgage: Add response here.\nOwn: Add response here.\n\nQuestion: How does the model predict the interest rate to vary as credit utilization varies for loan applicants with different homeownership status. Are the rates the same or different?\n\nAdd response here."
  },
  {
    "objectID": "ae/ae-13-modeling-loans.html#interaction-effects-model",
    "href": "ae/ae-13-modeling-loans.html#interaction-effects-model",
    "title": "Modelling loan interest rates",
    "section": "Interaction effects model",
    "text": "Interaction effects model\n\nDemo: Fit a model to predict interest rate from credit utilization and homeownership, with an interaction effect between the two predictors. Display the summary output and write out the estimated regression equation.\n\n\n# add code here\n\nAdd response here.\n\nDemo: Write the estimated regression equation for loan applications from each of the homeownership groups separately.\n\nRent: Add response here.\nMortgage: Add response here.\nOwn: Add response here.\n\nQuestion: How does the model predict the interest rate to vary as credit utilization varies for loan applicants with different homeownership status. Are the rates the same or different?\n\nAdd response here."
  },
  {
    "objectID": "ae/ae-13-modeling-loans.html#choosing-a-model",
    "href": "ae/ae-13-modeling-loans.html#choosing-a-model",
    "title": "Modelling loan interest rates",
    "section": "Choosing a model",
    "text": "Choosing a model\nRule of thumb: Occam’s Razor - Don’t overcomplicate the situation! We prefer the simplest best model.\n\n# add code here\n\n\nReview: What is R-squared? What is adjusted R-squared?\n\nAdd response here.\n\nQuestion: Based on the adjusted \\(R^2\\)s of these two models, which one do we prefer?\n\nAdd response here."
  },
  {
    "objectID": "ae/ae-08-data-import-A.html",
    "href": "ae/ae-08-data-import-A.html",
    "title": "AE 08: Data import",
    "section": "",
    "text": "Important\n\n\n\nThese are suggested answers. This document should be used as reference only, it’s not designed to be an exhaustive key."
  },
  {
    "objectID": "ae/ae-08-data-import-A.html#packages",
    "href": "ae/ae-08-data-import-A.html#packages",
    "title": "AE 08: Data import",
    "section": "Packages",
    "text": "Packages\nWe will use the following two packages in this application exercise.\n\ntidyverse: For data import, wrangling, and visualization.\nreadxl: For importing data from Excel.\n\n\nlibrary(tidyverse)\nlibrary(readxl)"
  },
  {
    "objectID": "ae/ae-06-population-joining-A.html",
    "href": "ae/ae-06-population-joining-A.html",
    "title": "AE 06: Joining country populations with continents",
    "section": "",
    "text": "Important\n\n\n\nThese are suggested answers. This document should be used as reference only, it’s not designed to be an exhaustive key."
  },
  {
    "objectID": "ae/ae-06-population-joining-A.html#goal",
    "href": "ae/ae-06-population-joining-A.html#goal",
    "title": "AE 06: Joining country populations with continents",
    "section": "Goal",
    "text": "Goal\nOur ultimate goal in this application exercise is to create a bar plot of total populations of continents, where the input data are:\n\nCountries and populations\nCountries and continents\n\n\nlibrary(tidyverse) # for data wrangling and visualization\nlibrary(scales)    # for pretty axis breaks"
  },
  {
    "objectID": "ae/ae-06-population-joining-A.html#data",
    "href": "ae/ae-06-population-joining-A.html#data",
    "title": "AE 06: Joining country populations with continents",
    "section": "Data",
    "text": "Data\n\nCountries and populations\nThese data come from The World Bank and reflect population counts as of 2022.\n\npopulation &lt;- read_csv(\"https://sta199-s24.github.io/data/world-pop-2022.csv\")\n\nLet’s take a look at the data.\n\npopulation\n\n# A tibble: 217 × 3\n   country              year population\n   &lt;chr&gt;               &lt;dbl&gt;      &lt;dbl&gt;\n 1 Afghanistan          2022    41129. \n 2 Albania              2022     2778. \n 3 Algeria              2022    44903. \n 4 American Samoa       2022       44.3\n 5 Andorra              2022       79.8\n 6 Angola               2022    35589. \n 7 Antigua and Barbuda  2022       93.8\n 8 Argentina            2022    46235. \n 9 Armenia              2022     2780. \n10 Aruba                2022      106. \n# ℹ 207 more rows\n\n\n\n\nContinents\nThese data come from Our World in Data.\n\ncontinents &lt;- read_csv(\"https://sta199-s24.github.io/data/continents.csv\")\n\nLet’s take a look at the data.\n\ncontinents\n\n# A tibble: 285 × 4\n   entity                code      year continent    \n   &lt;chr&gt;                 &lt;chr&gt;    &lt;dbl&gt; &lt;chr&gt;        \n 1 Abkhazia              OWID_ABK  2015 Asia         \n 2 Afghanistan           AFG       2015 Asia         \n 3 Akrotiri and Dhekelia OWID_AKD  2015 Asia         \n 4 Aland Islands         ALA       2015 Europe       \n 5 Albania               ALB       2015 Europe       \n 6 Algeria               DZA       2015 Africa       \n 7 American Samoa        ASM       2015 Oceania      \n 8 Andorra               AND       2015 Europe       \n 9 Angola                AGO       2015 Africa       \n10 Anguilla              AIA       2015 North America\n# ℹ 275 more rows"
  },
  {
    "objectID": "ae/ae-06-population-joining-A.html#exercises",
    "href": "ae/ae-06-population-joining-A.html#exercises",
    "title": "AE 06: Joining country populations with continents",
    "section": "Exercises",
    "text": "Exercises\n\nThink out loud:\n\nWhich variable(s) will we use to join the population and continents data frames?\n\ncountry from population and entity from continents\n\nWe want to create a new data frame that keeps all rows and columns from population and brings in the corresponding information from continents. Which join function should we use?\n\nleft_join() with population on the left.\nDemo: Join the two data frames and name assign the joined data frame to a new data frame population_continents.\n\n\npopulation_continent &lt;- population |&gt;\n  left_join(continents, by = join_by(country == entity))\n\n\nDemo: Take a look at the newly created population_continent data frame. There are some countries that were not in continents. First, identify which countries these are (they will have NA values for continent).\n\n\npopulation_continent |&gt;\n  filter(is.na(continent))\n\n# A tibble: 6 × 6\n  country                   year.x population code  year.y continent\n  &lt;chr&gt;                      &lt;dbl&gt;      &lt;dbl&gt; &lt;chr&gt;  &lt;dbl&gt; &lt;chr&gt;    \n1 Congo, Dem. Rep.            2022     99010. &lt;NA&gt;      NA &lt;NA&gt;     \n2 Congo, Rep.                 2022      5970. &lt;NA&gt;      NA &lt;NA&gt;     \n3 Hong Kong SAR, China        2022      7346. &lt;NA&gt;      NA &lt;NA&gt;     \n4 Korea, Dem. People's Rep.   2022     26069. &lt;NA&gt;      NA &lt;NA&gt;     \n5 Korea, Rep.                 2022     51628. &lt;NA&gt;      NA &lt;NA&gt;     \n6 Kyrgyz Republic             2022      6975. &lt;NA&gt;      NA &lt;NA&gt;     \n\n\n\nDemo: All of these countries are actually in the continents data frame, but under different names. So, let’s clean that data first by updating the country names in the population data frame in a way they will match the continents data frame, and then joining them, using a case_when() statement in mutate(). At the end, check that all countries now have continent information.\n\n\npopulation_continent &lt;- population |&gt;\n  mutate(country = case_when(\n    country == \"Congo, Dem. Rep.\" ~ \"Democratic Republic of Congo\",\n    country == \"Congo, Rep.\" ~ \"Congo\",\n    country == \"Hong Kong SAR, China\" ~ \"Hong Kong\",\n    country == \"Korea, Dem. People's Rep.\" ~ \"North Korea\",\n    country == \"Korea, Rep.\" ~ \"South Korea\",\n    country == \"Kyrgyz Republic\" ~ \"Kyrgyzstan\",\n    .default = country\n    )\n  ) |&gt;\n  left_join(continents, by = join_by(country == entity))\n\npopulation_continent |&gt;\n  filter(is.na(continent))\n\n# A tibble: 0 × 6\n# ℹ 6 variables: country &lt;chr&gt;, year.x &lt;dbl&gt;, population &lt;dbl&gt;, code &lt;chr&gt;,\n#   year.y &lt;dbl&gt;, continent &lt;chr&gt;\n\n\n\nThink out loud: Which continent do you think has the highest population? Which do you think has the second highest? The lowest?\n\nAdd your response here.\n\nDemo: Create a new data frame called population_summary that contains a row for each continent and a column for the total population for that continent, in descending order of population. Note that the function for calculating totals in R is sum().\n\n\npopulation_summary &lt;- population_continent |&gt;\n  group_by(continent) |&gt;\n  summarize(total_pop = sum(population)) |&gt;\n  arrange(desc(total_pop))\n\n\nYour turn: Make a bar plot with total population on the y-axis and continent on the x-axis, where the height of each bar represents the total population in that continent.\n\n\nggplot(population_summary, aes(x = continent, y = total_pop)) +\n  geom_col()\n\n\n\n\n\n\n\n\n\nYour turn: Recreate the following plot, which is commonly referred to as a lollipop plot. Hint: Start with the points, then try adding the segments, then add axis labels and caption, and finally, as a stretch goal, update the x scale (which will require a function we haven’t introduced in lectures or labs yet!).\n\n\n\nggplot(population_summary, aes()) +\n  geom_point(aes(x = total_pop, y = continent)) +\n  geom_segment(aes(y = continent, yend = continent, x = 0, xend = total_pop)) +\n  scale_x_continuous(labels = label_number(scale = 1/1000000, suffix = \" bil\")) +\n  theme_minimal() +\n  labs(\n    x = \"Total population\",\n    y = \"Continent\",\n    title = \"World population\",\n    subtitle = \"As of 2022\",\n    caption = \"Data sources: The World Bank and Our World in Data\"\n  )\n\n\n\n\n\n\n\n\n\nThink out loud: What additional improvements would you like to make to this plot.\n\nAnswers may vary. Ordering the continents in decreasing order of population."
  },
  {
    "objectID": "ae/ae-07-population-types-A.html",
    "href": "ae/ae-07-population-types-A.html",
    "title": "AE 07: Types and classes and populations",
    "section": "",
    "text": "Important\n\n\n\nThese are suggested answers. This document should be used as reference only, it’s not designed to be an exhaustive key."
  },
  {
    "objectID": "ae/ae-07-population-types-A.html#packages",
    "href": "ae/ae-07-population-types-A.html#packages",
    "title": "AE 07: Types and classes and populations",
    "section": "Packages",
    "text": "Packages\nWe will use the following two packages in this application exercise.\n\ntidyverse: For data import, wrangling, and visualization.\nscales: For better axis labels.\n\n\nlibrary(tidyverse)\nlibrary(skimr)\nlibrary(scales)"
  },
  {
    "objectID": "ae/ae-07-population-types-A.html#type-coercion",
    "href": "ae/ae-07-population-types-A.html#type-coercion",
    "title": "AE 07: Types and classes and populations",
    "section": "Type coercion",
    "text": "Type coercion\n\nDemo: Determine the type of the following vector. And then, change the type to numeric.\n\nx &lt;- c(\"1\", \"2\", \"3\")\ntypeof(x)\n\n[1] \"character\"\n\nas.numeric(x)\n\n[1] 1 2 3\n\n\nDemo: Once again, determine the type of the following vector. And then, change the type to numeric. What’s different than the previous exercise?\n\ny &lt;- c(\"a\", \"b\", \"c\")\ntypeof(y)\n\n[1] \"character\"\n\nas.numeric(y)\n\nWarning: NAs introduced by coercion\n\n\n[1] NA NA NA\n\n\nDemo: Once again, determine the type of the following vector. And then, change the type to numeric. What’s different than the previous exercise?\n\nz &lt;- c(\"1\", \"2\", \"three\")\ntypeof(z)\n\n[1] \"character\"\n\nas.numeric(z)\n\nWarning: NAs introduced by coercion\n\n\n[1]  1  2 NA\n\n\nDemo: Suppose you conducted a survey where you asked people how many cars their household owns collectively. And the answers are as follows:\n\nsurvey_results &lt;- tibble(cars = c(1, 2, \"three\"))\nsurvey_results\n\n# A tibble: 3 × 1\n  cars \n  &lt;chr&gt;\n1 1    \n2 2    \n3 three\n\n\nThis is annoying because of that third survey taker who just had to go and type out the number instead of providing as a numeric value. So now you need to update the cars variable to be numeric. You do the following\n\nsurvey_results |&gt;\n  mutate(cars = as.numeric(cars))\n\nWarning: There was 1 warning in `mutate()`.\nℹ In argument: `cars = as.numeric(cars)`.\nCaused by warning:\n! NAs introduced by coercion\n\n\n# A tibble: 3 × 1\n   cars\n  &lt;dbl&gt;\n1     1\n2     2\n3    NA\n\n\nAnd now things are even more annoying because you get a warning NAs introduced by coercion that happened while computing cars = as.numeric(cars) and the response from the third survey taker is now an NA (you lost their data). Fix your mutate() call to avoid this warning.\n\nsurvey_results |&gt;\n  mutate(\n    cars = if_else(cars == \"three\", \"3\", cars),\n    cars = as.numeric(cars)\n  )\n\n# A tibble: 3 × 1\n   cars\n  &lt;dbl&gt;\n1     1\n2     2\n3     3\n\n\nYour turn: First, guess the type of the vector. Then, check if you guessed right. I’ve done the first one for you, you’ll see that it’s helpful to check the type of each element of the vector first.\n\nc(1, 1L, \"C\")\n\nv1 &lt;- c(1, 1L, \"C\")\n\n# to help you guess\ntypeof(1)\n\n[1] \"double\"\n\ntypeof(1L)\n\n[1] \"integer\"\n\ntypeof(\"C\")\n\n[1] \"character\"\n\n# to check after you guess\ntypeof(v1)\n\n[1] \"character\"\n\n\nc(1L / 0, \"A\")\n\nv2 &lt;- c(1L / 0, \"A\")\n\n# to help you guess\ntypeof(1L)\n\n[1] \"integer\"\n\ntypeof(0)\n\n[1] \"double\"\n\ntypeof(1L / 0)\n\n[1] \"double\"\n\ntypeof(\"A\")\n\n[1] \"character\"\n\n# to check after you guess\ntypeof(v2)\n\n[1] \"character\"\n\n\nc(1:3, 5)\n\nv3 &lt;- c(1:3, 5)\n\n# to help you guess\ntypeof(1:3)\n\n[1] \"integer\"\n\ntypeof(5)\n\n[1] \"double\"\n\n# to check after you guess\ntypeof(v3)\n\n[1] \"double\"\n\n\nc(3, \"3+\")\n\nv4 &lt;- c(3, \"3+\")\n\n# to help you guess\ntypeof(3)\n\n[1] \"double\"\n\ntypeof(\"3+\")\n\n[1] \"character\"\n\n# to check after you guess\ntypeof(v4)\n\n[1] \"character\"\n\n\nc(NA, TRUE)\n\nv5 &lt;- c(NA, TRUE)\n\n# to help you guess\ntypeof(NA)\n\n[1] \"logical\"\n\ntypeof(TRUE)\n\n[1] \"logical\"\n\n# to check after you guess\ntypeof(v5)\n\n[1] \"logical\""
  },
  {
    "objectID": "ae/ae-07-population-types-A.html#populations-in-continents",
    "href": "ae/ae-07-population-types-A.html#populations-in-continents",
    "title": "AE 07: Types and classes and populations",
    "section": "Populations in continents",
    "text": "Populations in continents\nIn the previous application exercise you joined two datasets (after a bit of data cleaning), and calculated total population in each continent and visualized it.\n\nFirst, you loaded the data:\n\n\ncontinents &lt;- read_csv(\"https://sta199-s24.github.io/data/continents.csv\")\n\nRows: 285 Columns: 4\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (3): entity, code, continent\ndbl (1): year\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\npopulation &lt;- read_csv(\"https://sta199-s24.github.io/data/world-pop-2022.csv\")\n\nRows: 217 Columns: 3\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (1): country\ndbl (2): year, population\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n\n\nThen you cleaned the country names where the spelling in one data frame didn’t match the other, and joined the data sets:\n\n\npopulation_continent &lt;- population |&gt;\n  mutate(country = case_when(\n    country == \"Congo, Dem. Rep.\" ~ \"Democratic Republic of Congo\",\n    country == \"Congo, Rep.\" ~ \"Congo\",\n    country == \"Hong Kong SAR, China\" ~ \"Hong Kong\",\n    country == \"Korea, Dem. People's Rep.\" ~ \"North Korea\",\n    country == \"Korea, Rep.\" ~ \"South Korea\",\n    country == \"Kyrgyz Republic\" ~ \"Kyrgyzstan\",\n    .default = country\n    )\n  ) |&gt;\n  left_join(continents, by = join_by(country == entity))\n\n\nThen, you calculated total population for each continent.\n\n\npopulation_summary &lt;- population_continent |&gt;\n  group_by(continent) |&gt;\n  summarize(total_pop = sum(population)) |&gt;\n  arrange(desc(total_pop))\n\n\nAnd finally, you visualized these data.\n\n\nggplot(population_summary) +\n  geom_point(aes(x = total_pop, y = continent)) +\n  geom_segment(aes(y = continent, yend = continent, x = 0, xend = total_pop)) +\n  scale_x_continuous(labels = label_number(scale = 1/1000000, suffix = \" bil\")) +\n  theme_minimal() +\n  labs(\n    x = \"Total population\",\n    y = \"Continent\",\n    title = \"World population\",\n    subtitle = \"As of 2022\",\n    caption = \"Data sources: The World Bank and Our World in Data\"\n  )\n\n\n\n\n\n\n\n\n\nQuestion: Take a look at the visualization. How are the continents ordered? What would be a better order?\n\nOrdering the continents by the value of total population would be better.\n\nDemo: Reorder the continents on the y-axis (levels of continent) in order of value of total population. You will want to use a function from the forcats package, see https://forcats.tidyverse.org/reference/index.html for inspiration and help.\n\n\npopulation_summary |&gt;\n  mutate(continent = fct_reorder(continent, total_pop)) |&gt;\n  ggplot() +\n  geom_point(aes(x = total_pop, y = continent)) +\n  geom_segment(aes(y = continent, yend = continent, x = 0, xend = total_pop)) +\n  geom_segment(aes(y = continent, yend = continent, x = 0, xend = total_pop)) +\n  scale_x_continuous(labels = label_number(scale = 1/1000000, suffix = \" bil\")) +\n  theme_minimal() +\n  labs(\n    x = \"Total population\",\n    y = \"Continent\",\n    title = \"World population\",\n    subtitle = \"As of 2022\",\n    caption = \"Data sources: The World Bank and Our World in Data\"\n  )\n\n\n\n\n\n\n\n\n\nThink out loud: Describe what is happening in the each step of the code chunk above.\n\nAnswers may vary."
  },
  {
    "objectID": "ae/ae-03-duke-forest-A.html",
    "href": "ae/ae-03-duke-forest-A.html",
    "title": "AE 03: Duke Forest",
    "section": "",
    "text": "Important\n\n\n\nThese are suggested answers. This document should be used as reference only, it’s not designed to be an exhaustive key.\n\n\n\nPackages\n\nlibrary(tidyverse)\nlibrary(openintro)\n\n\n\nExercise 1\nThe distributions of prices of houses with and without garages are fairly similar, with centers around $600,000. Each distribution has potential outliers on the higher end. Based on this visualization, having a garage does not appear to “make a difference”.\n\nduke_forest |&gt;\n  mutate(garage = if_else(str_detect(parking, \"Garage\"), \"Garage\", \"No garage\")) |&gt;\n  ggplot(aes(x = price, fill = garage)) +\n  geom_histogram() +\n  facet_wrap(~garage, ncol = 1) +\n  labs(\n    x = \"Price in $\",\n    y = \"\",\n    title = \"Histogram of Price of Homes by Garage or not\",\n    fill = \"Garage or not\"\n  )\n\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n\n\n\n\n\n\n\n\n\n\n\nExercise 2\n\nClaim 1: Yes, there seems to be evidence of a positive relationship between the price of the home and the area of the home.\nClaim 2: No, there does not seem to be a relationship between the price and age of the home.\nClaim 3: No, there does not seem to be any evidence to suggest that larger more expensive homes are newer than those houses that are cheaper and smaller. Points that are lighter colored (newer homes) are not concentrated on the top right of the plot.\n\n\nggplot(\n  duke_forest,\n  aes(x = area, y = price, color = year_built)\n) +\n  geom_point(size = 3) +\n  geom_smooth(se = FALSE) +\n  labs(\n    x = \"Area of Home\",\n    y = \"Price of Home\",\n    title = \"Relationship between Price and Area by Year Built\",\n    color = \"Year Built\"\n  )\n\n`geom_smooth()` using method = 'loess' and formula = 'y ~ x'\n\n\nWarning: The following aesthetics were dropped during statistical transformation: colour\nℹ This can happen when ggplot fails to infer the correct grouping structure in\n  the data.\nℹ Did you forget to specify a `group` aesthetic or to convert a numerical\n  variable into a factor?"
  },
  {
    "objectID": "ae/ae-14-spam-filter.html",
    "href": "ae/ae-14-spam-filter.html",
    "title": "Building a spam filter",
    "section": "",
    "text": "In this application exercise, we will\nTo illustrate logistic regression, we will build a spam filter from email data.\nThe data come from incoming emails in David Diez’s (one of the authors of OpenIntro textbooks) Gmail account for the first three months of 2012. All personally identifiable information has been removed.\nlibrary(tidyverse)\nlibrary(tidymodels)\nlibrary(openintro)\nglimpse(email)\n\nRows: 3,921\nColumns: 21\n$ spam         &lt;fct&gt; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, …\n$ to_multiple  &lt;fct&gt; 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, …\n$ from         &lt;fct&gt; 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, …\n$ cc           &lt;int&gt; 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 2, 1, 0, 2, 0, …\n$ sent_email   &lt;fct&gt; 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, …\n$ time         &lt;dttm&gt; 2012-01-01 01:16:41, 2012-01-01 02:03:59, 2012-01-01 11:…\n$ image        &lt;dbl&gt; 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, …\n$ attach       &lt;dbl&gt; 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, …\n$ dollar       &lt;dbl&gt; 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 5, 0, 0, …\n$ winner       &lt;fct&gt; no, no, no, no, no, no, no, no, no, no, no, no, no, no, n…\n$ inherit      &lt;dbl&gt; 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, …\n$ viagra       &lt;dbl&gt; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, …\n$ password     &lt;dbl&gt; 0, 0, 0, 0, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, …\n$ num_char     &lt;dbl&gt; 11.370, 10.504, 7.773, 13.256, 1.231, 1.091, 4.837, 7.421…\n$ line_breaks  &lt;int&gt; 202, 202, 192, 255, 29, 25, 193, 237, 69, 68, 25, 79, 191…\n$ format       &lt;fct&gt; 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, …\n$ re_subj      &lt;fct&gt; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, …\n$ exclaim_subj &lt;dbl&gt; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, …\n$ urgent_subj  &lt;fct&gt; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, …\n$ exclaim_mess &lt;dbl&gt; 0, 1, 6, 48, 1, 1, 1, 18, 1, 0, 2, 1, 0, 10, 4, 10, 20, 0…\n$ number       &lt;fct&gt; big, small, small, small, none, none, big, small, small, …\nThe variables we’ll use in this analysis are\nGoal: Use the number of exclamation points in an email to predict whether or not it is spam."
  },
  {
    "objectID": "ae/ae-14-spam-filter.html#exercise-1",
    "href": "ae/ae-14-spam-filter.html#exercise-1",
    "title": "Building a spam filter",
    "section": "Exercise 1",
    "text": "Exercise 1\n\nDemo: Fit the logistic regression model using the number of exclamation points to predict the probability an email is spam.\n\n\nlog_fit &lt;- logistic_reg() |&gt;\n  fit(spam ~ exclaim_mess, data = email)\n\ntidy(log_fit)\n\n# A tibble: 2 × 5\n  term          estimate std.error statistic p.value\n  &lt;chr&gt;            &lt;dbl&gt;     &lt;dbl&gt;     &lt;dbl&gt;   &lt;dbl&gt;\n1 (Intercept)  -2.27      0.0553     -41.1     0    \n2 exclaim_mess  0.000272  0.000949     0.287   0.774\n\n\n\nYour turn: How does the code above differ from previous code we’ve used to fit regression models? Compare your summary output to the estimated model below.\n\n\\[\\log\\Big(\\frac{p}{1-p}\\Big) = -2.27 - 0.000272 \\times exclaim\\_mess\\]\nAdd response here."
  },
  {
    "objectID": "ae/ae-14-spam-filter.html#exercise-2",
    "href": "ae/ae-14-spam-filter.html#exercise-2",
    "title": "Building a spam filter",
    "section": "Exercise 2",
    "text": "Exercise 2\nWhat is the probability the email is spam if it contains 10 exclamation points? Answer the question using the predict() function.\nWe can use the predict function in R to produce the probability as well.\n\n# add code here"
  },
  {
    "objectID": "ae/ae-14-spam-filter.html#exercise-3",
    "href": "ae/ae-14-spam-filter.html#exercise-3",
    "title": "Building a spam filter",
    "section": "Exercise 3",
    "text": "Exercise 3\nWe have the probability an email is spam, but ultimately we want to use the probability to classify an email as spam or not spam. Therefore, we need to set a decision-making threshold, such that an email is classified as spam if the predicted probability is greater than the threshold and not spam otherwise.\nSuppose you are a data scientist working on a spam filter. You must determine how high the predicted probability must be before you think it would be reasonable to call it spam and put it in the junk folder (which the user is unlikely to check).\nYour turn: What are some trade offs you would consider as you set the decision-making threshold? Discuss with your neighbor.\nAdd response here.\n\nlog_aug &lt;- augment(log_fit, email)\n\nggplot(log_aug, aes(x = exclaim_mess, y = spam, color = .pred_class)) +\n  geom_jitter(alpha = 0.5)"
  },
  {
    "objectID": "ae/ae-14-spam-filter.html#exercise-4",
    "href": "ae/ae-14-spam-filter.html#exercise-4",
    "title": "Building a spam filter",
    "section": "Exercise 4",
    "text": "Exercise 4\nFit a model with all variables in the dataset as predictors and receate the visualization above for this model.\n\n# add code here"
  },
  {
    "objectID": "ae/ae-17-effective-dataviz.html",
    "href": "ae/ae-17-effective-dataviz.html",
    "title": "Trends instructional staff employees in universities",
    "section": "",
    "text": "The American Association of University Professors (AAUP) is a nonprofit membership association of faculty and other academic professionals. This report by the AAUP shows trends in instructional staff employees between 1975 and 2011, and contains the following image. What trends are apparent in this visualization?"
  },
  {
    "objectID": "ae/ae-17-effective-dataviz.html#packages",
    "href": "ae/ae-17-effective-dataviz.html#packages",
    "title": "Trends instructional staff employees in universities",
    "section": "Packages",
    "text": "Packages\n\nlibrary(tidyverse)\nlibrary(scales)\nlibrary(ggthemes)"
  },
  {
    "objectID": "ae/ae-17-effective-dataviz.html#data",
    "href": "ae/ae-17-effective-dataviz.html#data",
    "title": "Trends instructional staff employees in universities",
    "section": "Data",
    "text": "Data\nEach row in this dataset represents a faculty type, and the columns are the years for which we have data. The values are percentage of hires of that type of faculty for each year.\n\nstaff &lt;- read_csv(\"https://sta199-s24.github.io/data/instructional-staff.csv\")\nstaff\n\n# A tibble: 5 × 12\n  faculty_type    `1975` `1989` `1993` `1995` `1999` `2001` `2003` `2005` `2007`\n  &lt;chr&gt;            &lt;dbl&gt;  &lt;dbl&gt;  &lt;dbl&gt;  &lt;dbl&gt;  &lt;dbl&gt;  &lt;dbl&gt;  &lt;dbl&gt;  &lt;dbl&gt;  &lt;dbl&gt;\n1 Full-Time Tenu…   29     27.6   25     24.8   21.8   20.3   19.3   17.8   17.2\n2 Full-Time Tenu…   16.1   11.4   10.2    9.6    8.9    9.2    8.8    8.2    8  \n3 Full-Time Non-…   10.3   14.1   13.6   13.6   15.2   15.5   15     14.8   14.9\n4 Part-Time Facu…   24     30.4   33.1   33.2   35.5   36     37     39.3   40.5\n5 Graduate Stude…   20.5   16.5   18.1   18.8   18.7   19     20     19.9   19.5\n# ℹ 2 more variables: `2009` &lt;dbl&gt;, `2011` &lt;dbl&gt;"
  },
  {
    "objectID": "ae/ae-17-effective-dataviz.html#recreate",
    "href": "ae/ae-17-effective-dataviz.html#recreate",
    "title": "Trends instructional staff employees in universities",
    "section": "Recreate",
    "text": "Recreate\n\nYour turn (10 minutes): Recreate the visualization above. Try to match as many of the elements as possible. Hint: You might need to reshape your data first.\n\n\n# add code here\n\n\n# add code here"
  },
  {
    "objectID": "ae/ae-17-effective-dataviz.html#represent-percentages-as-parts-of-a-whole",
    "href": "ae/ae-17-effective-dataviz.html#represent-percentages-as-parts-of-a-whole",
    "title": "Trends instructional staff employees in universities",
    "section": "Represent percentages as parts of a whole",
    "text": "Represent percentages as parts of a whole\n\nDemo: Recreate the previous visualization where the percentages are represented as parts of a whole.\n\n\n# add code here"
  },
  {
    "objectID": "ae/ae-17-effective-dataviz.html#place-time-on-x-axis",
    "href": "ae/ae-17-effective-dataviz.html#place-time-on-x-axis",
    "title": "Trends instructional staff employees in universities",
    "section": "Place time on x-axis",
    "text": "Place time on x-axis\n\nDemo: Convert the visualization to a line plot with time on the x-axis.\n\n\n# add code here"
  },
  {
    "objectID": "ae/ae-17-effective-dataviz.html#pay-attention-to-variable-types",
    "href": "ae/ae-17-effective-dataviz.html#pay-attention-to-variable-types",
    "title": "Trends instructional staff employees in universities",
    "section": "Pay attention to variable types",
    "text": "Pay attention to variable types\n\nQuestion: What is wrong with the x-axis of the plot above? How can you fix it?\n\nAdd response here.\n\nYour turn: Implement the fix for the x-axis of the plot.\n\n\n# add code here"
  },
  {
    "objectID": "ae/ae-17-effective-dataviz.html#use-an-accessible-color-scale",
    "href": "ae/ae-17-effective-dataviz.html#use-an-accessible-color-scale",
    "title": "Trends instructional staff employees in universities",
    "section": "Use an accessible color scale",
    "text": "Use an accessible color scale\n\nQuestion: What do we mean by an accessible color scale? What types of color vision deficiencies are there?\n\nAdd response here.\n\nDemo: What does the plot look like to people with various color vision deficiencies?\nDemo: Remake the plot with an accessible color scale.\n\n\n# add code here"
  },
  {
    "objectID": "ae/ae-17-effective-dataviz.html#use-direct-labeling",
    "href": "ae/ae-17-effective-dataviz.html#use-direct-labeling",
    "title": "Trends instructional staff employees in universities",
    "section": "Use direct labeling",
    "text": "Use direct labeling\n\nDemo: Remove the legend and add labels for each line at the end of the line (where x is the max(x) recorded).\n\n\n# add code here"
  },
  {
    "objectID": "ae/ae-17-effective-dataviz.html#use-color-to-draw-attention",
    "href": "ae/ae-17-effective-dataviz.html#use-color-to-draw-attention",
    "title": "Trends instructional staff employees in universities",
    "section": "Use color to draw attention",
    "text": "Use color to draw attention\n\nDemo: Redo the line plot where Part-time Faculty is red and the rest are gray.\n\n\n# label: recode\n# add code here\n\n\n# add code here"
  },
  {
    "objectID": "ae/ae-17-effective-dataviz.html#pick-a-purpose",
    "href": "ae/ae-17-effective-dataviz.html#pick-a-purpose",
    "title": "Trends instructional staff employees in universities",
    "section": "Pick a purpose",
    "text": "Pick a purpose\n\n# add code here"
  },
  {
    "objectID": "ae/ae-17-effective-dataviz.html#use-labels-to-communicate-the-message",
    "href": "ae/ae-17-effective-dataviz.html#use-labels-to-communicate-the-message",
    "title": "Trends instructional staff employees in universities",
    "section": "Use labels to communicate the message",
    "text": "Use labels to communicate the message\n\n# add code here"
  },
  {
    "objectID": "ae/ae-17-effective-dataviz.html#simplify",
    "href": "ae/ae-17-effective-dataviz.html#simplify",
    "title": "Trends instructional staff employees in universities",
    "section": "Simplify",
    "text": "Simplify\n\n# add code here"
  },
  {
    "objectID": "ae/ae-17-effective-dataviz.html#summary",
    "href": "ae/ae-17-effective-dataviz.html#summary",
    "title": "Trends instructional staff employees in universities",
    "section": "Summary",
    "text": "Summary\n\nRepresent percentages as parts of a whole\nPlace variables representing time on the x-axis when possible\nPay attention to data types, e.g., represent time as time on a continuous scale, not years as levels of a categorical variable\nPrefer direct labeling over legends\nUse accessible colors\nUse color to draw attention\nPick a purpose and label, color, annotate for that purpose\nCommunicate your main message directly in the plot labels\nSimplify before you call it done (a.k.a. “Before you leave the house, look in the mirror and take one thing off”)"
  },
  {
    "objectID": "ae/ae-10-modeling-fish-A.html",
    "href": "ae/ae-10-modeling-fish-A.html",
    "title": "AE 10: Modelling fish",
    "section": "",
    "text": "Important\n\n\n\nThese are suggested answers. This document should be used as reference only, it’s not designed to be an exhaustive key.\n\n\nFor this application exercise, we will work with data on fish. The dataset we will use, called fish, is on two common fish species in fish market sales.\n\nlibrary(tidyverse)\nlibrary(tidymodels)\n\nfish &lt;- read_csv(\"data/fish.csv\")\n\nThe data dictionary is below:\n\n\n\nvariable\ndescription\n\n\n\n\nspecies\nSpecies name of fish\n\n\nweight\nWeight, in grams\n\n\nlength_vertical\nVertical length, in cm\n\n\nlength_diagonal\nDiagonal length, in cm\n\n\nlength_cross\nCross length, in cm\n\n\nheight\nHeight, in cm\n\n\nwidth\nDiagonal width, in cm\n\n\n\n\nVisualizing the model\nWe’re going to investigate the relationship between the weights and heights of fish.\n\nDemo: Create an appropriate plot to investigate this relationship. Add appropriate labels to the plot.\n\n\nggplot(fish, aes(x = height, y = weight)) +\n  geom_point() +\n  labs(\n    title = \"Weights vs. heights of fish\",\n    x = \"Height (cm)\",\n    y = \"Weight (gr)\"\n  )\n\n\n\n\n\n\n\n\n\nYour turn (5 minutes):\n\nIf you were to draw a a straight line to best represent the relationship between the heights and weights of fish, where would it go? Why?\nStart from the bottom and go up Identify the first and last point and draw a line through most the others.\nNow, let R draw the line for you. Refer to the documentation at https://ggplot2.tidyverse.org/reference/geom_smooth.html. Specifically, refer to the method section.\n\n\nggplot(fish, aes(x = height, y = weight)) +\n  geom_point() +\n  geom_smooth(method = \"lm\") +\n  labs(\n    title = \"Weights vs. lengths of fish\",\n    x = \"Head-to-tail lentgh (cm)\",\n    y = \"Weight of fish (grams)\"\n  )\n\n`geom_smooth()` using formula = 'y ~ x'\n\n\n\n\n\n\n\n\n\n\nWhat types of questions can this plot help answer?\nIs there a relationship between fish heights and weights of fish?\n\nYour turn (3 minutes):\n\nWe can use this line to make predictions. Predict what you think the weight of a fish would be with a height of 10 cm, 15 cm, and 20 cm. Which prediction is considered extrapolation?\nAt 10 cm, we estimate a weight of 375 grams. At 15 cm, we estimate a weight of 600 grams At 20 cm, we estimate a weight of 975 grams. 20 cm would be considered extrapolation.\nWhat is a residual?\nDifference between predicted and observed.\n\n\n\n\nModel fitting\n\nDemo: Fit a model to predict fish weights from their heights.\n\n\nfish_hw_fit &lt;- linear_reg() |&gt;\n  fit(weight ~ height, data = fish)\n\nfish_hw_fit\n\nparsnip model object\n\n\nCall:\nstats::lm(formula = weight ~ height, data = data)\n\nCoefficients:\n(Intercept)       height  \n    -288.42        60.92  \n\n\n\nYour turn (3 minutes): Predict what the weight of a fish would be with a height of 10 cm, 15 cm, and 20 cm using this model.\n\n\nx &lt;- c(10, 15, 20)\n-288 + 60.92 * x\n\n[1] 321.2 625.8 930.4\n\n\n\nDemo: Calculate predicted weights for all fish in the data and visualize the residuals under this model.\n\n\nfish_hw_aug &lt;- augment(fish_hw_fit, new_data = fish)\n\nggplot(fish_hw_aug, aes(x = height, y = weight)) + \n  geom_point() + \n  geom_smooth(method = \"lm\", se = FALSE, color = \"lightgrey\") +  \n  geom_segment(aes(xend = height, yend = .pred), color = \"gray\") +  \n  geom_point(aes(y = .pred), shape = \"circle open\") + \n  theme_minimal() +\n  labs(\n    title = \"Weights vs. heights of fish\",\n    subtitle = \"Residuals\",\n    x = \"Height (cm)\",\n    y = \"Weight (gr)\"\n  )\n\n`geom_smooth()` using formula = 'y ~ x'\n\n\n\n\n\n\n\n\n\n\n\nModel summary\n\nDemo: Display the model summary including estimates for the slope and intercept along with measurements of uncertainty around them. Show how you can extract these values from the model output.\n\n\nfish_hw_tidy &lt;- tidy(fish_hw_fit)\nfish_hw_tidy\n\n# A tibble: 2 × 5\n  term        estimate std.error statistic  p.value\n  &lt;chr&gt;          &lt;dbl&gt;     &lt;dbl&gt;     &lt;dbl&gt;    &lt;dbl&gt;\n1 (Intercept)   -288.      34.0      -8.49 1.83e-11\n2 height          60.9      2.64     23.1  2.40e-29\n\n\n\nDemo: Write out your model using mathematical notation.\n\n\\(\\widehat{weight} = -288 + 60.9 \\times height\\)\n\n\nCorrelation\nWe can also assess correlation between two quantitative variables.\n\nYour turn (5 minutes):\n\nWhat is correlation? What are values correlation can take?\nStrength and direction of a linear relationship. It’s bounded by -1 and 1.\nAre you good at guessing correlation? Give it a try! https://www.rossmanchance.com/applets/2021/guesscorrelation/GuessCorrelation.html\n\nDemo: What is the correlation between heights and weights of fish?\n\n\nfish |&gt;\n  summarize(r = cor(height, weight))\n\n# A tibble: 1 × 1\n      r\n  &lt;dbl&gt;\n1 0.954\n\n\n\n\nAdding a third variable\n\nDemo: Does the relationship between heights and weights of fish change if we take into consideration species? Plot two separate straight lines for the Bream and Roach species.\n\n\nggplot(fish, \n       aes(x = height, y = weight, color = species)) +\n  geom_point() +\n  geom_smooth(method = \"lm\") +\n  labs(\n    title = \"Weights vs. heights of fish\",\n    x = \"Height (cm)\",\n    y = \"Weight (gr)\"\n  )\n\n`geom_smooth()` using formula = 'y ~ x'\n\n\n\n\n\n\n\n\n\n\n\nFitting other models\n\nDemo: We can fit more models than just a straight line. Change the following code below to read method = \"loess\". What is different from the plot created before?\n\n\nggplot(fish, \n       aes(x = height, y = weight)) +\n  geom_point() +\n  geom_smooth(method = \"lm\") +\n  labs(\n    title = \"Weights vs. heights of fish\",\n    x = \"Height (cm)\",\n    y = \"Weight (gr)\"\n  )\n\n`geom_smooth()` using formula = 'y ~ x'"
  },
  {
    "objectID": "course-links.html",
    "href": "course-links.html",
    "title": "Useful links",
    "section": "",
    "text": "Course GitHub organization\n🔗 on GitHub\n\n\nRStudio\n🔗 on Posit Cloud |\n\n\nOffice hours\n🔗 on Google Sheets\n\n\nDiscussion forum\n🔗 on Canvas\n\n\nGradescope\n🔗 on Canvas\n\n\nGradebook\n🔗 on Canvas\n\n\nTexbooks\n🔗 R for Data Science\n🔗 Introduction to Modern Statistics\n\n\nPackage documentation\n🔗 ggplot2: ggplot2.tidyverse.org\n🔗 dplyr: dplyr.tidyverse.org\n🔗 tidyr: tidyr.tidyverse.org\n🔗 forcats: forcats.tidyverse.org\n🔗 stringr: stringr.tidyverse.org\n🔗 lubridate: lubridate.tidyverse.org\n🔗 readr: readr.tidyverse.org\n🔗 readxl: readxl.tidyverse.org",
    "crumbs": [
      "Course information",
      "Useful links"
    ]
  },
  {
    "objectID": "labs/Lab_3.html",
    "href": "labs/Lab_3.html",
    "title": "Multiple Linear Regression",
    "section": "",
    "text": "Many college courses conclude by giving students the opportunity to evaluate the course and the instructor anonymously. However, the use of these student evaluations as an indicator of course quality and teaching effectiveness is often criticized because these measures may reflect the influence of non-teaching related characteristics, such as the physical appearance of the instructor. The article titled, “Beauty in the classroom: instructors’ pulchritude and putative pedagogical productivity” by Hamermesh and Parker found that instructors who are viewed to be better looking receive higher instructional ratings. In this lab, you will analyze the data from this study in order to learn what goes into a positive professor evaluation. You will also use the GGally package for visualization relationships between many variables pairs at once and the broom package to tidy your regression outputs. We will start by a brief revisiting of the simple linear regression and then extend it to multiple regression (adding more predictor variables to the model)\n\n\nCreate a new Quarto document with the title Multiple Linear Regression. Change the output format to pdf (note that it is set to html by default). Refer to lab_00_Guide if you don’t remember how to create a new quarto file. Save the file as lab_03.\nNote that if you created the file correctly, it should appear under files with a .qmd extension(i.e., lab_03.qmd). If you do not have this file exactly as described, please STOP and make sure you have it done correctly before you proceed.\nAfter correctly creating the file, click on Render to see the output in pdf format. Note that it may pop up in a new window. This step is just for ensuring that your document created properly and that you are able to generate a pdf, the format in which you will submit the your lab.\n\nYou will need the following packages for this lab: openintro, tidyverse, statsr, GGally, and broom. Recall that we have previously installed all these packages. All we need to do is load them into our workspace. Use code below:\nlibrary(openintro)\nlibrary(tidyverse)\nlibrary(statsr)\nlibrary(broom)\nlibrary(GGally)\nBe sure to run the packages code chunk above to ensure that they are all loaded correctly. Remember to use include=F option (i.e., {r, include=F}) to prevent the code output for loading packages from showing up in your rendered report.\n\nWe will use a data frame called evals contained in the openintro package. The data were gathered from end of semester student evaluations for a large sample of professors from the University of Texas at Austin. In addition, six students rated the professors’ physical appearance (bty). The result is a data frame where each row contains a different course and columns represent variables about the courses and professors.\nSince we have already activated openintro, we can load the data by running the data command. See below:\n\ndata(evals)\n\nOnce you run the chunk above, you should be able to see a new object called evals in the environment area. Click on it to examine the data.\nYou can learn more about the data by running the following command in the console:\n?evals\n\nLet us start by creating a full model (we can name it m_full) that predicts professor score based on the following predictors: rank, gender, ethnicity, language (language of the university where they got their degree), age, cls_perc_eval (proportion of students that filled out evaluations), cls_students (number of students in class), cls_level (course level), cls_profs (number of professors), cls_credits (number of credits), and bty_avg (average beauty rating). Note that some of these variables are categorical and others are numerical. You can learn more about these variables including how they were measured by checking the documentation (you can run ?evals in the console).\nBefore running the code below, answer the following question:\nHow many variables do you expect to be in the multiple regression model? How do you know?\n\nm_full &lt;- lm(score ~ rank\n                  + gender \n                  + ethnicity \n                  + language \n                  + age \n                  + cls_perc_eval \n                  + cls_students \n                  + cls_level \n                  + cls_profs \n                  + cls_credits \n                  + bty_avg, data = evals)\ntidy(m_full)\n\nQuestions:\n\nHow many variables are in the model? Is this what you expected?\nInterpret the coefficient associated with the ethnicity variable.\n\nThe above model is called a full model because it contains all predictors. The full model is not always the best. We can improve on this model by dropping certain predictors that are not adding value to the model. We are going to use one of the step-wise selection methods (backward elimination) to prune the above model in order to improve it. We are trying to increase the adjusted \\(R^2\\).\n\nWe will start with the full model (m_full) and its adjusted \\(R^2\\). Run the glance function to check the adjusted \\(R^2\\) of the model above (m_full). Interpret the value in context.\n\nglance(m_full)\n\nThe output shows that the adjusted \\(R^2\\) is \\(14.12\\%\\). We use this number as our baseline and drop predictors one at a time, each time checking on the improvement in the adjusted \\(R^2\\). Our new model will be one that leads to the highest improvement in the adjusted \\(R^2\\).\nLet us start by dropping rank (we can call the model without rank rm_rank (meaning remove rank). We also tidy and glance the model. See the code below:\n\nrm_rank &lt;- lm(score ~ gender \n                    + ethnicity \n                    + language \n                    + age \n                    + cls_perc_eval \n                    + cls_students \n                    + cls_level \n                    + cls_profs \n                    + cls_credits \n                    + bty_avg, data = evals)\n#tidy(rm_rank)\nglance(rm_rank)\n\nDoes dropping rank lead to a significant improvement in the adjusted \\(R^2\\)?\nNext, we want to drop gender. See below:\n\nrm_gender &lt;- lm(score ~ rank \n                      + ethnicity \n                      + language \n                      + age \n                      + cls_perc_eval \n                      + cls_students \n                      + cls_level \n                      + cls_profs \n                      + cls_credits \n                      + bty_avg, data = evals)\n#tidy(rm_gender)\nglance(rm_gender)\n\nComment about the effect of dropping gender from the model? Is it a good idea?\nNext, let us drop ethnicity:\n\nrm_ethnicity &lt;- lm(score ~ rank\n                          + gender \n                          + language \n                          + age \n                          + cls_perc_eval \n                          + cls_students \n                          + cls_level \n                          + cls_profs \n                          + cls_credits \n                          + bty_avg, data = evals)\n#tidy(rm_ethnicity)\nglance(rm_ethnicity)\n\nWhat can you comment about the effect of dropping ethnicity?\nNext, drop language:\n\nrm_language &lt;- lm(score ~ rank\n                        + ethnicity\n                        + gender \n                        + age \n                        + cls_perc_eval \n                        + cls_students \n                        + cls_level \n                        + cls_profs \n                        + cls_credits \n                        + bty_avg, data = evals)\n#tidy(rm_language)\nglance(rm_language)\n\nWhat is the effect of dropping language?\nNext, drop age:\n\nrm_age &lt;- lm(score ~ rank\n                  + ethnicity\n                  + gender\n                  + language\n                  + cls_perc_eval \n                  + cls_students \n                  + cls_level \n                  + cls_profs \n                  + cls_credits \n                  + bty_avg, data = evals)\nglance(rm_age)\n\nComment on the effect of dropping age:\nNext, drop cls_perc_eval (i.e., proportion of students that filled out evaluations):\n\nrm_cls_perc_eval &lt;- lm(score ~ rank\n                              + ethnicity\n                              + age\n                              + gender\n                              + language\n                              + cls_students \n                              + cls_level \n                              + cls_profs \n                              + cls_credits \n                              + bty_avg, data = evals)\nglance(rm_cls_perc_eval)\n\nComment appropriately.\nNext, drop cls_students (class size):\n\nrm_cls_students &lt;- lm(score ~ rank\n                            + ethnicity\n                            + age\n                            + gender\n                            + cls_perc_eval\n                            + language\n                            + cls_level \n                            + cls_profs \n                            + cls_credits \n                            + bty_avg, data = evals)\nglance(rm_cls_students)\n\nComment on the effect of dropping class size.\nNext, drop cls_level (course level):\n\nrm_cls_level &lt;- lm(score ~ rank\n                          + ethnicity\n                          + age\n                          + gender\n                          + cls_students\n                          + cls_perc_eval\n                          + language\n                          + cls_profs \n                          + cls_credits \n                          + bty_avg, data = evals)\nglance(rm_cls_level)\n\nDoes dropping course level lead to an increase in the adjusted \\(R^2\\). if so, by how much?\n\nWe are almost done. Next, drop cls_profs (number of professors):\n\nrm_cls_profs &lt;- lm(score ~ rank\n                          + ethnicity\n                          + age\n                          + gender\n                          + cls_students\n                          + cls_level\n                          + cls_perc_eval\n                          + language\n                          + cls_credits \n                          + bty_avg, data = evals)\nglance(rm_cls_profs)\n\nDoes dropping cls_profs lead to an increase in adjusted \\(R^2\\)? By how much?\n\nNext, drop cls_credits (i.e., number of credits):\n\nrm_cls_credits &lt;- lm(score ~ rank\n                          + ethnicity\n                          + age\n                          + gender\n                          + cls_students\n                          + cls_level\n                          + cls_perc_eval\n                          + language\n                          + cls_profs\n                          + bty_avg, data = evals)\nglance(rm_cls_credits)\n\nComment on the effect of dropping cls_credits.\nFinally, drop bty_avg (i.e., average beauty score):\n\nrm_bty_avg &lt;- lm(score ~ rank\n                        + ethnicity\n                        + age\n                        + gender\n                        + cls_students\n                        + cls_level\n                        + cls_perc_eval\n                        +cls_credits\n                        + language\n                        + cls_profs, data = evals)\nglance(rm_bty_avg)\n\nAs you have seen, dropping class_profs leads to the most improvement to the model. So, we create a new model (call it m_prunned_1) without cls_profs and check its adjusted \\(R^2\\). Below is our new model:\n\nm_prunned_1 &lt;- lm(score ~ rank \n                        + gender \n                        + ethnicity \n                        + language \n                        + age \n                        + cls_perc_eval \n                        + cls_students \n                        + cls_level \n                        + cls_credits \n                        + bty_avg, data = evals)\ntidy(m_prunned_1)\nglance(m_prunned_1)\n\nThe new adjusted \\(R^2\\) is \\(14.3\\%\\) and we will use it in step two:\n\nWe repeat the process above using m_prunned_1 as the baseline. Remember, its adjusted \\(R^2\\) is \\(14.3\\%\\).\nFirst, drop gender:\n\nrm_gender &lt;- lm(score ~ rank \n                      + ethnicity \n                      + language \n                      + age \n                      + cls_perc_eval \n                      + cls_students \n                      + cls_level \n                      + cls_credits \n                      + bty_avg, data = evals)\n#tidy(rm_gender)\nglance(rm_gender)\n\nNext, remove rank:\n\nrm_rank &lt;- lm(score ~ gender \n                    + ethnicity \n                    + language \n                    + age \n                    + cls_perc_eval \n                    + cls_students \n                    + cls_level \n                    + cls_credits \n                    + bty_avg, data = evals)\n#tidy(rm_rank)\nglance(rm_rank)\n\n\nNext, remove ethnicity,\n\nrm_ethnicity &lt;- lm(score ~ rank \n                        + gender \n                        + language \n                        + age \n                        + cls_perc_eval \n                        + cls_students \n                        + cls_level \n                        + cls_credits \n                        + bty_avg, data = evals)\n#tidy(rm_ethnicity)\nglance(rm_ethnicity)\n\nNext, remove language:\n\nrm_language &lt;- lm(score ~ rank \n                        + gender \n                        + ethnicity \n                        + age \n                        + cls_perc_eval \n                        + cls_students \n                        + cls_level \n                        + cls_credits \n                        + bty_avg, data = evals)\n#tidy(rm_language)\nglance(rm_language)\n\nNo improvement.\nNext, remove age:\n\nrm_age &lt;- lm(score ~ rank \n                  + gender \n                  + ethnicity \n                  + language \n                  + cls_perc_eval \n                  + cls_students \n                  + cls_level \n                  + cls_credits \n                  + bty_avg, data = evals)\n#tidy(rm_age)\nglance(rm_age)\n\nNo improvement.\nNext, remove cls_perc_eval:\n\nrm_cls_per_eval &lt;- lm(score ~ rank \n                            + gender \n                            + ethnicity \n                            + language \n                            + age \n                            + cls_students \n                            + cls_level \n                            + cls_credits \n                            + bty_avg, data = evals)\n#tidy(rm_cls_per_eval)\nglance(rm_cls_per_eval)\n\nNo improvement.\nNext, remove cls_students\n\nrm_cls_st &lt;- lm(score ~ rank \n                      + gender \n                      + ethnicity \n                      + language \n                      + age \n                      + cls_perc_eval \n                      + cls_level \n                      + cls_credits \n                      + bty_avg, data = evals)\n#tidy(rm_cls_st)\nglance(rm_cls_st)\n\nNo improvement.\nNext, remove cls_level\n\nrm_cls_level &lt;- lm(score ~ rank \n                          + gender \n                          + ethnicity \n                          + language \n                          + age \n                          + cls_perc_eval \n                          + cls_students \n                          + cls_credits \n                          + bty_avg, data = evals)\n#tidy(rm_cls_level)\nglance(rm_cls_level)\n\nModel improves:\n\nNext, remove cls_credits:\n\nrm_cls_credits &lt;- lm(score ~ rank \n                          + gender \n                          + ethnicity \n                          + language \n                          + age \n                          + cls_perc_eval \n                          + cls_students \n                          + cls_level \n                          + bty_avg, data = evals)\n#tidy(rm_cls_credits)\nglance(rm_cls_credits)\n\nNo improvement.\nNext, we remove bty_avg:\n\nrm_bty_avg &lt;- lm(score ~ rank \n                      + gender \n                      + ethnicity \n                      + language \n                      + age \n                      + cls_perc_eval \n                      + cls_students \n                      + cls_level \n                      + cls_credits, data = evals)\n#tidy(rm_bty_avg)\nglance(rm_bty_avg)\n\nWe notice that removing cls_level leads to the most improvement in the adjusted \\(R^2\\) of \\(14.47-14.3=.17\\). So, our new improved model (call it m_prunned_2) is:\n\nm_prunned_2 &lt;- lm(score ~ rank \n                        + gender \n                        + ethnicity \n                        + language \n                        + age \n                        + cls_perc_eval \n                        + cls_students \n                        + cls_credits \n                        + bty_avg, data = evals)\n#tidy(rm_prunned_2)\nglance(m_prunned_2)\n\n\nWe use the model from step 2 above along with its adjusted \\(R^2\\) as the baseline for step 3. The rest of the work is left as an exercise.\n\n\n(8 pts) In class, we began the backward elimination method (based on adjusted R-squared) for model selection. Complete the steps to come up with the best model. You do not need to show all steps in your answer, just the output for the final model. Also, write out the linear model for predicting score based on the final model you settle on.\n(4 pts) Based on your final model, describe the characteristics of a professor and course at University of Texas at Austin that would be associated with a high evaluation score.\n(4 pts) Pick one slope for a numerical variable in your model and one for a categorical variable and interpret them in context.\n(4 pts) Would you be comfortable generalizing your conclusions to apply to professors generally (at any university)? Why or why not?\n\nOnce you are finished with the lab, you will submit your final PDF document to Canvas.\n\n\n\n\n\n\nWarning\n\n\n\nBefore you wrap up the assignment, make sure all questions are numbered appropriately. Delete any code chunks that were not used.\nYou must turn in a PDF file to the Canvas page by the submission deadline to be considered “on time”.\n\n\n\n\n\n\n\n\nChecklist\n\n\n\nMake sure you have:\n\nattempted all questions\nrendered your Quarto document to PDF\nuploaded your PDF to Canvas",
    "crumbs": [
      "Labs",
      "Lab 3"
    ]
  },
  {
    "objectID": "labs/Lab_3.html#introduction",
    "href": "labs/Lab_3.html#introduction",
    "title": "Multiple Linear Regression",
    "section": "",
    "text": "Many college courses conclude by giving students the opportunity to evaluate the course and the instructor anonymously. However, the use of these student evaluations as an indicator of course quality and teaching effectiveness is often criticized because these measures may reflect the influence of non-teaching related characteristics, such as the physical appearance of the instructor. The article titled, “Beauty in the classroom: instructors’ pulchritude and putative pedagogical productivity” by Hamermesh and Parker found that instructors who are viewed to be better looking receive higher instructional ratings. In this lab, you will analyze the data from this study in order to learn what goes into a positive professor evaluation. You will also use the GGally package for visualization relationships between many variables pairs at once and the broom package to tidy your regression outputs. We will start by a brief revisiting of the simple linear regression and then extend it to multiple regression (adding more predictor variables to the model)",
    "crumbs": [
      "Labs",
      "Lab 3"
    ]
  },
  {
    "objectID": "labs/Lab_3.html#creating-a-quarto-file",
    "href": "labs/Lab_3.html#creating-a-quarto-file",
    "title": "Multiple Linear Regression",
    "section": "",
    "text": "Create a new Quarto document with the title Multiple Linear Regression. Change the output format to pdf (note that it is set to html by default). Refer to lab_00_Guide if you don’t remember how to create a new quarto file. Save the file as lab_03.\nNote that if you created the file correctly, it should appear under files with a .qmd extension(i.e., lab_03.qmd). If you do not have this file exactly as described, please STOP and make sure you have it done correctly before you proceed.\nAfter correctly creating the file, click on Render to see the output in pdf format. Note that it may pop up in a new window. This step is just for ensuring that your document created properly and that you are able to generate a pdf, the format in which you will submit the your lab.",
    "crumbs": [
      "Labs",
      "Lab 3"
    ]
  },
  {
    "objectID": "labs/Lab_3.html#packages",
    "href": "labs/Lab_3.html#packages",
    "title": "Multiple Linear Regression",
    "section": "",
    "text": "You will need the following packages for this lab: openintro, tidyverse, statsr, GGally, and broom. Recall that we have previously installed all these packages. All we need to do is load them into our workspace. Use code below:\nlibrary(openintro)\nlibrary(tidyverse)\nlibrary(statsr)\nlibrary(broom)\nlibrary(GGally)\nBe sure to run the packages code chunk above to ensure that they are all loaded correctly. Remember to use include=F option (i.e., {r, include=F}) to prevent the code output for loading packages from showing up in your rendered report.",
    "crumbs": [
      "Labs",
      "Lab 3"
    ]
  },
  {
    "objectID": "labs/Lab_3.html#loading-and-viewing-data",
    "href": "labs/Lab_3.html#loading-and-viewing-data",
    "title": "Multiple Linear Regression",
    "section": "",
    "text": "We will use a data frame called evals contained in the openintro package. The data were gathered from end of semester student evaluations for a large sample of professors from the University of Texas at Austin. In addition, six students rated the professors’ physical appearance (bty). The result is a data frame where each row contains a different course and columns represent variables about the courses and professors.\nSince we have already activated openintro, we can load the data by running the data command. See below:\n\ndata(evals)\n\nOnce you run the chunk above, you should be able to see a new object called evals in the environment area. Click on it to examine the data.\nYou can learn more about the data by running the following command in the console:\n?evals",
    "crumbs": [
      "Labs",
      "Lab 3"
    ]
  },
  {
    "objectID": "labs/Lab_3.html#multiple-linear-regression-modeling",
    "href": "labs/Lab_3.html#multiple-linear-regression-modeling",
    "title": "Multiple Linear Regression",
    "section": "",
    "text": "Let us start by creating a full model (we can name it m_full) that predicts professor score based on the following predictors: rank, gender, ethnicity, language (language of the university where they got their degree), age, cls_perc_eval (proportion of students that filled out evaluations), cls_students (number of students in class), cls_level (course level), cls_profs (number of professors), cls_credits (number of credits), and bty_avg (average beauty rating). Note that some of these variables are categorical and others are numerical. You can learn more about these variables including how they were measured by checking the documentation (you can run ?evals in the console).\nBefore running the code below, answer the following question:\nHow many variables do you expect to be in the multiple regression model? How do you know?\n\nm_full &lt;- lm(score ~ rank\n                  + gender \n                  + ethnicity \n                  + language \n                  + age \n                  + cls_perc_eval \n                  + cls_students \n                  + cls_level \n                  + cls_profs \n                  + cls_credits \n                  + bty_avg, data = evals)\ntidy(m_full)\n\nQuestions:\n\nHow many variables are in the model? Is this what you expected?\nInterpret the coefficient associated with the ethnicity variable.",
    "crumbs": [
      "Labs",
      "Lab 3"
    ]
  },
  {
    "objectID": "labs/Lab_3.html#model-prunning",
    "href": "labs/Lab_3.html#model-prunning",
    "title": "Multiple Linear Regression",
    "section": "",
    "text": "The above model is called a full model because it contains all predictors. The full model is not always the best. We can improve on this model by dropping certain predictors that are not adding value to the model. We are going to use one of the step-wise selection methods (backward elimination) to prune the above model in order to improve it. We are trying to increase the adjusted \\(R^2\\).\n\nWe will start with the full model (m_full) and its adjusted \\(R^2\\). Run the glance function to check the adjusted \\(R^2\\) of the model above (m_full). Interpret the value in context.\n\nglance(m_full)\n\nThe output shows that the adjusted \\(R^2\\) is \\(14.12\\%\\). We use this number as our baseline and drop predictors one at a time, each time checking on the improvement in the adjusted \\(R^2\\). Our new model will be one that leads to the highest improvement in the adjusted \\(R^2\\).\nLet us start by dropping rank (we can call the model without rank rm_rank (meaning remove rank). We also tidy and glance the model. See the code below:\n\nrm_rank &lt;- lm(score ~ gender \n                    + ethnicity \n                    + language \n                    + age \n                    + cls_perc_eval \n                    + cls_students \n                    + cls_level \n                    + cls_profs \n                    + cls_credits \n                    + bty_avg, data = evals)\n#tidy(rm_rank)\nglance(rm_rank)\n\nDoes dropping rank lead to a significant improvement in the adjusted \\(R^2\\)?\nNext, we want to drop gender. See below:\n\nrm_gender &lt;- lm(score ~ rank \n                      + ethnicity \n                      + language \n                      + age \n                      + cls_perc_eval \n                      + cls_students \n                      + cls_level \n                      + cls_profs \n                      + cls_credits \n                      + bty_avg, data = evals)\n#tidy(rm_gender)\nglance(rm_gender)\n\nComment about the effect of dropping gender from the model? Is it a good idea?\nNext, let us drop ethnicity:\n\nrm_ethnicity &lt;- lm(score ~ rank\n                          + gender \n                          + language \n                          + age \n                          + cls_perc_eval \n                          + cls_students \n                          + cls_level \n                          + cls_profs \n                          + cls_credits \n                          + bty_avg, data = evals)\n#tidy(rm_ethnicity)\nglance(rm_ethnicity)\n\nWhat can you comment about the effect of dropping ethnicity?\nNext, drop language:\n\nrm_language &lt;- lm(score ~ rank\n                        + ethnicity\n                        + gender \n                        + age \n                        + cls_perc_eval \n                        + cls_students \n                        + cls_level \n                        + cls_profs \n                        + cls_credits \n                        + bty_avg, data = evals)\n#tidy(rm_language)\nglance(rm_language)\n\nWhat is the effect of dropping language?\nNext, drop age:\n\nrm_age &lt;- lm(score ~ rank\n                  + ethnicity\n                  + gender\n                  + language\n                  + cls_perc_eval \n                  + cls_students \n                  + cls_level \n                  + cls_profs \n                  + cls_credits \n                  + bty_avg, data = evals)\nglance(rm_age)\n\nComment on the effect of dropping age:\nNext, drop cls_perc_eval (i.e., proportion of students that filled out evaluations):\n\nrm_cls_perc_eval &lt;- lm(score ~ rank\n                              + ethnicity\n                              + age\n                              + gender\n                              + language\n                              + cls_students \n                              + cls_level \n                              + cls_profs \n                              + cls_credits \n                              + bty_avg, data = evals)\nglance(rm_cls_perc_eval)\n\nComment appropriately.\nNext, drop cls_students (class size):\n\nrm_cls_students &lt;- lm(score ~ rank\n                            + ethnicity\n                            + age\n                            + gender\n                            + cls_perc_eval\n                            + language\n                            + cls_level \n                            + cls_profs \n                            + cls_credits \n                            + bty_avg, data = evals)\nglance(rm_cls_students)\n\nComment on the effect of dropping class size.\nNext, drop cls_level (course level):\n\nrm_cls_level &lt;- lm(score ~ rank\n                          + ethnicity\n                          + age\n                          + gender\n                          + cls_students\n                          + cls_perc_eval\n                          + language\n                          + cls_profs \n                          + cls_credits \n                          + bty_avg, data = evals)\nglance(rm_cls_level)\n\nDoes dropping course level lead to an increase in the adjusted \\(R^2\\). if so, by how much?\n\nWe are almost done. Next, drop cls_profs (number of professors):\n\nrm_cls_profs &lt;- lm(score ~ rank\n                          + ethnicity\n                          + age\n                          + gender\n                          + cls_students\n                          + cls_level\n                          + cls_perc_eval\n                          + language\n                          + cls_credits \n                          + bty_avg, data = evals)\nglance(rm_cls_profs)\n\nDoes dropping cls_profs lead to an increase in adjusted \\(R^2\\)? By how much?\n\nNext, drop cls_credits (i.e., number of credits):\n\nrm_cls_credits &lt;- lm(score ~ rank\n                          + ethnicity\n                          + age\n                          + gender\n                          + cls_students\n                          + cls_level\n                          + cls_perc_eval\n                          + language\n                          + cls_profs\n                          + bty_avg, data = evals)\nglance(rm_cls_credits)\n\nComment on the effect of dropping cls_credits.\nFinally, drop bty_avg (i.e., average beauty score):\n\nrm_bty_avg &lt;- lm(score ~ rank\n                        + ethnicity\n                        + age\n                        + gender\n                        + cls_students\n                        + cls_level\n                        + cls_perc_eval\n                        +cls_credits\n                        + language\n                        + cls_profs, data = evals)\nglance(rm_bty_avg)\n\nAs you have seen, dropping class_profs leads to the most improvement to the model. So, we create a new model (call it m_prunned_1) without cls_profs and check its adjusted \\(R^2\\). Below is our new model:\n\nm_prunned_1 &lt;- lm(score ~ rank \n                        + gender \n                        + ethnicity \n                        + language \n                        + age \n                        + cls_perc_eval \n                        + cls_students \n                        + cls_level \n                        + cls_credits \n                        + bty_avg, data = evals)\ntidy(m_prunned_1)\nglance(m_prunned_1)\n\nThe new adjusted \\(R^2\\) is \\(14.3\\%\\) and we will use it in step two:\n\nWe repeat the process above using m_prunned_1 as the baseline. Remember, its adjusted \\(R^2\\) is \\(14.3\\%\\).\nFirst, drop gender:\n\nrm_gender &lt;- lm(score ~ rank \n                      + ethnicity \n                      + language \n                      + age \n                      + cls_perc_eval \n                      + cls_students \n                      + cls_level \n                      + cls_credits \n                      + bty_avg, data = evals)\n#tidy(rm_gender)\nglance(rm_gender)\n\nNext, remove rank:\n\nrm_rank &lt;- lm(score ~ gender \n                    + ethnicity \n                    + language \n                    + age \n                    + cls_perc_eval \n                    + cls_students \n                    + cls_level \n                    + cls_credits \n                    + bty_avg, data = evals)\n#tidy(rm_rank)\nglance(rm_rank)\n\n\nNext, remove ethnicity,\n\nrm_ethnicity &lt;- lm(score ~ rank \n                        + gender \n                        + language \n                        + age \n                        + cls_perc_eval \n                        + cls_students \n                        + cls_level \n                        + cls_credits \n                        + bty_avg, data = evals)\n#tidy(rm_ethnicity)\nglance(rm_ethnicity)\n\nNext, remove language:\n\nrm_language &lt;- lm(score ~ rank \n                        + gender \n                        + ethnicity \n                        + age \n                        + cls_perc_eval \n                        + cls_students \n                        + cls_level \n                        + cls_credits \n                        + bty_avg, data = evals)\n#tidy(rm_language)\nglance(rm_language)\n\nNo improvement.\nNext, remove age:\n\nrm_age &lt;- lm(score ~ rank \n                  + gender \n                  + ethnicity \n                  + language \n                  + cls_perc_eval \n                  + cls_students \n                  + cls_level \n                  + cls_credits \n                  + bty_avg, data = evals)\n#tidy(rm_age)\nglance(rm_age)\n\nNo improvement.\nNext, remove cls_perc_eval:\n\nrm_cls_per_eval &lt;- lm(score ~ rank \n                            + gender \n                            + ethnicity \n                            + language \n                            + age \n                            + cls_students \n                            + cls_level \n                            + cls_credits \n                            + bty_avg, data = evals)\n#tidy(rm_cls_per_eval)\nglance(rm_cls_per_eval)\n\nNo improvement.\nNext, remove cls_students\n\nrm_cls_st &lt;- lm(score ~ rank \n                      + gender \n                      + ethnicity \n                      + language \n                      + age \n                      + cls_perc_eval \n                      + cls_level \n                      + cls_credits \n                      + bty_avg, data = evals)\n#tidy(rm_cls_st)\nglance(rm_cls_st)\n\nNo improvement.\nNext, remove cls_level\n\nrm_cls_level &lt;- lm(score ~ rank \n                          + gender \n                          + ethnicity \n                          + language \n                          + age \n                          + cls_perc_eval \n                          + cls_students \n                          + cls_credits \n                          + bty_avg, data = evals)\n#tidy(rm_cls_level)\nglance(rm_cls_level)\n\nModel improves:\n\nNext, remove cls_credits:\n\nrm_cls_credits &lt;- lm(score ~ rank \n                          + gender \n                          + ethnicity \n                          + language \n                          + age \n                          + cls_perc_eval \n                          + cls_students \n                          + cls_level \n                          + bty_avg, data = evals)\n#tidy(rm_cls_credits)\nglance(rm_cls_credits)\n\nNo improvement.\nNext, we remove bty_avg:\n\nrm_bty_avg &lt;- lm(score ~ rank \n                      + gender \n                      + ethnicity \n                      + language \n                      + age \n                      + cls_perc_eval \n                      + cls_students \n                      + cls_level \n                      + cls_credits, data = evals)\n#tidy(rm_bty_avg)\nglance(rm_bty_avg)\n\nWe notice that removing cls_level leads to the most improvement in the adjusted \\(R^2\\) of \\(14.47-14.3=.17\\). So, our new improved model (call it m_prunned_2) is:\n\nm_prunned_2 &lt;- lm(score ~ rank \n                        + gender \n                        + ethnicity \n                        + language \n                        + age \n                        + cls_perc_eval \n                        + cls_students \n                        + cls_credits \n                        + bty_avg, data = evals)\n#tidy(rm_prunned_2)\nglance(m_prunned_2)\n\n\nWe use the model from step 2 above along with its adjusted \\(R^2\\) as the baseline for step 3. The rest of the work is left as an exercise.",
    "crumbs": [
      "Labs",
      "Lab 3"
    ]
  },
  {
    "objectID": "labs/Lab_3.html#exercises",
    "href": "labs/Lab_3.html#exercises",
    "title": "Multiple Linear Regression",
    "section": "",
    "text": "(8 pts) In class, we began the backward elimination method (based on adjusted R-squared) for model selection. Complete the steps to come up with the best model. You do not need to show all steps in your answer, just the output for the final model. Also, write out the linear model for predicting score based on the final model you settle on.\n(4 pts) Based on your final model, describe the characteristics of a professor and course at University of Texas at Austin that would be associated with a high evaluation score.\n(4 pts) Pick one slope for a numerical variable in your model and one for a categorical variable and interpret them in context.\n(4 pts) Would you be comfortable generalizing your conclusions to apply to professors generally (at any university)? Why or why not?",
    "crumbs": [
      "Labs",
      "Lab 3"
    ]
  },
  {
    "objectID": "labs/Lab_3.html#submission",
    "href": "labs/Lab_3.html#submission",
    "title": "Multiple Linear Regression",
    "section": "",
    "text": "Once you are finished with the lab, you will submit your final PDF document to Canvas.\n\n\n\n\n\n\nWarning\n\n\n\nBefore you wrap up the assignment, make sure all questions are numbered appropriately. Delete any code chunks that were not used.\nYou must turn in a PDF file to the Canvas page by the submission deadline to be considered “on time”.\n\n\n\n\n\n\n\n\nChecklist\n\n\n\nMake sure you have:\n\nattempted all questions\nrendered your Quarto document to PDF\nuploaded your PDF to Canvas",
    "crumbs": [
      "Labs",
      "Lab 3"
    ]
  },
  {
    "objectID": "labs/Lab_0.html",
    "href": "labs/Lab_0.html",
    "title": "Hello, World!",
    "section": "",
    "text": "It is possible that some of you have heard/seen the phrase, Hello, World!, before. That is usually the first thing you learn in programming, i.e., to learn to write a computer program to print this sentence to screen. In this lab, we will not print Hello, World! to the screen. Instead, we will learn how to use R (via RStudio) to perform statistical analyses and to write reports in order to communicate the insights learned from data. While the analysis involves writing computer code, it is in no way going to involve writing computer programs. The goal of today’s lab is to introduce you to R and RStudio. You will learn to access and use RStudio, as well as perform the basic functions regarding statistical analysis. To clarify which is which: R is the name of the programming language itself and RStudio is a convenient interface (Integrated Development Environment or IDE) for working with R. I like to think about R as the car engine and RStudio as a nice driver dashboard. The engine drives the car, but the dashboard makes it easier for the driver to control the car. Most R users work with RStudio.\n\n\nCar Engine and Dashboard\n\nWe will work with the cloud (online) version of RStudio. To access RStudio online, click on the link https://posit.cloud to create an account or to sign in if you already have an account.\n\nAfter signing in to R studio, our next step is to create a new project. You can think of a project as a folder or simply a collection of files. Our project will be called “MATH 246 Fall 2024”. Each lab that you complete will be saved in this project. To create the project, you start by clicking on “New Project” and then change the default name (UNTITLED PROJECT) to “MATH 246 Fall 2024”.\nYay! You now have your project ready. In the next section, we explain the meaning of the various panels on your screen.\n\nYour new R studio project interface will look as follows:\n\n\n\nLeft Panel: The panel on the left is where the action happens. This panel is called the console. Every time you launch RStudio, it will have the same text at the top of the console telling you the version of R that you’re running. Below that information is the symbol ” &gt; “. This is where you enter your commands. When you enter and execute a command, the output will come right below it. These commands and their syntax have evolved over decades (literally) and now provide what many users feel is a fairly natural way to access data, organize, describe, and invoke statistical computations. Try typing 1 + 1 in the console and hit enter.\n\nCode1+1\n\n[1] 2\n\n\n\nUpper Right Panel: The panel in the upper right is called “environment”. It contains, among other things, the history of the actions or commands that you’ve previously entered.\nBottom Right Panel: The panel in the lower right contains tabs for browsing the files in your project folder, access help files for R functions, install and manage R packages, and inspecting visualizations through the viewer tab. By default, all data visualizations you make will appear directly below the code you used to create them. If you would rather your plots appear in the plots tab, you will need to change your global options.\n\nR is an open-source programming language, meaning that users can contribute packages that make our lives easier, and we can use them for free. Packages are simply pre-written code meant to serve specific purposes and may contain other packages inside them. Packages may also contain data sets. Packages are stored in a directory called “Library”. For this lab, and many others in the future, we will use the following two packages:\n\nThe tidyverse package is a very popular “umbrella” package which houses a suite of many different R packages: for data wrangling (including tidying) and data visualization.\nThe openintro package for data and custom functions with the OpenIntro resources. You will notice that the readings frequently refer to data contained in the OpenIntro Package. This is the package.\n\n\nThe command to install a package in R takes the following format:\ninstall.packages(\"package name\")\nTo install tidyverse and openintro, run the following commands:\ninstall.packages(\"tidyverse\")\ninstall.packages(\"openintro\")\nNote: You only need to install packages once, but you need to load them each time you relaunch RStudio. To call load (activate) the above installed packages, you use the following command:\nlibrary(tidyverse)\nlibrary(openintro)\nWhy Tidyverse? We are choosing to use the tidyverse package collection because it consists of a set of packages necessary for different aspects of working with data, anything from loading data to wrangling data to visualizing data to analyzing data. Additionally, these packages share common philosophies and are designed to work together. You can find more about the packages in the tidyverse at tidyverse.org.\n\nSuppose we want to find the mean of the numbers 23,24,26,19,18,25,21, and 39. The first thing you want to do is to get these data into R. We can achieve this by running the code below:\n\nCodex &lt;- c(23,24,26,19,18,25,21, 39) \n# We use the symbol &lt;- for assigning elements to an object. \n\n\nHere, we are creating a vector (a series of numbers) and storing it in an object called x. The symbols &lt;- is used for assignment. In R, we use a # to designate a comment (text that should not be evaluated as code). In above chunk, the text after # is a comment. Comments are a good way to document your code.\nTo find the mean of those numbers, we simply run the command mean(x) as shown below.\n\nCodemean(x)\n\n[1] 24.375\n\n\nThe general format is do_this(on_this). Here, do_this is the function while x is the thing on which we want an action taken.\nTo find the median of the numbers, we run the command median(x) as shown below.\n\nCodemedian(x)\n\n[1] 23.5\n\n\nWe can also create a string object (i.e., a series of non-numerical elements or characters). We use quotes for string characters. See below:\n\nCodey &lt;- c( \"Jane\", \"John\", \"Jess\", \"Jeff\", \"Joe\", \"Holli\", \"Henry\", \"Han\") \n# We use quotes for strings.\n\n\nNow, try to run the command mean(y):\n\nCodemean(y)\n\nWarning in mean.default(y): argument is not numeric or logical: returning NA\n\n\n[1] NA\n\n\nWhat do you get? Programming languages generally produce error messages when you try to perform an inappropriate operation or if there is a mistake in the code. Error messages are a good way to learn what you did wrong. In this case, the mean/average of the object y does not make sense because the entries of y are not numerical.\nYou can, however, perform other operations on y. For example, you may want to know how many Jane entries are in y. To do this, you may simply tabulate the entries in y as shown below:\n\nCodetable(y)\n\ny\n  Han Henry Holli  Jane  Jeff  Jess   Joe  John \n    1     1     1     1     1     1     1     1 \n\n\nWe see that there is only one Jane entry in y. While you could easily count the number of Jane entries in y, the table function is useful when you have many entries and you want to know how many times each entry appears.\nBefore we proceed, delete (or comment out) the mean(y) that you had written earlier.\n\nYou can create a data frame by combining vectors of equal length. Before we do that, let us create two more vectors (a numeric one and a character one).\n\nCodea&lt;-c(3,3,2,2,3,4,1,2)\n\nb&lt;-c(\"F\", \"M\", \"F\", \"M\", \"M\", \"F\", \"M\", \"M\")\n\n\nYou can combine the vectors a, b, c, x, and y into a data frame as follows. We store this in an object called practice_data and then print it. Note that we use an underscore to separate the words practice and data in the name. Do not use a blank space for object or variable names.\n\nCodepractice_data &lt;- data.frame(name=y, age=x, sex=b, year=a)\nprint (practice_data)\n\n   name age sex year\n1  Jane  23   F    3\n2  John  24   M    3\n3  Jess  26   F    2\n4  Jeff  19   M    2\n5   Joe  18   M    3\n6 Holli  25   F    4\n7 Henry  21   M    1\n8   Han  39   M    2\n\n\nNotice that the data frame looks like a more natural way that you are likely to encounter data. Most of the time, data is collected and stored in excel and can be imported into R for use. Throughout the labs, we will learn how to import data from various sources into R.\n\nWe can run various statistics from data frames. Because the data frame combines many vectors (variables) we need to specify the data frame name and the variable we are targeting. For example, to find the mean of age, we write the data frame name and variable name separated by a dollar sign as follows mean(practice_data$age).\n\nCodemean(practice_data$age)\n\n[1] 24.375\n\n\nYou can also find other statistics. For median, the command is median(data$variable). For standard deviation, the command is sd(data$variable).\nYou can also run multiple summary statistics at once using the command summary(median(data$variable)). See below:\n\nCodesummary(practice_data$age)\n\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n  18.00   20.50   23.50   24.38   25.25   39.00 \n\n\nThe summary command give you the minimum value, first quartile, median, mean, third quartile and maximum value.\n\nYou can create basic plots in base R:\n\nTo create a scatter plot to visualize the relationship between age and year, you can use the code below:\n\nCodeplot(practice_data$age, practice_data$year)\n\n\n\n\n\n\n\n\nTo create a bar plot to visualize the distribution of M and F, you can use the command below:\n\nCodebarplot(table((practice_data$sex)))\n\n\n\n\n\n\n\n\n\nCreate an object (name it income) containing the following numerical elements: 750, 810, 680, 1200, 1500, 1399,1525.\nFind the mean of the values in #1 above.\nCreate another object with names of your choosing and then combine it with the first object to make a data frame called my_data.\nRun the summary statistics for the income variable using my_data data frame that you created in #3 above.\nR comes with many pre-loaded data frames. One such data frame is called mtcars. Run the command ?mtcars to learn more about this data frame. Next, load this data frame into your work space by running the command data(mtcars).\nUse the mtcars data frame to find the median horsepower of the cars.\nCreate a histogram to visualize the distribution of the variable hp. What can you say about the distribution of hp based on the histogram?",
    "crumbs": [
      "Labs",
      "Lab 0"
    ]
  },
  {
    "objectID": "labs/Lab_0.html#creating-a-new-project",
    "href": "labs/Lab_0.html#creating-a-new-project",
    "title": "Hello, World!",
    "section": "",
    "text": "After signing in to R studio, our next step is to create a new project. You can think of a project as a folder or simply a collection of files. Our project will be called “MATH 246 Fall 2024”. Each lab that you complete will be saved in this project. To create the project, you start by clicking on “New Project” and then change the default name (UNTITLED PROJECT) to “MATH 246 Fall 2024”.\nYay! You now have your project ready. In the next section, we explain the meaning of the various panels on your screen.",
    "crumbs": [
      "Labs",
      "Lab 0"
    ]
  },
  {
    "objectID": "labs/Lab_0.html#the-r-studio-interface",
    "href": "labs/Lab_0.html#the-r-studio-interface",
    "title": "Hello, World!",
    "section": "",
    "text": "Your new R studio project interface will look as follows:\n\n\n\nLeft Panel: The panel on the left is where the action happens. This panel is called the console. Every time you launch RStudio, it will have the same text at the top of the console telling you the version of R that you’re running. Below that information is the symbol ” &gt; “. This is where you enter your commands. When you enter and execute a command, the output will come right below it. These commands and their syntax have evolved over decades (literally) and now provide what many users feel is a fairly natural way to access data, organize, describe, and invoke statistical computations. Try typing 1 + 1 in the console and hit enter.\n\nCode1+1\n\n[1] 2\n\n\n\nUpper Right Panel: The panel in the upper right is called “environment”. It contains, among other things, the history of the actions or commands that you’ve previously entered.\nBottom Right Panel: The panel in the lower right contains tabs for browsing the files in your project folder, access help files for R functions, install and manage R packages, and inspecting visualizations through the viewer tab. By default, all data visualizations you make will appear directly below the code you used to create them. If you would rather your plots appear in the plots tab, you will need to change your global options.",
    "crumbs": [
      "Labs",
      "Lab 0"
    ]
  },
  {
    "objectID": "labs/Lab_0.html#r-packages",
    "href": "labs/Lab_0.html#r-packages",
    "title": "Hello, World!",
    "section": "",
    "text": "R is an open-source programming language, meaning that users can contribute packages that make our lives easier, and we can use them for free. Packages are simply pre-written code meant to serve specific purposes and may contain other packages inside them. Packages may also contain data sets. Packages are stored in a directory called “Library”. For this lab, and many others in the future, we will use the following two packages:\n\nThe tidyverse package is a very popular “umbrella” package which houses a suite of many different R packages: for data wrangling (including tidying) and data visualization.\nThe openintro package for data and custom functions with the OpenIntro resources. You will notice that the readings frequently refer to data contained in the OpenIntro Package. This is the package.\n\n\nThe command to install a package in R takes the following format:\ninstall.packages(\"package name\")\nTo install tidyverse and openintro, run the following commands:\ninstall.packages(\"tidyverse\")\ninstall.packages(\"openintro\")\nNote: You only need to install packages once, but you need to load them each time you relaunch RStudio. To call load (activate) the above installed packages, you use the following command:\nlibrary(tidyverse)\nlibrary(openintro)\nWhy Tidyverse? We are choosing to use the tidyverse package collection because it consists of a set of packages necessary for different aspects of working with data, anything from loading data to wrangling data to visualizing data to analyzing data. Additionally, these packages share common philosophies and are designed to work together. You can find more about the packages in the tidyverse at tidyverse.org.",
    "crumbs": [
      "Labs",
      "Lab 0"
    ]
  },
  {
    "objectID": "labs/Lab_0.html#creating-vectors-in-r",
    "href": "labs/Lab_0.html#creating-vectors-in-r",
    "title": "Hello, World!",
    "section": "",
    "text": "Suppose we want to find the mean of the numbers 23,24,26,19,18,25,21, and 39. The first thing you want to do is to get these data into R. We can achieve this by running the code below:\n\nCodex &lt;- c(23,24,26,19,18,25,21, 39) \n# We use the symbol &lt;- for assigning elements to an object. \n\n\nHere, we are creating a vector (a series of numbers) and storing it in an object called x. The symbols &lt;- is used for assignment. In R, we use a # to designate a comment (text that should not be evaluated as code). In above chunk, the text after # is a comment. Comments are a good way to document your code.\nTo find the mean of those numbers, we simply run the command mean(x) as shown below.\n\nCodemean(x)\n\n[1] 24.375\n\n\nThe general format is do_this(on_this). Here, do_this is the function while x is the thing on which we want an action taken.\nTo find the median of the numbers, we run the command median(x) as shown below.\n\nCodemedian(x)\n\n[1] 23.5\n\n\nWe can also create a string object (i.e., a series of non-numerical elements or characters). We use quotes for string characters. See below:\n\nCodey &lt;- c( \"Jane\", \"John\", \"Jess\", \"Jeff\", \"Joe\", \"Holli\", \"Henry\", \"Han\") \n# We use quotes for strings.\n\n\nNow, try to run the command mean(y):\n\nCodemean(y)\n\nWarning in mean.default(y): argument is not numeric or logical: returning NA\n\n\n[1] NA\n\n\nWhat do you get? Programming languages generally produce error messages when you try to perform an inappropriate operation or if there is a mistake in the code. Error messages are a good way to learn what you did wrong. In this case, the mean/average of the object y does not make sense because the entries of y are not numerical.\nYou can, however, perform other operations on y. For example, you may want to know how many Jane entries are in y. To do this, you may simply tabulate the entries in y as shown below:\n\nCodetable(y)\n\ny\n  Han Henry Holli  Jane  Jeff  Jess   Joe  John \n    1     1     1     1     1     1     1     1 \n\n\nWe see that there is only one Jane entry in y. While you could easily count the number of Jane entries in y, the table function is useful when you have many entries and you want to know how many times each entry appears.\nBefore we proceed, delete (or comment out) the mean(y) that you had written earlier.",
    "crumbs": [
      "Labs",
      "Lab 0"
    ]
  },
  {
    "objectID": "labs/Lab_0.html#creating-data-frames",
    "href": "labs/Lab_0.html#creating-data-frames",
    "title": "Hello, World!",
    "section": "",
    "text": "You can create a data frame by combining vectors of equal length. Before we do that, let us create two more vectors (a numeric one and a character one).\n\nCodea&lt;-c(3,3,2,2,3,4,1,2)\n\nb&lt;-c(\"F\", \"M\", \"F\", \"M\", \"M\", \"F\", \"M\", \"M\")\n\n\nYou can combine the vectors a, b, c, x, and y into a data frame as follows. We store this in an object called practice_data and then print it. Note that we use an underscore to separate the words practice and data in the name. Do not use a blank space for object or variable names.\n\nCodepractice_data &lt;- data.frame(name=y, age=x, sex=b, year=a)\nprint (practice_data)\n\n   name age sex year\n1  Jane  23   F    3\n2  John  24   M    3\n3  Jess  26   F    2\n4  Jeff  19   M    2\n5   Joe  18   M    3\n6 Holli  25   F    4\n7 Henry  21   M    1\n8   Han  39   M    2\n\n\nNotice that the data frame looks like a more natural way that you are likely to encounter data. Most of the time, data is collected and stored in excel and can be imported into R for use. Throughout the labs, we will learn how to import data from various sources into R.",
    "crumbs": [
      "Labs",
      "Lab 0"
    ]
  },
  {
    "objectID": "labs/Lab_0.html#using-data-frames",
    "href": "labs/Lab_0.html#using-data-frames",
    "title": "Hello, World!",
    "section": "",
    "text": "We can run various statistics from data frames. Because the data frame combines many vectors (variables) we need to specify the data frame name and the variable we are targeting. For example, to find the mean of age, we write the data frame name and variable name separated by a dollar sign as follows mean(practice_data$age).\n\nCodemean(practice_data$age)\n\n[1] 24.375\n\n\nYou can also find other statistics. For median, the command is median(data$variable). For standard deviation, the command is sd(data$variable).\nYou can also run multiple summary statistics at once using the command summary(median(data$variable)). See below:\n\nCodesummary(practice_data$age)\n\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n  18.00   20.50   23.50   24.38   25.25   39.00 \n\n\nThe summary command give you the minimum value, first quartile, median, mean, third quartile and maximum value.",
    "crumbs": [
      "Labs",
      "Lab 0"
    ]
  },
  {
    "objectID": "labs/Lab_0.html#basic-visualizations",
    "href": "labs/Lab_0.html#basic-visualizations",
    "title": "Hello, World!",
    "section": "",
    "text": "You can create basic plots in base R:\n\nTo create a scatter plot to visualize the relationship between age and year, you can use the code below:\n\nCodeplot(practice_data$age, practice_data$year)\n\n\n\n\n\n\n\n\nTo create a bar plot to visualize the distribution of M and F, you can use the command below:\n\nCodebarplot(table((practice_data$sex)))",
    "crumbs": [
      "Labs",
      "Lab 0"
    ]
  },
  {
    "objectID": "labs/Lab_0.html#exercises",
    "href": "labs/Lab_0.html#exercises",
    "title": "Hello, World!",
    "section": "",
    "text": "Create an object (name it income) containing the following numerical elements: 750, 810, 680, 1200, 1500, 1399,1525.\nFind the mean of the values in #1 above.\nCreate another object with names of your choosing and then combine it with the first object to make a data frame called my_data.\nRun the summary statistics for the income variable using my_data data frame that you created in #3 above.\nR comes with many pre-loaded data frames. One such data frame is called mtcars. Run the command ?mtcars to learn more about this data frame. Next, load this data frame into your work space by running the command data(mtcars).\nUse the mtcars data frame to find the median horsepower of the cars.\nCreate a histogram to visualize the distribution of the variable hp. What can you say about the distribution of hp based on the histogram?",
    "crumbs": [
      "Labs",
      "Lab 0"
    ]
  },
  {
    "objectID": "labs/lab-7.html",
    "href": "labs/lab-7.html",
    "title": "Lab 7 - Modeling II",
    "section": "",
    "text": "In this lab you’ll continue your practice of statistical modeling and then venture on to quantifying uncertainty.\n\nIn this lab we will work with the tidyverse and tidymodels packages.\n\nlibrary(tidyverse)\nlibrary(tidymodels)\n\n\nYour plots should include an informative title, axes should be labeled, and careful consideration should be given to aesthetic choices.\nIn addition, the code should all the code should be be able to be read (not run off the page) when you render to PDF. Make sure that is the case, and add line breaks where the code is running off the page.\n\n\n\n\n\n\nImportant\n\n\n\nRender your document. If your code is running off the page for a given question such that we can’t see your entire code, we will not evaluate any of the code for that question. The question will automatically receive a 0. This is something you can and should verify before you turn in your work.\n\n\nYou should have at least 3 commits with meaningful commit messages by the end of the assignment.\nAdditionally, if you’re using functions that are not introduced in the course materials, you must cite your sources.\n\n\n\n\n\n\nImportant\n\n\n\nFailure to cite outside resources used, including Large Language Models like Chat GPT, is a violation of the Duke Community Standard and will be treated as such.",
    "crumbs": [
      "Labs",
      "Lab 7"
    ]
  },
  {
    "objectID": "labs/lab-7.html#packages",
    "href": "labs/lab-7.html#packages",
    "title": "Lab 7 - Modeling II",
    "section": "",
    "text": "In this lab we will work with the tidyverse and tidymodels packages.\n\nlibrary(tidyverse)\nlibrary(tidymodels)",
    "crumbs": [
      "Labs",
      "Lab 7"
    ]
  },
  {
    "objectID": "labs/lab-7.html#guidelines",
    "href": "labs/lab-7.html#guidelines",
    "title": "Lab 7 - Modeling II",
    "section": "",
    "text": "Your plots should include an informative title, axes should be labeled, and careful consideration should be given to aesthetic choices.\nIn addition, the code should all the code should be be able to be read (not run off the page) when you render to PDF. Make sure that is the case, and add line breaks where the code is running off the page.\n\n\n\n\n\n\nImportant\n\n\n\nRender your document. If your code is running off the page for a given question such that we can’t see your entire code, we will not evaluate any of the code for that question. The question will automatically receive a 0. This is something you can and should verify before you turn in your work.\n\n\nYou should have at least 3 commits with meaningful commit messages by the end of the assignment.\nAdditionally, if you’re using functions that are not introduced in the course materials, you must cite your sources.\n\n\n\n\n\n\nImportant\n\n\n\nFailure to cite outside resources used, including Large Language Models like Chat GPT, is a violation of the Duke Community Standard and will be treated as such.",
    "crumbs": [
      "Labs",
      "Lab 7"
    ]
  },
  {
    "objectID": "labs/lab-7.html#question-1",
    "href": "labs/lab-7.html#question-1",
    "title": "Lab 7 - Modeling II",
    "section": "Question 1",
    "text": "Question 1\na. Fit a logistic regression model predicting spam from exclaim_mess (the number of exclamation points in the email message). Then, display the tidy output of the model.\nb. Using this model and an R function like predict() or augment(), predict the probability the email is spam if it contains 10 exclamation points.",
    "crumbs": [
      "Labs",
      "Lab 7"
    ]
  },
  {
    "objectID": "labs/lab-7.html#question-2",
    "href": "labs/lab-7.html#question-2",
    "title": "Lab 7 - Modeling II",
    "section": "Question 2",
    "text": "Question 2\na. Fit another logistic regression model predicting spam from exclaim_mess, winner (indicating whether “winner” appeared in the email), and urgent_subj (whether the word “urgent” is in the subject of the email). Then, display the tidy output of the model.\nb. Using this model, predict spam / not spam for all emails in the email dataset with augment(). Store the resulting data frame with an appropriate name.\nc. Using your data frame from the previous part, determine, in a single pipeline, and using count(), the numbers of emails:\n\nthat are labelled as spam that are actually spam\nthat are not labelled as spam that are actually spam\nthat are labelled as spam that are actually not spam\nthat are not labelled as spam that are actually not spam\n\nStore the resulting data frame with an appropriate name.\nd. In a single pipeline, and using mutate(), calculate the false positive and false negative rates. In addition to these numbers showing in your R output, you must write a sentence that explicitly states and identified the two rates.",
    "crumbs": [
      "Labs",
      "Lab 7"
    ]
  },
  {
    "objectID": "labs/lab-7.html#question-3",
    "href": "labs/lab-7.html#question-3",
    "title": "Lab 7 - Modeling II",
    "section": "Question 3",
    "text": "Question 3\na. Fit another logistic regression model predicting spam from exclaim_mess and another variable you think would be a good predictor. Provide a 1-sentence justification for why you chose this variable. Display the tidy output of the model.\nb. Using this model, predict spam / not spam for all emails in the email dataset with augment(). Store the resulting data frame with an appropriate name.\nc. Using your data frame from the previous part, determine, in a single pipeline, and using count(), the numbers of emails:\n\nthat are labelled as spam that are actually spam\nthat are not labelled as spam that are actually spam\nthat are labelled as spam that are actually not spam\nthat are not labelled as spam that are actually not spam\n\nStore the resulting data frame with an appropriate name.\nd. In a single pipeline, and using mutate(), calculate the false positive and false negative rates. In addition to these numbers showing in your R output, you must write a sentence that explicitly states and identified the two rates.\ne. Based on the false positive and false negatives rates of this model, comment, in 1-2 sentences, on which model is preferable and why.",
    "crumbs": [
      "Labs",
      "Lab 7"
    ]
  },
  {
    "objectID": "labs/lab-7.html#question-4",
    "href": "labs/lab-7.html#question-4",
    "title": "Lab 7 - Modeling II",
    "section": "Question 4",
    "text": "Question 4\nRead the data and then explore attributes of bookings and summarize your findings in 5 bullet points. You must provide a visualization or summary supporting each finding.\n\n\n\n\n\n\nNote\n\n\n\nThis is not meant to be an exhaustive exploration. We anticipate a wide variety of answers to this question.",
    "crumbs": [
      "Labs",
      "Lab 7"
    ]
  },
  {
    "objectID": "labs/lab-7.html#question-5",
    "href": "labs/lab-7.html#question-5",
    "title": "Lab 7 - Modeling II",
    "section": "Question 5",
    "text": "Question 5\nUsing these data, we will try to answer the following question:\n\nDo we expect reservations earlier in the month or later in the month to be cancelled?\n\n\nExploration: In a single pipeline, calculate the mean arrival date (arrival_date_day_of_month) for both booking that were cancelled and that were not cancelled.\nJustification: In your own words, explain why we can not fit a linear model to model the relationship between if a hotel reservation was cancelled and the day of month for the booking.\n\nModel fitting and interpretation:\n\nFit the appropriate model and display a tidy summary of the model output.\nInterpret the slope coefficient in context of the data and the research question.\n\n\nPredicted: Calculate the probability that the hotel reservation is cancelled if it the arrival date date is on the 26th of the month. Based on this probability, would you predict this booking would be cancelled or not cancelled. Explain your reasoning for your classification.",
    "crumbs": [
      "Labs",
      "Lab 7"
    ]
  },
  {
    "objectID": "labs/lab-7.html#question-6",
    "href": "labs/lab-7.html#question-6",
    "title": "Lab 7 - Modeling II",
    "section": "Question 6",
    "text": "Question 6\nYou have two options for this exercise. Clearly indicate which option you choose. Then, summarize your experience in no more than 10 bullet points.\nInclude the following on your summary:\n\nName and brief description of what you did.\nSomething you found new, interesting, or unexpected\nHow the talk/podcast/interview/etc. connects to something we’ve done in class.\nCitation or link to web page for what you watched or who you interviewed.\n\nOption 1: Listen to a podcast or watch a video about statistics and data science. The podcast or video must be at least 30 minutes to count towards the statistics experience. A few suggestions are below:\n\nposit::conf 2023 talks\nrstudio::conf 2022 talks\nrstudio::global 2021 talks\nrstudio::conf 2020 talks\nStats + Stories Podcast\nCasual Inference Podcast\nNot So Standard Deviations\n\nThis list is not exhaustive. You may listen to other podcasts or watch other statistics/data science videos not included on this list. Ask your professor if you are unsure whether a particular podcast or video will count towards the statistics experience.\nOption 2: Talk with someone who uses statistics in their daily work. This could include a professor, professional in industry, graduate student, etc.",
    "crumbs": [
      "Labs",
      "Lab 7"
    ]
  },
  {
    "objectID": "labs/lab-7.html#question-7",
    "href": "labs/lab-7.html#question-7",
    "title": "Lab 7 - Modeling II",
    "section": "Question 7",
    "text": "Question 7\nYour task is to make the following plot as ugly and as ineffective as possible. Change colors, axes, fonts, theme, or anything else you can think of in the code chunk below. You can also search online for other themes, fonts, etc. that you want to tweak. Try to make it as ugly as possible, the sky is the limit!\nIn 2-3 sentences, explain why the plot you created is ugly (to you, at least) and ineffective.\n\nggplot(\n  penguins, \n  aes(x = flipper_length_mm, y = bill_length_mm, color = species)\n  ) + \n  geom_point()",
    "crumbs": [
      "Labs",
      "Lab 7"
    ]
  },
  {
    "objectID": "labs/lab-7.html#question-8",
    "href": "labs/lab-7.html#question-8",
    "title": "Lab 7 - Modeling II",
    "section": "Question 8",
    "text": "Question 8\nIn 2016, the GSS added a new question on harassment at work. The question is phrased as the following.\nOver the past five years, have you been harassed by your superiors or co-workers at your job, for example, have you experienced any bullying, physical or psychological abuse?\nAnswers to this question are stored in the harass5 variable in our data set.\n\nCreate a subset of the data that only contains Yes and No answers for the harassment question. How many respondents chose each of these answers?\nDescribe how bootstrapping can be used to estimate the proportion of all Americans who have been harassed by their superiors or co-workers at their job.\nCalculate a 95% bootstrap confidence interval for the proportion of Americans who have been harassed by their superiors or co-workers at their job. Use 1000 iterations when creating your bootstrap distribution. Interpret this interval in context of the data.",
    "crumbs": [
      "Labs",
      "Lab 7"
    ]
  },
  {
    "objectID": "labs/lab-7.html#question-9",
    "href": "labs/lab-7.html#question-9",
    "title": "Lab 7 - Modeling II",
    "section": "Question 9",
    "text": "Question 9\n\n\n\n\n\n\nImportant\n\n\n\nThis question is graded out of 10 points.\n\n\nTake a data science assessment at https://duke.qualtrics.com/jfe/form/SV_bPZS3LIKoYA0fL8. Your assessment will be graded out of 10 points, and those points will be added to your score for the remaining points on this lab. There are no additional penalties for wrong answers, so please answer all questions.\nOptionally, you can participate in the research study this assessment is a part of. I will not find out whether you participate in the study or not, your scores will be passed on to me by the research administrator regardless of your study participation.",
    "crumbs": [
      "Labs",
      "Lab 7"
    ]
  },
  {
    "objectID": "labs/lab-4.html",
    "href": "labs/lab-4.html",
    "title": "Lab 4 - Web scraping and ethics",
    "section": "",
    "text": "In this lab you’ll build the data wrangling and visualization skills you’ve developed so far and data tidying and joining to your repertoire.\n\n\n\n\n\n\nNote\n\n\n\nThis lab assumes you’ve completed the labs so far and doesn’t repeat setup and overview content from those labs. If you have not yet done those, you should go back and review the previous labs before starting on this one.\n\n\n\nBy the end of the lab, you will…\n\nBe able to scrape data from web pages using the rvest package\nClean and analyze the data you have scraped\nCome up with your own questions about the data and answer them\nBe able to use the robotstxt package as well as read the Terms of Use/Service of a website to check if a website allows scraping\nRead articles on the ethics of AI tools and LLMs and reflect on the implications of these tools for society\n\nLog in to RStudio, clone your lab-4 repo from GitHub, open your lab-4.qmd document, and get started!\n\n\n\n\n\n\nClick here if you prefer to see step-by-step instructions\n\n\n\n\n\n\n\nGo to https://cmgr.oit.duke.edu/containers and log in with your Duke NetID and Password.\nClick STA198-199 under My reservations to log into your container. You should now see the RStudio environment.\n\n\nGo to the course organization at github.com/sta199-s24 organization on GitHub. Click on the repo with the prefix lab-3. It contains the starter documents you need to complete the lab.\nClick on the green CODE button, select Use SSH (this might already be selected by default, and if it is, you’ll see the text Clone with SSH). Click on the clipboard icon to copy the repo URL.\nIn RStudio, go to File ➛ New Project ➛Version Control ➛ Git.\nCopy and paste the URL of your assignment repo into the dialog box Repository URL. Again, please make sure to have SSH highlighted under Clone when you copy the address.\nClick Create Project, and the files from your GitHub repo will be displayed in the Files pane in RStudio.\nClick lab-3.qmd to open the template Quarto file. This is where you will write up your code and narrative for the lab.\n\nIn lab-3.qmd, update the author field to your name, render your document and examine the changes. Then, in the Git pane, click on Diff to view your changes, add a commit message (e.g., “Added author name”), and click Commit. Then, push the changes to your GitHub repository, and in your browser confirm that these changes have indeed propagated to your repository.\n\n\n\n\n\nIn this lab we will work with the following packages:\n\n\ntidyverse: for tidy data wrangling and visualization\n\nrvest: for data scraping\n\nrobotstxt: for checking the robots.txt files of websites for permission to scrape data\n\nknitr: for making a pretty table\n\nSome of the later questions in the lab ask you to come up with your own questions about the data and answer them. If this requires additional packages, you should feel free to load them as well.\n\nAs we’ve discussed in lecture, your plots should include an informative title, axes should be labeled, and careful consideration should be given to aesthetic choices.\nIn addition, the code should all the code should be be able to be read (not run off the page) when you render to PDF. Make sure that is the case, and add line breaks where the code is running off the page.1\n\n\n\n\n\n\nNote\n\n\n\nContinuing to develop a sound workflow for reproducible data analysis is important as you complete the lab and other assignments in this course. There will be periodic reminders in this assignment to remind you to render, commit, and push your changes to GitHub. You should have at least 3 commits with meaningful commit messages by the end of the assignment.",
    "crumbs": [
      "Labs",
      "Lab 4"
    ]
  },
  {
    "objectID": "labs/lab-4.html#learning-objectives",
    "href": "labs/lab-4.html#learning-objectives",
    "title": "Lab 4 - Web scraping and ethics",
    "section": "",
    "text": "By the end of the lab, you will…\n\nBe able to scrape data from web pages using the rvest package\nClean and analyze the data you have scraped\nCome up with your own questions about the data and answer them\nBe able to use the robotstxt package as well as read the Terms of Use/Service of a website to check if a website allows scraping\nRead articles on the ethics of AI tools and LLMs and reflect on the implications of these tools for society",
    "crumbs": [
      "Labs",
      "Lab 4"
    ]
  },
  {
    "objectID": "labs/lab-4.html#getting-started",
    "href": "labs/lab-4.html#getting-started",
    "title": "Lab 4 - Web scraping and ethics",
    "section": "",
    "text": "Log in to RStudio, clone your lab-4 repo from GitHub, open your lab-4.qmd document, and get started!\n\n\n\n\n\n\nClick here if you prefer to see step-by-step instructions\n\n\n\n\n\n\n\nGo to https://cmgr.oit.duke.edu/containers and log in with your Duke NetID and Password.\nClick STA198-199 under My reservations to log into your container. You should now see the RStudio environment.\n\n\nGo to the course organization at github.com/sta199-s24 organization on GitHub. Click on the repo with the prefix lab-3. It contains the starter documents you need to complete the lab.\nClick on the green CODE button, select Use SSH (this might already be selected by default, and if it is, you’ll see the text Clone with SSH). Click on the clipboard icon to copy the repo URL.\nIn RStudio, go to File ➛ New Project ➛Version Control ➛ Git.\nCopy and paste the URL of your assignment repo into the dialog box Repository URL. Again, please make sure to have SSH highlighted under Clone when you copy the address.\nClick Create Project, and the files from your GitHub repo will be displayed in the Files pane in RStudio.\nClick lab-3.qmd to open the template Quarto file. This is where you will write up your code and narrative for the lab.\n\nIn lab-3.qmd, update the author field to your name, render your document and examine the changes. Then, in the Git pane, click on Diff to view your changes, add a commit message (e.g., “Added author name”), and click Commit. Then, push the changes to your GitHub repository, and in your browser confirm that these changes have indeed propagated to your repository.",
    "crumbs": [
      "Labs",
      "Lab 4"
    ]
  },
  {
    "objectID": "labs/lab-4.html#packages",
    "href": "labs/lab-4.html#packages",
    "title": "Lab 4 - Web scraping and ethics",
    "section": "",
    "text": "In this lab we will work with the following packages:\n\n\ntidyverse: for tidy data wrangling and visualization\n\nrvest: for data scraping\n\nrobotstxt: for checking the robots.txt files of websites for permission to scrape data\n\nknitr: for making a pretty table\n\nSome of the later questions in the lab ask you to come up with your own questions about the data and answer them. If this requires additional packages, you should feel free to load them as well.",
    "crumbs": [
      "Labs",
      "Lab 4"
    ]
  },
  {
    "objectID": "labs/lab-4.html#guidelines",
    "href": "labs/lab-4.html#guidelines",
    "title": "Lab 4 - Web scraping and ethics",
    "section": "",
    "text": "As we’ve discussed in lecture, your plots should include an informative title, axes should be labeled, and careful consideration should be given to aesthetic choices.\nIn addition, the code should all the code should be be able to be read (not run off the page) when you render to PDF. Make sure that is the case, and add line breaks where the code is running off the page.1\n\n\n\n\n\n\nNote\n\n\n\nContinuing to develop a sound workflow for reproducible data analysis is important as you complete the lab and other assignments in this course. There will be periodic reminders in this assignment to remind you to render, commit, and push your changes to GitHub. You should have at least 3 commits with meaningful commit messages by the end of the assignment.",
    "crumbs": [
      "Labs",
      "Lab 4"
    ]
  },
  {
    "objectID": "labs/lab-4.html#part-1---scraping-data-from-web-pages",
    "href": "labs/lab-4.html#part-1---scraping-data-from-web-pages",
    "title": "Lab 4 - Web scraping and ethics",
    "section": "Part 1 - Scraping data from web pages",
    "text": "Part 1 - Scraping data from web pages\nQuestion 1\n\n\n\n\n\n\nImportant\n\n\n\nYou do not need to do anything in your Quarto file for this question. All of the work for this question will be done in lab-4-clubs-scrape.R.\n\n\nYour task for this question is to scrape data on Duke Student Groups from https://dukegroups.com/club_signup?view=all. Scroll down and click on load all groups.\nYou will do this in lab-4-clubs-scrape.R, which gives some scaffolding for you to complete this task. The goal is to scrape information on\n\nName of club: names\n\nLink to club page: urls\n\nType of club: club_types\n\nResources of club: resources\n\nMembership type of club: membership_types\n\nCheckboxes that indicate the club is open / closed for joining: membership_status\n\n\nThe scheme shown in the image should also help you figure out which pieces of information come from which parts of the website.\n\n\n\n\nYou will scrape each of these as individual vectors, clean them up a bit, and then bring them together in a data frame (a tibble) and write it out to a CSV file called clubs.csv in the data folder of your project/repository.\n\n\n\n\n\n\nHint\n\n\n\nThere are some hints for cleaning the data in the script provided for you. For example, some of the fields you scrape will have some extraneous characters in them like \\ns, \\rs, etc. Two examples are provided below.\n\nname &lt;- \"\\r Academic Advising Center\\r\"\nurl &lt;- \"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\thttps://dukegroups.com/AOTA/\\r\\n\\t\\t\\t\\t\\t\\t\\t\"\n\nTo clean these up, first, we would want to remove the extraneous characters. The stringr package (which comes with the tidyverse) offers some great functions for dealing with such nuisance, see https://stringr.tidyverse.org/reference/index.html for a full list. In this case, we can use the following steps:\n\n\nstr_remove() to remove the character(s) once or str_remove_all() to remove all occurences of the character(s) we don’t want\n\n\nname |&gt;\n  str_remove_all(\"\\r\")\nurl |&gt;\n  str_remove_all(\"\\r\") |&gt;\n  str_remove_all(\"\\n\") |&gt;\n  str_remove_all(\"\\t\")\n\n\n\nstr_trim() for trimming white space at the beginning and end of text strings\n\n\nname |&gt;\n  str_remove_all(\"\\r\") |&gt;\n  str_trim()\n\nThese types of functions will be helpful for cleaning the data you scrape as well.",
    "crumbs": [
      "Labs",
      "Lab 4"
    ]
  },
  {
    "objectID": "labs/lab-4.html#part-2---data-cleaning",
    "href": "labs/lab-4.html#part-2---data-cleaning",
    "title": "Lab 4 - Web scraping and ethics",
    "section": "Part 2 - Data cleaning",
    "text": "Part 2 - Data cleaning\nQuestion 2\nRead the clubs.csv file you created in Question 1 into your Quarto document.\nThe club_type_detail variable contains two pieces of information for most (though not all) clubs:\n\nMany of the entries are of the form House/Quad Council - Housing & Residence Life or Open Membership (DSG) - Faith, Religion, & Spirituality, where the piece before the hyphen (-) is club_type while the piece after the hyphen is detail.\nSome of the entries are of the form Student Government or Student Affairs Unit, basically just club_type but no detail.\n\nSeparate the club_type variable into two, club_type and detail, and then trim any extraneous white space from the resulting variables, as needed. Save the resulting dataset with these two new variables as clubs, i.e., overwrite the data frame.\nThen, display the first 10 rows of the dataset, relocate()ing club_type and detail variables to the beginning of the dataset to make sure they appear in the output in your rendered document.\nQuestion 3\nAnother variable that needs some cleaning up is membership_status. Currently it should either be NA or contain some text that says \"Select ... to register for this group\". Recode this variable to say \"Closed\" if the current value is NA or \"Open\" otherwise. Save the resulting dataset with these two new variables as clubs, i.e., overwrite the data frame.\nThen, display the first 10 rows of the dataset, relocate()ing membership_status to the beginning of the dataset to make sure it appears in the output in your rendered document.\n\n\n\n\n\n\nWarning\n\n\n\nAt this point you should have a clubs dataset with seven columns in the following order:\n\nname\nresources\nclub_type\n\ndetail: May be blank for some clubs\nmembership_type\n\nmembership_status: with values Open and Closed\n\nurl\n\nIf your dataset has a structure of columns different than what’s outlined above, go back to earlier exercises and review your answers.",
    "crumbs": [
      "Labs",
      "Lab 4"
    ]
  },
  {
    "objectID": "labs/lab-4.html#part-3---data-analysis",
    "href": "labs/lab-4.html#part-3---data-analysis",
    "title": "Lab 4 - Web scraping and ethics",
    "section": "Part 3 - Data analysis",
    "text": "Part 3 - Data analysis\nQuestion 4\nSolve each of the following questions (parts) with a single pipeline.\n\nFind the distinct membership_types and the number of clubs with each type of membership.\nFind the number of clubs that have a Mission statement.\nFind the clubs that are Greek and mention Faith in their detail.\nQuestion 5\nRecreate the following table in a single pipeline.\n\n\n\n\n\n\n\n\n\n\nHint\n\n\n\n\nFirst, count the number of clubs that fall into each club_type and membership_status.\nThen, pivot the resulting data frame so the levels of membership_status are across two columns as opposed to in a single column.\nRead the documentation for the pivoting function you’re using to discover how you can replace NAs with 0s while pivoting the data.\nCreate a new column Total that is the sum of Closed and Open columns.\nUse the kable() function (refer back to your take-home exam if you need a hint) to nicely format your table.\n\n\n\nQuestion 6\nAsk a simple question of interest to you about student clubs at Duke that you can answer with these data. Then, answer your question in a single pipeline and a brief narrative describing your findings. If your question is too complex to answer in a single pipeline, go back and revise your question.\nQuestion 7\nAsk another question of interest to you about student clubs at Duke that you can answer with a visualization of these data. Then, answer your question, with a visualization and a brief narrative describing your findings.\n\n\n\n\n\n\nNote\n\n\n\nIf you are collaborating with classmates and brainstorming possible questions together, make sure the questions you choose are unique to you.",
    "crumbs": [
      "Labs",
      "Lab 4"
    ]
  },
  {
    "objectID": "labs/lab-4.html#part-4---ethics",
    "href": "labs/lab-4.html#part-4---ethics",
    "title": "Lab 4 - Web scraping and ethics",
    "section": "Part 4 - Ethics",
    "text": "Part 4 - Ethics\n\n\n\n\n\n\nImportant\n\n\n\nThe following two questions ask you to summarize articles on data science ethics. You are not allowed to use Chat GPT or similar tools in answering these questions – you must actually read the articles and summarize them yourself. Please be ethical, at a minimum when discussing ethics!\n\n\nQuestion 8\nFor each of the following websites, first determine whether you’re allowed to scrape data from them using tools we’ve learned in this course.\nThen, read (the relevant portions of their) Terms of Use/Service.\n\nESPN: https://www.espn.com / https://disneytermsofuse.com/english/#License-Grant-and-Restrictions\n\nX/Twitter: https://twitter.com / https://twitter.com/en/tos\n\nRotten Tomatoes: https://www.rottentomatoes.com / https://www.rottentomatoes.com/policies/terms-of-use\n\n\nFinally, summarize your findings about whether you can or cannot scrape data from these websites in 1 sentence for each website. Additionally, quote the relevant sentence(s) from the Terms of Use/Service.\n\n\n\n\n\n\nHint\n\n\n\nIn the Terms of Use/Service documents, it might be productive to search for keywords like “scrape” or “scraping” to find the relevant portions.\n\n\nQuestion 9\nOne current ethical discussion in data science involves the training of “Large Language Models” such as ChatGPT. These models are trained using massive corpora (document sets) that include large amounts of work that is covered under copyright law. Read the following two articles:\n\nDo Large Language Models Violate Copyright Law?\nReexamining “Fair Use” in the Age of AI\n\nWrite a short paragraph (maximum 8 sentences) discussing the arguments on both sides of the discussion over copyright in training large language models.\nQuestion 10\nAnother major ethical discussion in data science resolves around discriminatory biases in machine learning models. These biases can have real-world impacts in lending, criminal justice, hiring, and more. Many of these algorithms are so-called “black boxes”, meaning the exact process they take from input to output is unclear. Read the following articles:\n\nAmazon scraps secret AI recruiting tool that showed bias against\nThe Atlantic: The False Promise of Risk Assessment\n\nWrite a short paragraph (maximum 8 sentences) discussing the nature of biases in machine learning and in datasets, and any possible solutions that could help limit those biases.",
    "crumbs": [
      "Labs",
      "Lab 4"
    ]
  },
  {
    "objectID": "labs/lab-4.html#submission",
    "href": "labs/lab-4.html#submission",
    "title": "Lab 4 - Web scraping and ethics",
    "section": "Submission",
    "text": "Submission\nOnce you are finished with the lab, you will submit your final PDF document to Gradescope.\n\n\n\n\n\n\nWarning\n\n\n\nBefore you wrap up the assignment, make sure all of your documents are updated on your GitHub repo. We will be checking these to make sure you have been practicing how to commit and push changes.\nYou must turn in a PDF file to the Gradescope page by the submission deadline to be considered “on time”.\n\n\nTo submit your assignment:\n\nGo to http://www.gradescope.com and click Log in in the top right corner.\nClick School Credentials \\(\\rightarrow\\) Duke NetID and log in using your NetID credentials.\nClick on your STA 199 course.\nClick on the assignment, and you’ll be prompted to submit it.\nMark all the pages associated with question. All the pages of your lab should be associated with at least one question (i.e., should be “checked”).\n\n\n\n\n\n\n\nChecklist\n\n\n\nMake sure you have:\n\nattempted all questions\nrendered your Quarto document\ncommitted and pushed everything to your GitHub repository such that the Git pane in RStudio is empty\nuploaded your PDF to Gradescope\nselected pages associated with each question on Gradescope",
    "crumbs": [
      "Labs",
      "Lab 4"
    ]
  },
  {
    "objectID": "labs/lab-4.html#grading",
    "href": "labs/lab-4.html#grading",
    "title": "Lab 4 - Web scraping and ethics",
    "section": "Grading",
    "text": "Grading\nThe lab is graded out of a total of 50 points.\nYou can earn up to 5 points on each question:\n\n5: Response shows excellent understanding and addresses all or almost all of the rubric items.\n4: Response shows good understanding and addresses most of the rubric items.\n3: Response shows understanding and addresses a majority of the rubric items.\n2: Response shows effort and misses many of the rubric items.\n1: Response does not show sufficient effort or understanding and/or is largely incomplete.\n0: No attempt.",
    "crumbs": [
      "Labs",
      "Lab 4"
    ]
  },
  {
    "objectID": "labs/lab-4.html#footnotes",
    "href": "labs/lab-4.html#footnotes",
    "title": "Lab 4 - Web scraping and ethics",
    "section": "Footnotes",
    "text": "Footnotes\n\nRemember, haikus not novellas when writing code!↩︎",
    "crumbs": [
      "Labs",
      "Lab 4"
    ]
  },
  {
    "objectID": "labs/lab-1.html",
    "href": "labs/lab-1.html",
    "title": "Lab 1 - Data visualization",
    "section": "",
    "text": "This lab will introduce you to the course computing workflow. The main goal is to reinforce our demo of R and RStudio, which we will be using throughout the course both to learn the statistical concepts discussed in the course and to analyze real data and come to informed conclusions.\n\n\n\n\n\n\nNote\n\n\n\nR is the name of the programming language itself and RStudio is a convenient interface, commonly referred to as an integrated development environment or an IDE, for short.\n\n\nAn additional goal is to reinforce Git and GitHub, the version control, web hosting, and collaboration systems that we will be using throughout the course.\n\n\n\n\n\n\nNote\n\n\n\nGit is a version control system (like “Track Changes” features from Microsoft Word but more powerful) and GitHub is the home for your Git-based projects on the internet (like DropBox but much better).\n\n\nAs the labs progress, you are encouraged to explore beyond what the labs dictate; a willingness to experiment will make you a much better programmer. Before we get to that stage, however, you need to build some basic fluency in R. Today we begin with the fundamental building blocks of R and RStudio: the interface, reading in data, and basic commands.\n\n\n\n\n\n\nWarning\n\n\n\nThis lab assumes that you have already completed Lab 0. If you have not, please go back and do that first before proceeding.\n\n\n\nBy the end of the lab, you will…\n\nBe familiar with the workflow using R, RStudio, Git, and GitHub\nGain practice writing a reproducible report using Quarto\nPractice version control using Git and GitHub\nBe able to create data visualizations using ggplot2\n\n\n\n\nGo to https://cmgr.oit.duke.edu/containers and login with your Duke NetID and Password.\nClick STA198-199 under My reservations to log into your container. You should now see the RStudio environment.\n\n\nGo to the course organization at github.com/sta199-s24 organization on GitHub. Click on the repo with the prefix lab-1. It contains the starter documents you need to complete the lab.\nClick on the green CODE button, select Use SSH (this might already be selected by default, and if it is, you’ll see the text Clone with SSH). Click on the clipboard icon to copy the repo URL.\nIn RStudio, go to File ➛ New Project ➛Version Control ➛ Git.\nCopy and paste the URL of your assignment repo into the dialog box Repository URL. Again, please make sure to have SSH highlighted under Clone when you copy the address.\nClick Create Project, and the files from your GitHub repo will be displayed in the Files pane in RStudio.\nClick lab-1.qmd to open the template Quarto file. This is where you will write up your code and narrative for the lab.\n\nBelow are the components of the RStudio IDE.\n\nBelow are the components of a Quarto (.qmd) file.\n\n\nThe top portion of your R Markdown file (between the three dashed lines) is called YAML. It stands for “YAML Ain’t Markup Language”. It is a human friendly data representation for all programming languages. All you need to know is that this area is called the YAML (we will refer to it as such) and that it contains meta information about your document.\n\n\n\n\n\n\nImportant\n\n\n\nOpen the Quarto (.qmd) file in your project, change the author name to your name, and render the document. Examine the rendered document.\n\n\n\nNow, go to the Git pane in your RStudio instance. This will be in the top right hand corner in a separate tab.\nIf you have made changes to your Quarto (.qmd) file, you should see it listed here. Click on it to select it in this list and then click on Diff. This shows you the difference between the last committed state of the document and its current state including changes. You should see deletions in red and additions in green.\nIf you’re happy with these changes, we’ll prepare the changes to be pushed to your remote repository. First, stage your changes by checking the appropriate box on the files you want to prepare. Next, write a meaningful commit message (for instance, “updated author name”) in the Commit message box. Finally, click Commit. Note that every commit needs to have a commit message associated with it.\nYou don’t have to commit after every change, as this would get quite tedious. You should commit states that are meaningful to you for inspection, comparison, or restoration.\nIn the first few assignments we will tell you exactly when to commit and in some cases, what commit message to use. As the semester progresses we will let you make these decisions.\nNow let’s make sure all the changes went to GitHub. Go to your GitHub repo and refresh the page. You should see your commit message next to the updated files. If you see this, all your changes are on GitHub and you’re good to go!\n\nNow that you have made an update and committed this change, it’s time to push these changes to your repo on GitHub.\nIn order to push your changes to GitHub, you must have staged your commit to be pushed. click on Push.\n\nIn this lab we will work with the tidyverse package, which is a collection of packages for doing data analysis in a “tidy” way.\n\nlibrary(tidyverse)\n\nRender the document which loads this package with the library() function.\n\n\n\n\n\n\nNote\n\n\n\nThe rendered document will include a message about which packages the tidyverse package is loading along with it. It’s just R being informative, a message does not indicate anything is wrong (it’s not a warning or an error).\n\n\nThe tidyverse is a meta-package. When you load it you get nine packages loaded for you:\n\n\ndplyr: for data wrangling\n\nforcats: for dealing with factors\n\nggplot2: for data visualization\n\nlubridate: for dealing with dates\n\npurrr: for iteration with functional programming\n\nreadr: for reading and writing data\n\nstringr: for string manipulation\n\ntibble: for modern, tidy data frames\n\ntidyr: for data tidying and rectangling\n\nThe message that’s printed when you load the package tells you which versions of these packages are loaded as well as any conflicts they may have introduced, e.g., the filter() function from dplyr has now masked (overwritten) the filter() function available in base R (and that’s ok, we’ll use dplyr::filter() anyway).\nYou can now Render your template document and see the results.\n\nAs we’ve discussed in lecture, your plots should include an informative title, axes should be labeled, and careful consideration should be given to aesthetic choices.\nIn addition, the code should all the code should be be able to be read (not run off the page) when you render to PDF. Make sure that is the case, and add line breaks where the code is running off the page.1\nRemember that continuing to develop a sound workflow for reproducible data analysis is important as you complete the lab and other assignments in this course. There will be periodic reminders in this assignment to remind you to render, commit, and push your changes to GitHub. You should have at least 3 commits with meaningful commit messages by the end of the assignment."
  },
  {
    "objectID": "labs/lab-1.html#learning-objectives",
    "href": "labs/lab-1.html#learning-objectives",
    "title": "Lab 1 - Data visualization",
    "section": "",
    "text": "By the end of the lab, you will…\n\nBe familiar with the workflow using R, RStudio, Git, and GitHub\nGain practice writing a reproducible report using Quarto\nPractice version control using Git and GitHub\nBe able to create data visualizations using ggplot2"
  },
  {
    "objectID": "labs/lab-1.html#getting-started",
    "href": "labs/lab-1.html#getting-started",
    "title": "Lab 1 - Data visualization",
    "section": "",
    "text": "Go to https://cmgr.oit.duke.edu/containers and login with your Duke NetID and Password.\nClick STA198-199 under My reservations to log into your container. You should now see the RStudio environment.\n\n\nGo to the course organization at github.com/sta199-s24 organization on GitHub. Click on the repo with the prefix lab-1. It contains the starter documents you need to complete the lab.\nClick on the green CODE button, select Use SSH (this might already be selected by default, and if it is, you’ll see the text Clone with SSH). Click on the clipboard icon to copy the repo URL.\nIn RStudio, go to File ➛ New Project ➛Version Control ➛ Git.\nCopy and paste the URL of your assignment repo into the dialog box Repository URL. Again, please make sure to have SSH highlighted under Clone when you copy the address.\nClick Create Project, and the files from your GitHub repo will be displayed in the Files pane in RStudio.\nClick lab-1.qmd to open the template Quarto file. This is where you will write up your code and narrative for the lab.\n\nBelow are the components of the RStudio IDE.\n\nBelow are the components of a Quarto (.qmd) file.\n\n\nThe top portion of your R Markdown file (between the three dashed lines) is called YAML. It stands for “YAML Ain’t Markup Language”. It is a human friendly data representation for all programming languages. All you need to know is that this area is called the YAML (we will refer to it as such) and that it contains meta information about your document.\n\n\n\n\n\n\nImportant\n\n\n\nOpen the Quarto (.qmd) file in your project, change the author name to your name, and render the document. Examine the rendered document.\n\n\n\nNow, go to the Git pane in your RStudio instance. This will be in the top right hand corner in a separate tab.\nIf you have made changes to your Quarto (.qmd) file, you should see it listed here. Click on it to select it in this list and then click on Diff. This shows you the difference between the last committed state of the document and its current state including changes. You should see deletions in red and additions in green.\nIf you’re happy with these changes, we’ll prepare the changes to be pushed to your remote repository. First, stage your changes by checking the appropriate box on the files you want to prepare. Next, write a meaningful commit message (for instance, “updated author name”) in the Commit message box. Finally, click Commit. Note that every commit needs to have a commit message associated with it.\nYou don’t have to commit after every change, as this would get quite tedious. You should commit states that are meaningful to you for inspection, comparison, or restoration.\nIn the first few assignments we will tell you exactly when to commit and in some cases, what commit message to use. As the semester progresses we will let you make these decisions.\nNow let’s make sure all the changes went to GitHub. Go to your GitHub repo and refresh the page. You should see your commit message next to the updated files. If you see this, all your changes are on GitHub and you’re good to go!\n\nNow that you have made an update and committed this change, it’s time to push these changes to your repo on GitHub.\nIn order to push your changes to GitHub, you must have staged your commit to be pushed. click on Push."
  },
  {
    "objectID": "labs/lab-1.html#packages",
    "href": "labs/lab-1.html#packages",
    "title": "Lab 1 - Data visualization",
    "section": "",
    "text": "In this lab we will work with the tidyverse package, which is a collection of packages for doing data analysis in a “tidy” way.\n\nlibrary(tidyverse)\n\nRender the document which loads this package with the library() function.\n\n\n\n\n\n\nNote\n\n\n\nThe rendered document will include a message about which packages the tidyverse package is loading along with it. It’s just R being informative, a message does not indicate anything is wrong (it’s not a warning or an error).\n\n\nThe tidyverse is a meta-package. When you load it you get nine packages loaded for you:\n\n\ndplyr: for data wrangling\n\nforcats: for dealing with factors\n\nggplot2: for data visualization\n\nlubridate: for dealing with dates\n\npurrr: for iteration with functional programming\n\nreadr: for reading and writing data\n\nstringr: for string manipulation\n\ntibble: for modern, tidy data frames\n\ntidyr: for data tidying and rectangling\n\nThe message that’s printed when you load the package tells you which versions of these packages are loaded as well as any conflicts they may have introduced, e.g., the filter() function from dplyr has now masked (overwritten) the filter() function available in base R (and that’s ok, we’ll use dplyr::filter() anyway).\nYou can now Render your template document and see the results."
  },
  {
    "objectID": "labs/lab-1.html#guidelines",
    "href": "labs/lab-1.html#guidelines",
    "title": "Lab 1 - Data visualization",
    "section": "",
    "text": "As we’ve discussed in lecture, your plots should include an informative title, axes should be labeled, and careful consideration should be given to aesthetic choices.\nIn addition, the code should all the code should be be able to be read (not run off the page) when you render to PDF. Make sure that is the case, and add line breaks where the code is running off the page.1\nRemember that continuing to develop a sound workflow for reproducible data analysis is important as you complete the lab and other assignments in this course. There will be periodic reminders in this assignment to remind you to render, commit, and push your changes to GitHub. You should have at least 3 commits with meaningful commit messages by the end of the assignment."
  },
  {
    "objectID": "labs/lab-1.html#part-1",
    "href": "labs/lab-1.html#part-1",
    "title": "Lab 1 - Data visualization",
    "section": "Part 1",
    "text": "Part 1\nLet’s take a trip to the Midwest!\nWe will use the midwest data frame for this lab. It is part of the ggplot2 R package, so the midwest data set is automatically loaded when you load the tidyverse package.\nThe data contains demographic characteristics of counties in the Midwest region of the United States.\nBecause the data set is part of the ggplot2 package, you can read documentation for the data set, including variable definitions by typing ?midwest in the Console or searching for midwest in the Help pane.\nQuestion 1\nVisualize the distribution of population density of counties using a histogram with geom_histogram() with four separate binwidths: a binwidth of 100, a binwidth of 1,000, a binwidth of 10,000, and a binwidth of 100,000. For example, you can create the first plot with:\n\nggplot(midwest, aes(x = popdensity)) +\n  geom_histogram(binwidth = 100) +\n  labs(\n    x = \"Population density\",\n    y = \"Count\",\n    title = \"Population density of midwesten counties\",\n    subtitle = \"Binwidth = 100\"\n  )\n\nYou will need to make four different histograms. Make sure to set informative titles and axis labels for each of your plots. Then, comment on which binwidth is most appropriate for these data and why.\n\nRender, commit, and push your changes to GitHub with the commit message “Added answer for Question 1”.\nMake sure to commit and push all changed files so that your Git pane is empty afterward.\n\nQuestion 2\nVisualize the distribution of population density of counties again, this time using a boxplot with geom_boxplot(). Make sure to set informative titles and axis labels for your plot. Then, using information as needed from the box plot as well as the histogram from Question 1, describe the distribution of population density of counties and comment on any potential outliers, making sure to identify at least one county that is a clear outlier by name in your narrative and commenting on whether it makes sense to you that this county is an outlier. You can use the data viewer to identify the outliers interactively, you do not have to write code to identify them.\n\nRender, commit, and push your changes to GitHub with the commit message “Added answer for Question 2”.\nMake sure to commit and push all changed files so that your Git pane is empty afterward.\n\nQuestion 3\nCreate a scatterplot of the percentage below poverty (percbelowpoverty on the y-axis) versus percentage of people with a college degree (percollege on the x-axis), where the color and shape of points are determined by state. Make sure to set informative titles, axis, and legend labels for your plot. First, describe the overall relationship between percentage of people with a college degree and percentage below poverty in Midwestern states, making sure to identify at least one county that is a clear outlier by name in your narrative. You can use the data viewer to identify the outliers interactively, you do not have to write code to identify them. Then, comment on whether you can identify how this relationship varies across states.\n\nRender, commit, and push your changes to GitHub with the commit message “Added answer for Question 3”.\nMake sure to commit and push all changed files so that your Git pane is empty afterward.\n\nQuestion 4\nNow, let’s examine the relationship between the same two variables, once again using different colors and shapes to represent each state, and using a separate plot for each state, i.e., with faceting with facet_wrap(). In addition to points (geom_point()), represent the data with a smooth curve fit to the data with geom_smooth(), with the argument se = FALSE. Make sure to set informative titles, axis, and legend labels for your plot. Which plot do you prefer - this plot or the plot in Question 3? Briefly explain your choice.\n\n\n\n\n\n\nNote\n\n\n\nse = FALSE removes the confidence bands around the line. These bands show the uncertainty around the smooth curve. We’ll discuss uncertainty around estimates later in the course and bring these bands back then.\n\n\n\nRender, commit, and push your changes to GitHub with the commit message “Added answer for Question 4”.\nMake sure to commit and push all changed files so that your Git pane is empty afterward.\n\nQuestion 5\nDo some states have counties that tend to be geographically larger than others?\nTo explore this question, create side-by-side boxplots of area (area) of a county based on state (state). How do typical county area sizes compare across states? How do variabilities of county sizes compare across states? Which state has the single largest county? Identify the name of this county. You can use the data viewer to identify it interactively, you do not have to write code.\n\nNow is another good time to render, commit, and push your changes to GitHub with a meaningful commit message.\nOnce again, make sure to commit and push all changed files so that your Git pane is empty afterwards.\n\nQuestion 6\nDo some states have a higher percentage of their counties located in a metropolitan area?\nCreate a segmented bar chart with one bar per state and the bar filled with colors according to the value of metro – one color indicating Yes and the other color indicating No for whether a county is considered to be a metro area. The y-axis of the segmented barplot should range from 0 to 1, indicating proportions. Compare the percentage of counties in metro areas across the states based on this plot. Make sure to supplement your narrative with rough estimates of these percentages.\n\n\n\n\n\n\nHint\n\n\n\nFor this question, you should begin with the data wrangling pipeline below. We will learn more about data wrangling in the coming weeks, so this is a mini-preview. This pipeline creates a new variable called metro based on the value of the existing variable called inmetro. If the value of inmetro is equal to 1 (inmetro == 1), it sets the value of metro to \"Yes\", and if not, it sets the value of metro to \"No\". The resulting data frame is assigned back to midwest, overwriting the existing midwest data frame with a version that includes the new metro variable.\n\nmidwest &lt;- midwest |&gt;\n  mutate(metro = if_else(inmetro == 1, \"Yes\", \"No\"))\n\n\n\n\nNow is another good time to render, commit, and push your changes to GitHub with a meaningful commit message.\nAnd once again, make sure to commit and push all changed files so that your Git pane is empty afterward. We keep repeating this because it’s important and because we see students forget to do this. So take a moment to make sure you’re following along with the version control instructions.\n\nQuestion 7\nRecreate the plot below, and then give it a title. Then, identify at least one county that is a clear outlier in Wisconsin (WI) by name. You can use the data viewer to identify them interactively, you do not have to write code. Comment on the population composition of this county by investigating the percentage of other races living there.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nHint\n\n\n\n\n\nThe ggplot2 reference for themes will be helpful in determining the theme.\nThe size of the points is 2.\nThe transparency (alpha) of the points is 0.5.\nYou can put line breaks in labels with \\n.\n\n\n\n\nRender, commit, and push your final changes to GitHub with a meaningful commit message.\nMake sure to commit and push all changed files so that your Git pane is empty afterwards."
  },
  {
    "objectID": "labs/lab-1.html#part-2",
    "href": "labs/lab-1.html#part-2",
    "title": "Lab 1 - Data visualization",
    "section": "Part 2",
    "text": "Part 2\nEnough about the Midwest!\nIn this part we will use a new, more recent, and potentially more relevant dataset on counties in North Carolina.\nThis dataset is stored in a file called nc-county.csv in the data folder of your project/repository.\nYou can read this file into R with the following code:\n\nnc_county &lt;- read_csv(\"data/nc-county.csv\")\n\nThis will read the CSV (comma separated values) file from the data folder and store the dataset as a data frame called nc_county in R.\nThe variables in the dataset and their descriptions are as follows:\n\n\ncounty: Name of county.\n\nstate_abb: State abbreviation (NC).\n\nstate_name: State name (North Carolina).\n\nland_area_m2: Land area of county in meters-squared, based on the 2020 census.\n\nland_area_mi2: Land area of county in miles-squared, based on the 2020 census.\n\npopulation: Population of county, based on the 2020 census.\n\ndensity: Population density calculated as population divided by land area in miles-squared.\n\nIn addition to being more recent and more relevant, this dataset is also more complete in the sense that we know the units of population density: people per mile-squared!\nQuestion 8\nFirst, guess what the relationship between population density and land area might be – positive? negative? no relationship?\nThen, make a scatter plot of population density (density on the y-axis) vs. land area in miles-squared (land_area_mi2 on the x-axis). Make sure to set an informative title and axis labels for your plot. Describe the relationship. Was your guess correct?\nQuestion 9\nNow make a scatter plot of population density (density on the y-axis) vs. land area in meters-squared (land_area_m2 on the x-axis). Make sure to set an informative title and axis labels for your plot. Comment on how this scatterplot compares to the one in Exercise 8 — is the relationship displayed same or different. Explain why.\nQuestion 10\nDid you select your pages on Gradescope? You don’t need to write an answer for this question, if you select your pages when you upload your lab to Gradescope, you’ll get full points on this question. Otherwise, you’ll get a 0 on this question.2"
  },
  {
    "objectID": "labs/lab-1.html#submission",
    "href": "labs/lab-1.html#submission",
    "title": "Lab 1 - Data visualization",
    "section": "Submission",
    "text": "Submission\nOnce you are finished with the lab, you will submit your final PDF document to Gradescope.\n\n\n\n\n\n\nWarning\n\n\n\nBefore you wrap up the assignment, make sure all of your documents are updated on your GitHub repo. We will be checking these to make sure you have been practicing how to commit and push changes.\nYou must turn in a PDF file to the Gradescope page by the submission deadline to be considered “on time”.\n\n\nTo submit your assignment:\n\nGo to http://www.gradescope.com and click Log in in the top right corner.\nClick School Credentials \\(\\rightarrow\\) Duke NetID and log in using your NetID credentials.\nClick on your STA 199 course.\nClick on the assignment, and you’ll be prompted to submit it.\nMark all the pages associated with question. All the pages of your lab should be associated with at least one question (i.e., should be “checked”).\n\n\n\n\n\n\n\nChecklist\n\n\n\nMake sure you have:\n\nattempted all questions\nrendered your Quarto document\ncommitted and pushed everything to your GitHub repository such that the Git pane in RStudio is empty\nuploaded your PDF to Gradescope\nselected pages associated with each question on Gradescope"
  },
  {
    "objectID": "labs/lab-1.html#grading",
    "href": "labs/lab-1.html#grading",
    "title": "Lab 1 - Data visualization",
    "section": "Grading",
    "text": "Grading\nThe lab is graded out of a total of 50 points.\nOn Questions 1 through 9, you can earn up to 5 points on each question:\n\n5: Response shows excellent understanding and addresses all or almost all of the rubric items.\n4: Response shows good understanding and addresses most of the rubric items.\n3: Response shows understanding and addresses a majority of the rubric items.\n2: Response shows effort and misses many of the rubric items.\n1: Response does not show sufficient effort or understanding and/or is largely incomplete.\n0: No attempt.\n\nOn Question 10, you can earn either 0 or 5 points for selecting questions and pages on Gradescope:\n\n5: Selected questions and pages on Gradescope.\n0: Did not select some or all questions and pages on Gradescope."
  },
  {
    "objectID": "labs/lab-1.html#footnotes",
    "href": "labs/lab-1.html#footnotes",
    "title": "Lab 1 - Data visualization",
    "section": "Footnotes",
    "text": "Footnotes\n\nRemember, haikus not novellas when writing code!↩︎\nWe’re assigning points to this seemingly trivial task because not selecting your pages and questions will greatly slow down the grading. So we want to make sure you’re properly motivated to complete this task!↩︎"
  },
  {
    "objectID": "labs/lab-2.html",
    "href": "labs/lab-2.html",
    "title": "Lab 2 - Data wrangling",
    "section": "",
    "text": "In this lab you’ll continue to hone your data science workflow as well as bring together what you learned so far in the course (data visualization) with what’s coming up (data wrangling).\n\n\n\n\n\n\nNote\n\n\n\nThis lab assumes you’ve completed Lab 0 and Lab 1 and doesn’t repeat setup and overview content from those labs. If you have not yet done those, you should go back and review them before starting with this one.\n\n\n\nBy the end of the lab, you will…\n\nBe able to create transform data using dplyr\n\nBuild on your mastery of data visualizations using ggplot2\n\nGet more experience with data science workflow using R, RStudio, Git, and GitHub\nFurther your reproducible authoring skills with Quarto\nImprove your familiarity with version control using Git and GitHub\n\n\n\nGo to https://cmgr.oit.duke.edu/containers and log in with your Duke NetID and Password.\nClick STA198-199 under My reservations to log into your container. You should now see the RStudio environment.\n\n\nGo to the course organization at github.com/sta199-s24 organization on GitHub. Click on the repo with the prefix lab-2. It contains the starter documents you need to complete the lab.\nClick on the green CODE button, select Use SSH (this might already be selected by default, and if it is, you’ll see the text Clone with SSH). Click on the clipboard icon to copy the repo URL.\nIn RStudio, go to File ➛ New Project ➛Version Control ➛ Git.\nCopy and paste the URL of your assignment repo into the dialog box Repository URL. Again, please make sure to have SSH highlighted under Clone when you copy the address.\nClick Create Project, and the files from your GitHub repo will be displayed in the Files pane in RStudio.\nClick lab-2.qmd to open the template Quarto file. This is where you will write up your code and narrative for the lab.\n\nIn lab-2.qmd, update the author field to your name, render your document and examine the changes. Then, in the Git pane, click on Diff to view your changes, add a commit message (e.g., “Added author name”), and click Commit. Then, push the changes to your GitHub repository, and in your browser confirm that these changes have indeed propagated to your repository.\n\n\n\n\n\n\nImportant\n\n\n\nIf you run into any issues with the first steps outlined above, flag a TA for help before proceeding.\n\n\n\nIn this lab we will work with the tidyverse package, which is a collection of packages for doing data analysis in a “tidy” way.\n\nlibrary(tidyverse)\n\nRender the document which loads this package with the library() function.\n\n\n\n\n\n\nNote\n\n\n\nRemember: The rendered document will include a message about which packages the tidyverse package is loading along with it. It’s just R being informative, a message does not indicate anything is wrong (it’s not a warning or an error).\n\n\n\nAs we’ve discussed in lecture, your plots should include an informative title, axes should be labeled, and careful consideration should be given to aesthetic choices.\nIn addition, the code should all the code should be be able to be read (not run off the page) when you render to PDF. Make sure that is the case, and add line breaks where the code is running off the page.1\n\n\n\n\n\n\nNote\n\n\n\nContinuing to develop a sound workflow for reproducible data analysis is important as you complete the lab and other assignments in this course. There will be periodic reminders in this assignment to remind you to render, commit, and push your changes to GitHub. You should have at least 3 commits with meaningful commit messages by the end of the assignment."
  },
  {
    "objectID": "labs/lab-2.html#learning-objectives",
    "href": "labs/lab-2.html#learning-objectives",
    "title": "Lab 2 - Data wrangling",
    "section": "",
    "text": "By the end of the lab, you will…\n\nBe able to create transform data using dplyr\n\nBuild on your mastery of data visualizations using ggplot2\n\nGet more experience with data science workflow using R, RStudio, Git, and GitHub\nFurther your reproducible authoring skills with Quarto\nImprove your familiarity with version control using Git and GitHub"
  },
  {
    "objectID": "labs/lab-2.html#getting-started",
    "href": "labs/lab-2.html#getting-started",
    "title": "Lab 2 - Data wrangling",
    "section": "",
    "text": "Go to https://cmgr.oit.duke.edu/containers and log in with your Duke NetID and Password.\nClick STA198-199 under My reservations to log into your container. You should now see the RStudio environment.\n\n\nGo to the course organization at github.com/sta199-s24 organization on GitHub. Click on the repo with the prefix lab-2. It contains the starter documents you need to complete the lab.\nClick on the green CODE button, select Use SSH (this might already be selected by default, and if it is, you’ll see the text Clone with SSH). Click on the clipboard icon to copy the repo URL.\nIn RStudio, go to File ➛ New Project ➛Version Control ➛ Git.\nCopy and paste the URL of your assignment repo into the dialog box Repository URL. Again, please make sure to have SSH highlighted under Clone when you copy the address.\nClick Create Project, and the files from your GitHub repo will be displayed in the Files pane in RStudio.\nClick lab-2.qmd to open the template Quarto file. This is where you will write up your code and narrative for the lab.\n\nIn lab-2.qmd, update the author field to your name, render your document and examine the changes. Then, in the Git pane, click on Diff to view your changes, add a commit message (e.g., “Added author name”), and click Commit. Then, push the changes to your GitHub repository, and in your browser confirm that these changes have indeed propagated to your repository.\n\n\n\n\n\n\nImportant\n\n\n\nIf you run into any issues with the first steps outlined above, flag a TA for help before proceeding."
  },
  {
    "objectID": "labs/lab-2.html#packages",
    "href": "labs/lab-2.html#packages",
    "title": "Lab 2 - Data wrangling",
    "section": "",
    "text": "In this lab we will work with the tidyverse package, which is a collection of packages for doing data analysis in a “tidy” way.\n\nlibrary(tidyverse)\n\nRender the document which loads this package with the library() function.\n\n\n\n\n\n\nNote\n\n\n\nRemember: The rendered document will include a message about which packages the tidyverse package is loading along with it. It’s just R being informative, a message does not indicate anything is wrong (it’s not a warning or an error)."
  },
  {
    "objectID": "labs/lab-2.html#guidelines",
    "href": "labs/lab-2.html#guidelines",
    "title": "Lab 2 - Data wrangling",
    "section": "",
    "text": "As we’ve discussed in lecture, your plots should include an informative title, axes should be labeled, and careful consideration should be given to aesthetic choices.\nIn addition, the code should all the code should be be able to be read (not run off the page) when you render to PDF. Make sure that is the case, and add line breaks where the code is running off the page.1\n\n\n\n\n\n\nNote\n\n\n\nContinuing to develop a sound workflow for reproducible data analysis is important as you complete the lab and other assignments in this course. There will be periodic reminders in this assignment to remind you to render, commit, and push your changes to GitHub. You should have at least 3 commits with meaningful commit messages by the end of the assignment."
  },
  {
    "objectID": "labs/lab-2.html#part-1",
    "href": "labs/lab-2.html#part-1",
    "title": "Lab 2 - Data wrangling",
    "section": "Part 1",
    "text": "Part 1\nBack to the Midwest!\nIn this part you will revisit and build on some of your findings from Lab 1, where you explored the midwest data frame. Remember that this data frame is bundled with the ggplot2 package and is automatically loaded when you load the tidyverse package. As a refresher, the data contains demographic characteristics of counties in the Midwest region of the United States. You can read documentation for the data set, including variable definitions by typing ?midwest in the Console or searching for midwest in the Help pane.\nQuestion 1\nCalculate the number of counties in each state and display your results in descending order of number of counties. Which state has the highest number of counties, and how many? Which state has the lowest number, and how many?\n\n\n\n\n\n\nNote\n\n\n\nThe number of counties in a state can change over time, so the values you see in this output may not be true today.\n\n\n\nRender, commit, and push your changes to GitHub with the commit message “Added answer for Question 1”.\nMake sure to commit and push all changed files so that your Git pane is empty afterward.\n\nQuestion 2\nWhile in a given state two counties can’t have the same name, across states some county names might be shared. A classmate says “Look at that, there is a county called ___ in each state in this dataset!” In a single pipeline, discover all counties that could fill in the blank. Your response should be a data frame with only the county names that could fill in the blank and how many times they appear in the data.\n\n\n\n\n\n\nTip\n\n\n\nYou will want to use the filter() function in your answer, which requires a logical condition to describe what you want to filter for. For example filter(x &gt; 2) means filter for values of x greater than 2, filter(y &lt;= 3) means filter for values of y less than or equal to 3.\nThe table below is a summary of logical operators and how to articulate them in R.\n\n\noperator\ndefinition\n\n\n\n&lt;\nless than\n\n\n&lt;=\nless than or equal to\n\n\n&gt;\ngreater than\n\n\n&gt;=\ngreater than or equal to\n\n\n==\nexactly equal to\n\n\n!=\nnot equal to\n\n\nx & y\n\nx AND y\n\n\n\n\nx | y\n\n\nx OR y\n\n\n\nis.na(x)\ntest if x is NA\n\n\n\n!is.na(x)\ntest if x is not NA\n\n\n\nx %in% y\ntest if x is in y\n\n\n\n!(x %in% y)\ntest if x is not in y\n\n\n\n!x\nnot x\n\n\n\n\n\n\n\nRender, commit, and push your changes to GitHub with the commit message “Added answer for Question 2”.\nMake sure to commit and push all changed files so that your Git pane is empty afterward.\n\nQuestion 3\nReturn to the following box plot of population densities where you were asked to identify at least one outlier.\n\n\n\n\n\n\n\n\nIn this question part, we want you to revisit this box plot and identify the counties described in each part.\na. The counties with a population density higher than 25,000. Your code must use the filter() function.\nb. The county with the highest population density. Your code must use the max() function.\nAnswer using a single data wrangling pipeline for each part. Your response should be a data frame five columns: county name, state name, population density, total population, and area, in this order. If your response has multiple rows, the data frame should be arranged in descending order of population density.\n\nRender, commit, and push your changes to GitHub with the commit message “Added answer for Question 3”.\nMake sure to commit and push all changed files so that your Git pane is empty afterward.\n\nQuestion 4\nIn Lab 1 you were also asked to describe the distribution of population densities. The following is one acceptable description that touches on shape, center, and spread of this distribution. Calculate the values that should go into the blanks.\n\nThe distribution of population density of counties is unimodal and extremely right-skewed. A typical Midwestern county has population density of ____ people per unit area. The middle 50% of the counties have population densities between ___ to ___ people per unit area.\n\n\n\n\n\n\n\nTip\n\n\n\nThink about which measures of center and spread are appropriate for skewed distributions.\n\n\n\nRender, commit, and push your changes to GitHub with the commit message “Added answer for Question 4”.\nMake sure to commit and push all changed files so that your Git pane is empty afterward.\n\nQuestion 5\nAnother visualization from Lab 1 was the following that showed the proportion of urban counties in each state.\n\n\n\n\n\n\n\n\nCalculate these proportions in a single data pipeline.\n\n\n\n\n\n\nTip\n\n\n\nRemember, you’ll first need to create a new variable called metro which takes on the value Yes if the value of inmetro is 1, and No otherwise. You can refer to Lab 1 if you need a refresher on how to do this.\n\n\n\nRender, commit, and push your changes to GitHub with the commit message “Added answer for Question 5”.\nMake sure to commit and push all changed files so that your Git pane is empty afterward.\n\nQuestion 6\nReturn to the following scatter plot of percentage below poverty vs. percentage of people with a college degree, where the color and shape of points are determined by state where you were asked to identify at least one county that is a clear outlier by name.\n\n\n\n\n\n\n\n\na. In a single pipeline, identify the observations marked in the orange square on the upper left corner. Your answer should be a data frame with four variables: county, state, percentage below poverty, and percentage college educated.\nb. In a single pipeline, identify the observations marked in the red square in the plot above. Your answer should again be a data frame with four variables: county, state, percentage below poverty, and percentage college educated.\nc. Bring your answers from part (a) and part (b) together! In a single pipeline, and a single filter() statement, identify the observations marked in the red and orange square in the plot above. Your answer should again be a data frame with four variables: county, state, percentage below poverty, and percentage college educated.\nd. Create a new variable in midwest called potential_outlier. This variable should take on the value:\n\nYes if the point is one the ones you identified in part (c), i.e., one of the points marked in the squares in the plot above.\nNo otherwise.\n\nThen, display the updated midwest data frame, with county, state, percentage below poverty, percentage college educated, potential_outlier as the selected variables, arranged in ascending order of potential_outlier.\nc. Recreate the visualization above, i.e. a scatterplot of percentage below poverty vs. percentage of people with a college degree, however color the points by the newly created potential_outlier variable instead of state.\n\nRender, commit, and push your changes to GitHub with the commit message “Added answer for Question 6”.\nMake sure to commit and push all changed files so that your Git pane is empty afterward.\n\nQuestion 7\na. In a single pipeline, calculate the total population for each state and save the resulting data frame as state_population and display it in descending order of total population.\nb. Then, in a separate pipeline, calculate the proportion of the total population in each state and, once again, display the results in descending order of proportion of population.\n\n\n\n\n\n\nTip\n\n\n\nIn answering parts (a) and (b), you’ll create two new variables, one for total population and other for proportion of total proportion. Make sure to give them “reasonable” names – short but evocative.\n\n\nc. Which Midwestern state is most populous and what percent of the Midwest population lives there? Which is the least populous and what percent lives there?\n\nRender, commit, and push your changes to GitHub with the commit message “Added answer for Question 7”.\nMake sure to commit and push all changed files so that your Git pane is empty afterward.\n\nQuestion 8\nCalculate the average percentage below poverty for each state and save the resulting data frame as state_poverty with the columns state and mean_percbelowpoverty.\nThen, in a new pipeline, display the state_poverty data frame in ascending order of mean_percbelowpoverty. Which state has the lowest average percentage below poverty across its counties? Which state has the highest average percentage below poverty across its counties?\n\nRender, commit, and push your changes to GitHub with the commit message “Added answer for Question 8”.\nMake sure to commit and push all changed files so that your Git pane is empty afterward."
  },
  {
    "objectID": "labs/lab-2.html#part-2",
    "href": "labs/lab-2.html#part-2",
    "title": "Lab 2 - Data wrangling",
    "section": "Part 2",
    "text": "Part 2\nAll about group_by()!\nQuestion 9\nSuppose we have the following data frame:\n\ndf &lt;- tibble(\n  var_1 = c(10, 20, 30, 40, 50),\n  var_2 = c(\"Pizza\", \"Burger\", \"Pizza\", \"Pizza\", \"Burger\"),\n  var_3 = c(\"Apple\", \"Apple\", \"Pear\", \"Pear\", \"Banana\")\n)\n\ndf\n\n# A tibble: 5 × 3\n  var_1 var_2  var_3 \n  &lt;dbl&gt; &lt;chr&gt;  &lt;chr&gt; \n1    10 Pizza  Apple \n2    20 Burger Apple \n3    30 Pizza  Pear  \n4    40 Pizza  Pear  \n5    50 Burger Banana\n\n\na. What does the following code chunk do? Run it and analyze the result and articulate in words what arrange() does.\n\ndf |&gt;\n  arrange(var_2)\n\nb. What does the following code chunk do? Run it and analyze the result and articulate in words what group_by() does. Also comment on how it’s different from the arrange() in part (a)?\n\ndf |&gt;\n  group_by(var_2)\n\nc. What does the following code chunk do? Run it and analyze the result and articulate in words what the pipeline does.\n\ndf |&gt;\n  group_by(var_2) |&gt;\n  summarize(mean_var_1 = mean(var_1))\n\nd. What does the following code chunk do? Run it and analyze the result and articulate in words what the pipeline does. Then, comment on what the message says.\n\ndf |&gt;\n  group_by(var_2, var_3) |&gt;\n  summarize(mean_var_1 = mean(var_1))\n\ne. What does the following code chunk do? Run it and analyze the result and articulate in words what the pipeline does, especially mentioning what the .groups argument does. How is the output different from the one in part (d).\n\ndf |&gt;\n  group_by(var_2, var_3) |&gt;\n  summarize(mean_var_1 = mean(var_1), .groups = \"drop\")\n\nf. What do the following pipelines do? Run both and analyze their results and articulate in words what each pipeline does. How are the outputs of the two pipelines different?\n\ndf |&gt;\n  group_by(var_2, var_3) |&gt;\n  summarize(mean_var_1 = mean(var_1), .groups = \"drop\")\n\ndf |&gt;\n  group_by(var_2, var_3) |&gt;\n  mutate(mean_var_1 = mean(var_1))\n\n\nRender, commit, and push your changes to GitHub with an appropriate commit message.\nMake sure to commit and push all changed files so that your Git pane is empty afterward.\n\nQuestion 10\nDid you select your pages on Gradescope? You don’t need to write an answer for this question, if you select your pages when you upload your lab to Gradescope, you’ll get full points on this question. Otherwise, you’ll get a 0 on this question.2"
  },
  {
    "objectID": "labs/lab-2.html#submission",
    "href": "labs/lab-2.html#submission",
    "title": "Lab 2 - Data wrangling",
    "section": "Submission",
    "text": "Submission\nOnce you are finished with the lab, you will submit your final PDF document to Gradescope.\n\n\n\n\n\n\nWarning\n\n\n\nBefore you wrap up the assignment, make sure all of your documents are updated on your GitHub repo. We will be checking these to make sure you have been practicing how to commit and push changes.\nYou must turn in a PDF file to the Gradescope page by the submission deadline to be considered “on time”.\n\n\nTo submit your assignment:\n\nGo to http://www.gradescope.com and click Log in in the top right corner.\nClick School Credentials \\(\\rightarrow\\) Duke NetID and log in using your NetID credentials.\nClick on your STA 199 course.\nClick on the assignment, and you’ll be prompted to submit it.\nMark all the pages associated with question. All the pages of your lab should be associated with at least one question (i.e., should be “checked”).\n\n\n\n\n\n\n\nChecklist\n\n\n\nMake sure you have:\n\nattempted all questions\nrendered your Quarto document\ncommitted and pushed everything to your GitHub repository such that the Git pane in RStudio is empty\nuploaded your PDF to Gradescope\nselected pages associated with each question on Gradescope"
  },
  {
    "objectID": "labs/lab-2.html#grading",
    "href": "labs/lab-2.html#grading",
    "title": "Lab 2 - Data wrangling",
    "section": "Grading",
    "text": "Grading\nThe lab is graded out of a total of 50 points.\nOn Questions 1 through 9, you can earn up to 5 points on each question:\n\n5: Response shows excellent understanding and addresses all or almost all of the rubric items.\n4: Response shows good understanding and addresses most of the rubric items.\n3: Response shows understanding and addresses a majority of the rubric items.\n2: Response shows effort and misses many of the rubric items.\n1: Response does not show sufficient effort or understanding and/or is largely incomplete.\n0: No attempt.\n\nOn Question 10, you can earn either 0 or 5 points for selecting questions and pages on Gradescope:\n\n5: Selected questions and pages on Gradescope.\n0: Did not select some or all questions and pages on Gradescope."
  },
  {
    "objectID": "labs/lab-2.html#footnotes",
    "href": "labs/lab-2.html#footnotes",
    "title": "Lab 2 - Data wrangling",
    "section": "Footnotes",
    "text": "Footnotes\n\nRemember, haikus not novellas when writing code!↩︎\nWe’re assigning points to this seemingly trivial task because not selecting your pages and questions will greatly slow down the grading. So we want to make sure you’re properly motivated to complete this task!↩︎"
  },
  {
    "objectID": "labs/lab-3.html",
    "href": "labs/lab-3.html",
    "title": "Lab 3 - Data tidying and joining",
    "section": "",
    "text": "In this lab you’ll build the data wrangling and visualization skills you’ve developed so far and data tidying and joining to your repertoire.\n\n\n\n\n\n\nNote\n\n\n\nThis lab assumes you’ve completed the labs so far and doesn’t repeat setup and overview content from those labs. If you have not yet done those, you should go back and review the previous labs before starting on this one.\n\n\n\nBy the end of the lab, you will…\n\nBe able to pivot/reshape data using tidyr\n\nContinue developing your data wrangling skills using dplyr\n\nBuild on your mastery of data visualizations using ggplot2\n\nGet more experience with data science workflow using R, RStudio, Git, and GitHub\nFurther your reproducible authoring skills with Quarto\nImprove your familiarity with version control using Git and GitHub\n\nLog in to RStudio, clone your lab-3 repo from GitHub, open your lab-3.qmd document, and get started!\n\n\n\n\n\n\nClick here if you prefer to see step-by-step instructions\n\n\n\n\n\n\n\nGo to https://cmgr.oit.duke.edu/containers and log in with your Duke NetID and Password.\nClick STA198-199 under My reservations to log into your container. You should now see the RStudio environment.\n\n\nGo to the course organization at github.com/sta199-s24 organization on GitHub. Click on the repo with the prefix lab-3. It contains the starter documents you need to complete the lab.\nClick on the green CODE button, select Use SSH (this might already be selected by default, and if it is, you’ll see the text Clone with SSH). Click on the clipboard icon to copy the repo URL.\nIn RStudio, go to File ➛ New Project ➛Version Control ➛ Git.\nCopy and paste the URL of your assignment repo into the dialog box Repository URL. Again, please make sure to have SSH highlighted under Clone when you copy the address.\nClick Create Project, and the files from your GitHub repo will be displayed in the Files pane in RStudio.\nClick lab-3.qmd to open the template Quarto file. This is where you will write up your code and narrative for the lab.\n\nIn lab-3.qmd, update the author field to your name, render your document and examine the changes. Then, in the Git pane, click on Diff to view your changes, add a commit message (e.g., “Added author name”), and click Commit. Then, push the changes to your GitHub repository, and in your browser confirm that these changes have indeed propagated to your repository.\n\n\n\n\n\n\n\n\n\n\nImportant\n\n\n\nIf you run into any issues with the first steps outlined above, flag a TA for help before proceeding.\n\n\n\nIn this lab we will work with the tidyverse package, which is a collection of packages for doing data analysis in a “tidy” way.\n\nlibrary(tidyverse)\n\nRender the document which loads this package with the library() function.\n\nAs we’ve discussed in lecture, your plots should include an informative title, axes should be labeled, and careful consideration should be given to aesthetic choices.\nIn addition, the code should all the code should be be able to be read (not run off the page) when you render to PDF. Make sure that is the case, and add line breaks where the code is running off the page.1\n\n\n\n\n\n\nNote\n\n\n\nContinuing to develop a sound workflow for reproducible data analysis is important as you complete the lab and other assignments in this course. There will be periodic reminders in this assignment to remind you to render, commit, and push your changes to GitHub. You should have at least 3 commits with meaningful commit messages by the end of the assignment."
  },
  {
    "objectID": "labs/lab-3.html#learning-objectives",
    "href": "labs/lab-3.html#learning-objectives",
    "title": "Lab 3 - Data tidying and joining",
    "section": "",
    "text": "By the end of the lab, you will…\n\nBe able to pivot/reshape data using tidyr\n\nContinue developing your data wrangling skills using dplyr\n\nBuild on your mastery of data visualizations using ggplot2\n\nGet more experience with data science workflow using R, RStudio, Git, and GitHub\nFurther your reproducible authoring skills with Quarto\nImprove your familiarity with version control using Git and GitHub"
  },
  {
    "objectID": "labs/lab-3.html#getting-started",
    "href": "labs/lab-3.html#getting-started",
    "title": "Lab 3 - Data tidying and joining",
    "section": "",
    "text": "Log in to RStudio, clone your lab-3 repo from GitHub, open your lab-3.qmd document, and get started!\n\n\n\n\n\n\nClick here if you prefer to see step-by-step instructions\n\n\n\n\n\n\n\nGo to https://cmgr.oit.duke.edu/containers and log in with your Duke NetID and Password.\nClick STA198-199 under My reservations to log into your container. You should now see the RStudio environment.\n\n\nGo to the course organization at github.com/sta199-s24 organization on GitHub. Click on the repo with the prefix lab-3. It contains the starter documents you need to complete the lab.\nClick on the green CODE button, select Use SSH (this might already be selected by default, and if it is, you’ll see the text Clone with SSH). Click on the clipboard icon to copy the repo URL.\nIn RStudio, go to File ➛ New Project ➛Version Control ➛ Git.\nCopy and paste the URL of your assignment repo into the dialog box Repository URL. Again, please make sure to have SSH highlighted under Clone when you copy the address.\nClick Create Project, and the files from your GitHub repo will be displayed in the Files pane in RStudio.\nClick lab-3.qmd to open the template Quarto file. This is where you will write up your code and narrative for the lab.\n\nIn lab-3.qmd, update the author field to your name, render your document and examine the changes. Then, in the Git pane, click on Diff to view your changes, add a commit message (e.g., “Added author name”), and click Commit. Then, push the changes to your GitHub repository, and in your browser confirm that these changes have indeed propagated to your repository.\n\n\n\n\n\n\n\n\n\n\nImportant\n\n\n\nIf you run into any issues with the first steps outlined above, flag a TA for help before proceeding."
  },
  {
    "objectID": "labs/lab-3.html#packages",
    "href": "labs/lab-3.html#packages",
    "title": "Lab 3 - Data tidying and joining",
    "section": "",
    "text": "In this lab we will work with the tidyverse package, which is a collection of packages for doing data analysis in a “tidy” way.\n\nlibrary(tidyverse)\n\nRender the document which loads this package with the library() function."
  },
  {
    "objectID": "labs/lab-3.html#guidelines",
    "href": "labs/lab-3.html#guidelines",
    "title": "Lab 3 - Data tidying and joining",
    "section": "",
    "text": "As we’ve discussed in lecture, your plots should include an informative title, axes should be labeled, and careful consideration should be given to aesthetic choices.\nIn addition, the code should all the code should be be able to be read (not run off the page) when you render to PDF. Make sure that is the case, and add line breaks where the code is running off the page.1\n\n\n\n\n\n\nNote\n\n\n\nContinuing to develop a sound workflow for reproducible data analysis is important as you complete the lab and other assignments in this course. There will be periodic reminders in this assignment to remind you to render, commit, and push your changes to GitHub. You should have at least 3 commits with meaningful commit messages by the end of the assignment."
  },
  {
    "objectID": "labs/lab-3.html#part-1",
    "href": "labs/lab-3.html#part-1",
    "title": "Lab 3 - Data tidying and joining",
    "section": "Part 1",
    "text": "Part 1\nInflation across the world\nFor this part of the analysis you will work with inflation data from various countries in the world over the last 30 years.\n\ncountry_inflation &lt;- read_csv(\"data/country-inflation.csv\")\n\nQuestion 1\nGet to know the data.\n\nglimpse() at the country_inflation data frame and answer the following questions based on the output. How many rows does country_inflation have and what does each row represent? How many columns does country_inflation have and what does each column represent?\nDisplay a list of the countries included in the dataset.\n\n\n\n\n\n\n\nTip\n\n\n\nA function that can be useful for part (b) is pull(). Check out its documentation for examples of usage.\n\n\nQuestion 2\nWhich countries had the top three highest inflation rates in 2021? Your output should be a data frame with two columns, country and 2021, with inflation rates in descending order, and three rows for the top three countries. Briefly comment on how the inflation rates for these countries compare to the inflation rate for United States in that year.\n\n\n\n\n\n\nTip\n\n\n\nColumn names that are numbers are not considered “proper” in R, therefore to select them you’ll need to surround them with backticks, e.g. select( ` 1993 ` ).\n\n\nQuestion 3\nIn a single pipeline,\n\ncalculate the ratio of the inflation in 2021 and inflation in 1993 for each country and store this information in a new column called inf_ratio,\narrange the data frame in decreasing order of inf_ratio, and\nselect the variables country and inf_ratio to display as the result of the pipeline.\n\nDo not save this new variable in inf_ratio, only calculate and display it so you can answer the following question based on the output of the pipeline.\nWhich country’s inflation change is the largest over this time period? Did inflation increase of decrease between 1993 and 2021 in this country?\n\n\n\n\n\n\nTip\n\n\n\nFor this question you’ll once again need to use variables whose names are numbers (years) in your pipeline. Make sure to surround the names of such variables with backticks (`).\n\n\nQuestion 4\nReshape (pivot) country_inflation such that each row represents a country/year combination, with columns country, year, and annual_inflation. Then, display the resulting data frame and state how many rows and columns it has.\nRequirements:\n\nYour code must use one of pivot_longer() or pivot_wider(). There are other ways you can do this reshaping move in R, but this question requires solving this problem by pivoting.\nIn your pivot_*() function, you must use names_transform = as.numeric as an argument to transform the variable type to numeric as you pivot the data so that in the resulting data frame the year variable is numeric.\nThe resulting data frame must be saved as something other than country_inflation so you (1) can refer to this data frame later in your analysis and (2) do not overwrite country_inflation. Use a short but informative name.\n\n\n\n\n\n\n\nImportant\n\n\n\nThe remaining questions in Part 1 require the use of the pivoted data frame from Question 4.\n\n\nQuestion 5\nUse a separate, single pipeline to answer each of the following questions.\nRequirement: Your code must use the filter() function for each part, not arrange().\n\nWhat is the highest inflation rate observed between 1993 and 2021? The output of the pipeline should be a data frame with one row and three columns. In addition to code and output, your response should include a single sentence stating the country and year.\nWhat is the lowest inflation rate observed between 1993 and 2021? The output of the pipeline should be a data frame with one row and three columns. In addition to code and output, your response should include a single sentence stating the country and year.\nPutting (a) and (b) together: What are the highest and the lowest inflation rates observed between 1993 and 2021? The output of the pipeline should be a data frame with two rows and three columns.\nQuestion 6\na. Create a vector called countries_of_interest which contains the names of up tp five countries you want to visualize the inflation rates for over the years. For example, if these countries are Türkiye and United States, you can express this as follows:\n\ncountries_of_interest &lt;- c(\"Türkiye\", \"United States\")\n\nIf they are Türkiye, United States, and China, you can express this as follows:\n\ncountries_of_interest &lt;- c(\n  \"Türkiye\", \"United States\", \"China (People's Republic of)\"\n)\n\nSo on and so forth… Then, in 1-2 sentences, state why you chose these countries.\n\n\n\n\n\n\nNote\n\n\n\nYour countries_of_interest should consist of no more than five countries. Make sure that the spelling of your countries matches how they appear in the dataset.\n\n\nb. In a single pipeline, filter your reshaped dataset to include only the countries_of_interest from part (a), and save the resulting data frame with a new name so you (1) can refer to this data frame later in your analysis and (2) do not overwrite the data frame you’re starting with. Use a short but informative name. Then, in a new pipeline, find the distinct() countries in the data frame you created.\n\n\n\n\n\n\nTip\n\n\n\nThe number of distinct countries in the filtered data frame you created in part (b) should equal the number of countries you chose in part (a). If it doesn’t, you might have misspelled a country name or made a mistake in how to filter for these countries. Go back and check your code.\n\n\nQuestion 7\nUsing your data frame from the previous question, create a plot of annual inflation vs. year for these countries. Then, in a few sentences, describe the patterns you observe in the plot, particularly focusing on anything you find surprising or not surprising, based on your knowledge (or lack thereof) of these countries economies.\nRequirements for the plot:\n\nData should be represented with points as well as lines connecting the points for each country.\nEach country should be represented by a different color line and different color and shape points.\nAxes and legend should be properly labeled.\nThe plot should have an appropriate title (and optionally a subtitle).\nPlot should be customized in at least one way – you could use a different than default color scale, or different than default theme, or some other customization.\n\n\nIf you haven’t yet done so, now is a good time to render, commit, and push. Make sure that you commit and push all changed documents and your Git pane is completely empty before proceeding."
  },
  {
    "objectID": "labs/lab-3.html#part-2",
    "href": "labs/lab-3.html#part-2",
    "title": "Lab 3 - Data tidying and joining",
    "section": "Part 2",
    "text": "Part 2\nInflation in the US\nThe OECD defines inflation as follows:\n\nInflation is a rise in the general level of prices of goods and services that households acquire for the purpose of consumption in an economy over a period of time.\nThe main measure of inflation is the annual inflation rate which is the movement of the Consumer Price Index (CPI) from one month/period to the same month/period of the previous year expressed as percentage over time.\nSource: OECD CPI FAQ\n\nCPI is broken down into 12 divisions such as food, housing, health, etc. Your goal in this part is to create another time series plot of annual inflation, this time for US only.\nThe data you will need to create this visualization is spread across two files:\n\n\nus-inflation.csv: Annual inflation rate for the US for 12 CPI divisions. Each division is identified by an ID number.\n\ncpi-divisions.csv: A “lookup table” of CPI division ID numbers and their descriptions.\n\nLet’s load both of these files.\n\nus_inflation &lt;- read_csv(\"data/us-inflation.csv\")\ncpi_divisions &lt;- read_csv(\"data/cpi-divisions.csv\")\n\nQuestion 8\na. How many columns and how many rows does the us_inflation dataset have? What are the variables in it? Add a brief (1-2 sentences) narrative summarizing this information.\nb. How many columns and how many rows does the cpi_divisions dataset have? What are the variables in it? Add a brief (1-2 sentences) narrative summarizing this information.\nc. Create a new dataset by joining the us_inflation dataset with the cpi_division_id dataset.\n\nDetermine which type of join is the most appropriate one and use that.\nNote that the two datasets don’t have a common variable. Review the help for the join functions to determine how to use the by argument when the names of the variables that the datasets should be joined by are different.\nUse a short but informative name for the joined dataset, and do not overwrite either of the datasets that go into creating it.\n\nThen, find the number of rows and columns of the resulting dataset and report the names of its columns. Add a brief (1-2 sentences) narrative summarizing this information.\nQuestion 9\na. Create a vector called divisions_of_interest which contains the descriptions or IDs of CPI divisions you want to visualize. Your divisions_of_interest should consist of no more than five divisions. If you’re using descriptions, make sure that the spelling of your divisions matches how they appear in the dataset. Then, in 1-2 sentences, state why you chose these divisions.\n\n\n\n\n\n\nTip\n\n\n\nRefer back to the guidance provided in Question 6 if you’re not sure how to create this vector.\n\n\nb. In a single pipeline, filter your reshaped dataset to include only the divisions_of_interest from part (a), and save the resulting data frame with a new name so you (1) can refer to this data frame later in your analysis and (2) do not overwrite the data frame you’re starting with. Use a short but informative name. Then, in a new pipeline, find the distinct() divisions in the data frame you created.\nQuestion 10\nUsing your data frame from the previous question, create a plot of annual inflation vs. year for these divisions. Then, in a few sentences, describe the patterns you observe in the plot, particularly focusing on anything you find surprising or not surprising, based on your knowledge (or lack thereof) of inflation rates in the US over the last decade.\n\nData should be represented with points as well as lines connecting the points for each division.\nEach division should be represented by a different color line and different color and shape points.\nAxes and legend should be properly labeled.\nThe plot should have an appropriate title (and optionally a subtitle).\nPlot should be customized in at least one way – you could use a different than default color scale, or different than default theme, or some other customization.\nIf your legend has labels that are too long, you can try moving the legend to the bottom and stack the labels vertically. Hint: The legend.position and legend.direction arguments of the theme() functions will be useful.\n\n\nggplot(...) +\n  ... +\n  theme(\n    legend.position = \"bottom\", \n    legend.direction = \"vertical\"\n  )\n\n\nIf you haven’t yet done so since Part 1, now is a good time to render, commit, and push. Make sure that you commit and push all changed documents and your Git pane is completely empty before proceeding."
  },
  {
    "objectID": "labs/lab-3.html#submission",
    "href": "labs/lab-3.html#submission",
    "title": "Lab 3 - Data tidying and joining",
    "section": "Submission",
    "text": "Submission\nOnce you are finished with the lab, you will submit your final PDF document to Gradescope.\n\n\n\n\n\n\nWarning\n\n\n\nBefore you wrap up the assignment, make sure all of your documents are updated on your GitHub repo. We will be checking these to make sure you have been practicing how to commit and push changes.\nYou must turn in a PDF file to the Gradescope page by the submission deadline to be considered “on time”.\n\n\nTo submit your assignment:\n\nGo to http://www.gradescope.com and click Log in in the top right corner.\nClick School Credentials \\(\\rightarrow\\) Duke NetID and log in using your NetID credentials.\nClick on your STA 199 course.\nClick on the assignment, and you’ll be prompted to submit it.\nMark all the pages associated with question. All the pages of your lab should be associated with at least one question (i.e., should be “checked”).\n\n\n\n\n\n\n\nChecklist\n\n\n\nMake sure you have:\n\nattempted all questions\nrendered your Quarto document\ncommitted and pushed everything to your GitHub repository such that the Git pane in RStudio is empty\nuploaded your PDF to Gradescope\nselected pages associated with each question on Gradescope"
  },
  {
    "objectID": "labs/lab-3.html#grading",
    "href": "labs/lab-3.html#grading",
    "title": "Lab 3 - Data tidying and joining",
    "section": "Grading",
    "text": "Grading\nThe lab is graded out of a total of 50 points.\nYou can earn up to 5 points on each question:\n\n5: Response shows excellent understanding and addresses all or almost all of the rubric items.\n4: Response shows good understanding and addresses most of the rubric items.\n3: Response shows understanding and addresses a majority of the rubric items.\n2: Response shows effort and misses many of the rubric items.\n1: Response does not show sufficient effort or understanding and/or is largely incomplete.\n0: No attempt."
  },
  {
    "objectID": "labs/lab-3.html#footnotes",
    "href": "labs/lab-3.html#footnotes",
    "title": "Lab 3 - Data tidying and joining",
    "section": "Footnotes",
    "text": "Footnotes\n\nRemember, haikus not novellas when writing code!↩︎"
  },
  {
    "objectID": "labs/lab-0.html",
    "href": "labs/lab-0.html",
    "title": "Lab 0 - Hello, World and STA 199!",
    "section": "",
    "text": "This lab will set you up for the computing workflow and give you an opportunity to introduce yourselves to each other and the teaching team."
  },
  {
    "objectID": "labs/lab-0.html#access-r-and-rstudio",
    "href": "labs/lab-0.html#access-r-and-rstudio",
    "title": "Lab 0 - Hello, World and STA 199!",
    "section": "Access R and RStudio",
    "text": "Access R and RStudio\n\nGo to https://cmgr.oit.duke.edu/containers and login with your Duke NetID and Password.\nClick STA198-199 to log into the Docker container. You should now see the RStudio environment.\n\nGo to https://cmgr.oit.duke.edu/containers and under Reservations available click on reserve STA 198-199 to reserve a container for yourself.\n\n\n\n\n\n\nNote\n\n\n\nA container is a self-contained instance of RStudio for you, and you alone. You will do all of your computing in your container.\n\n\nOnce you’ve reserved the container you’ll see that it will show up under My reservations.\nTo launch your container click on it under My reservations, then click Login, and then Start.1"
  },
  {
    "objectID": "labs/lab-0.html#create-a-github-account",
    "href": "labs/lab-0.html#create-a-github-account",
    "title": "Lab 0 - Hello, World and STA 199!",
    "section": "Create a GitHub account",
    "text": "Create a GitHub account\nGo to https://github.com/ and walk through the steps for creating an account. You do not have to use your Duke email address, but I recommend doing so.2\n\n\n\n\n\n\nNote\n\n\n\nYou’ll need to choose a user name. I recommend reviewing the user name advice at https://happygitwithr.com/github-acct#username-advice before choosing a username.\n\n\n\n\n\n\n\n\nWhat if I already have a GitHub account?\n\n\n\n\n\nIf you already have a GitHub account, you do not need to create a new one for this course. Just log in to that account to make sure you still remember your username and password."
  },
  {
    "objectID": "labs/lab-0.html#set-up-your-ssh-key",
    "href": "labs/lab-0.html#set-up-your-ssh-key",
    "title": "Lab 0 - Hello, World and STA 199!",
    "section": "Set up your SSH key",
    "text": "Set up your SSH key\nYou will authenticate GitHub using SSH (Secure Shell Protocol – it doesn’t really matter what this means for the purpose of this course). Below is an outline of the authentication steps; you are encouraged to follow along as your TA demonstrates the steps.\n\n\n\n\n\n\nNote\n\n\n\nYou only need to do this authentication process one time on a single system.\n\n\n\nGo back to your RStudio container and type credentials::ssh_setup_github() into your console.\nR will ask “No SSH key found. Generate one now?” You should click 1 for yes.\nYou will generate a key. It will begin with “ssh-rsa….” R will then ask “Would you like to open a browser now?” You should click 1 for yes.\nYou may be asked to provide your GitHub username and password to log into GitHub. After entering this information, you should paste the key in and give it a name. You might name it in a way that indicates where the key will be used, e.g., sta199).\n\nYou can find more detailed instructions here if you’re interested."
  },
  {
    "objectID": "labs/lab-0.html#configure-git",
    "href": "labs/lab-0.html#configure-git",
    "title": "Lab 0 - Hello, World and STA 199!",
    "section": "Configure Git",
    "text": "Configure Git\nThere is one more thing we need to do before getting started on the assignment. Specifically, we need to configure your git so that RStudio can communicate with GitHub. This requires two pieces of information: your name and email address.\nTo do so, you will use the use_git_config() function from the usethis package.\n\n\n\n\n\n\nNote\n\n\n\nYou’ll hear about 📦 packages a lot in the context of R – basically they’re how developers write functions and bundle them to distribute to the community (and more on this later too!).\n\n\nType the following lines of code in the console in RStudio filling in your name and the address associated with your GitHub account.\n\nusethis::use_git_config(\n  user.name = \"Your name\", \n  user.email = \"Email associated with your GitHub account\"\n)\n\nFor example, mine would be\n\nusethis::use_git_config(\n  user.name = \"Mine Çetinkaya-Rundel\", \n  user.email = \"cetinkaya.mine@gmail.com\"\n)\n\nYou are now ready interact with GitHub via RStudio!\n\n\n\n\n\n\nNeed a recap? Watch this video!\n\n\n\n\n\nThe following video walks you through the steps outlined in the SSH key generation and Git configuration sections above."
  },
  {
    "objectID": "labs/lab-0.html#footnotes",
    "href": "labs/lab-0.html#footnotes",
    "title": "Lab 0 - Hello, World and STA 199!",
    "section": "Footnotes",
    "text": "Footnotes\n\nYes, it’s too many steps. I don’t know why! But it works, and you’ll get used to it. Trust me, it beats downloading and installing everything you need on your computers!↩︎\nGitHub has some perks for students you can take advantage of later in the course or in your future work, and it helps to have a .edu address to get verified as a student.↩︎"
  },
  {
    "objectID": "labs/lab-5.html",
    "href": "labs/lab-5.html",
    "title": "Lab 5 - Potpourri",
    "section": "",
    "text": "In this lab you’ll review and get practice with a variety of concepts, methods, and tools you’ve encountered thus far.",
    "crumbs": [
      "Labs",
      "Lab 5"
    ]
  },
  {
    "objectID": "labs/lab-5.html#question-1",
    "href": "labs/lab-5.html#question-1",
    "title": "Lab 5 - Potpourri",
    "section": "Question 1",
    "text": "Question 1\n\n\nAdd each of strings below to the code chunk provided in your document, render the document, and determine if the string is a proper code chunk label. If not, explain why and describe how you could fix it so the document renders.\n\nChunk label 1:\n\n#| label: a-label \n#| with-a-line-break\n\nChunk label 2:\n\n#| label: areaaaaaaaaaaaaaaaaaaaaaallllllllllllllllllyyyyylooooooooooooooooooonglabel \n\nChunk label 3:\n\n#| label: label with spaces\n\nChunk label 4:\n\n#| label: label-with-dashes\n\n\n\n\n\n\nTip\n\n\n\nTry each label option in the code chunk provided in your document. If it gives you an error (document doesn’t render), you know it’s not a proper chunk label.\n\n\n\nWhich of the chunk label options above is the best option? Explain your reasoning in 1-2 sentences.",
    "crumbs": [
      "Labs",
      "Lab 5"
    ]
  },
  {
    "objectID": "labs/lab-5.html#question-2",
    "href": "labs/lab-5.html#question-2",
    "title": "Lab 5 - Potpourri",
    "section": "Question 2",
    "text": "Question 2\nYou have the following code chunk:\n\nggplot(penguins, aes(x = bill_length_mm, y = bill_depth_mm)) + \n  geom_point()\n\nAdd the following code chunk options, one at a time, and set each to false and then to true. After each value, render your document and observe its effect. Ultimately, choose the values that are the most appropriate for this code chunk. Based on the behaviors you observe, describe what each code chunk option does.\n\necho\nwarning\neval",
    "crumbs": [
      "Labs",
      "Lab 5"
    ]
  },
  {
    "objectID": "labs/lab-5.html#question-3",
    "href": "labs/lab-5.html#question-3",
    "title": "Lab 5 - Potpourri",
    "section": "Question 3",
    "text": "Question 3\n\n\nYou have the following code chunk again.\n\nggplot(penguins, aes(x = bill_length_mm, y = bill_depth_mm)) + \n  geom_point()\n\nAdd fig-width and fig-asp as code chunk options. Try setting fig-width to values between 1 and 10. Try setting fig-asp to values between 0.1 and 1. Re-render the document after each value and observe its effect. Ultimately, choose values that make the plot look visually pleasing in the rendered document. Based on the behavior you observe, describe what each chunk option does.\n\n\nYou have the following code chunk, but look carefully, it’s not exactly the same!\n\ngplot(penguins, aes(x = bill_length_mm, y = bill_depth_mm)) + \n  geom_point()\n\nAdd error as a code chunk option and set it to false and then set it to true. After each value, render your document and observe its effect. Ultimately, choose the value that allows you to render your document without altering the code. Based on the behavior you observe, describe what this code chunk option does.\n\n\n\n\n\n\n\n\nTip\n\n\n\nReading the documentation might also be hepful.\n\n\n\nRender, commit, and push one last time. Make sure that you commit and push all changed documents and your Git pane is completely empty before proceeding.",
    "crumbs": [
      "Labs",
      "Lab 5"
    ]
  },
  {
    "objectID": "labs/lab-5.html#question-4",
    "href": "labs/lab-5.html#question-4",
    "title": "Lab 5 - Potpourri",
    "section": "Question 4",
    "text": "Question 4\nThe following chart was shared by @GraphCrimes on X/Twitter on September 3, 2022.\n\n\n\n\n\nWhat is misleading about this graph?\nSuppose you wanted to recreate this plot, with improvements to avoid its misleading pitfalls from part (a). You would obviously need the data from the survey in order to be able to do that. How many observations would this data have? How many variables (at least) should it have, and what should those variables be?\nLoad the data for this survey from data/survation.csv. Confirm that the data match the percentages from the visualization. That is, calculate the percentages of public sector, private sector, don’t know for each of the services and check that they match the percentages from the plot.",
    "crumbs": [
      "Labs",
      "Lab 5"
    ]
  },
  {
    "objectID": "labs/lab-5.html#question-5",
    "href": "labs/lab-5.html#question-5",
    "title": "Lab 5 - Potpourri",
    "section": "Question 5",
    "text": "Question 5\nCreate an improved version of the visualization. Your improved visualization:\n\nshould also be a stacked bar chart with services on the y-axis, presented in the same order as the original plot, and services to create the segments of the plot, and presented in the same order as the original plot\nshould have the same legend location\nshould have the same title and caption\ndoes not need to have a bolded title or a gray background\n\nHow does the improved visualization look different than the original? Does it send a different message at a first glance?\n\n\n\n\n\n\nTip\n\n\n\nUse \\n to add a line break to your title. And note that since the title is very long, it might run off the page in your code. That’s ok!\nAdditionally, the colors used in the plot are gray, #FF3205, and #006697.\n\n\n\nRender, commit, and push one last time. Make sure that you commit and push all changed documents and your Git pane is completely empty before proceeding.",
    "crumbs": [
      "Labs",
      "Lab 5"
    ]
  },
  {
    "objectID": "labs/lab-5.html#question-6",
    "href": "labs/lab-5.html#question-6",
    "title": "Lab 5 - Potpourri",
    "section": "Question 6",
    "text": "Question 6\nIn a single pipeline, calculate the mean of x, mean of y, standard deviation of x, standard deviation of y, and the correlation between x and y for each level of the dataset variable. Then, in 1-2 sentences, comment on how these summary statistics compare across groups (datasets).\n\n\n\n\n\n\nTip\n\n\n\nThere are 13 groups but tibbles only print out 10 rows by default. Add print(n = 13) as the last step of your pipeline to display all rows.",
    "crumbs": [
      "Labs",
      "Lab 5"
    ]
  },
  {
    "objectID": "labs/lab-5.html#question-7",
    "href": "labs/lab-5.html#question-7",
    "title": "Lab 5 - Potpourri",
    "section": "Question 7",
    "text": "Question 7\nCreate a scatterplot of y versus x and color and facet it by dataset. Then, in 1-2 sentences, how these plots compare across groups (datasets). How does your response in this question compare to your response to the previous question and what does this say about using visualizations and summary statistics when getting to know a dataset?\n\n\n\n\n\n\nTip\n\n\n\nWhen you both color and facet by the same variable, you’ll end up with a redundant legend. Turn off the legend by adding show.legend = FALSE to the geom creating the legend.\n\n\n\nRender, commit, and push one last time. Make sure that you commit and push all changed documents and your Git pane is completely empty before proceeding.",
    "crumbs": [
      "Labs",
      "Lab 5"
    ]
  },
  {
    "objectID": "labs/lab-5.html#question-8",
    "href": "labs/lab-5.html#question-8",
    "title": "Lab 5 - Potpourri",
    "section": "Question 8",
    "text": "Question 8\n\n\nFill in the code below to create a two-way table that summarizes these data.\n\nsurvey_counts &lt;- tibble( \n  age = c(),\n  vote = c(),\n  n = c()\n  )\n\nsurvey_counts |&gt;\n  pivot_wider( \n    names_from = ___,\n    values_from = ___\n  ) |&gt;\n  kable()\n\n\n\nFor parts b-d below, use a your response single pipeline starting with survey_counts, calculate the desired proportions, and make sure the result is an ungrouped data frame with a column for relevant counts, a column for relevant proportions, and a column for the groups you’re interested in.\n\nCalculate the proportions of 18-49 year olds and 50+ year olds in this sample.\nCalculate the proportions of those who want to vote for Donald Trump, Joe Biden, and those who are undecided in this sample.\nCalculate the proportions of individuals in this sample who are planning to vote for each of the candidates or are undecided among those who are 18-49 years old as well as among those who are 50+ years old.",
    "crumbs": [
      "Labs",
      "Lab 5"
    ]
  },
  {
    "objectID": "labs/lab-5.html#question-9",
    "href": "labs/lab-5.html#question-9",
    "title": "Lab 5 - Potpourri",
    "section": "Question 9",
    "text": "Question 9\n\n\nRe-create the following visualization that displays relationship between age and vote.\n\n\n\n\n\n\n\nTip\n\n\n\nThe colors used in the plot are \"#E81B23\", \"#0015BC\", and \"gray\". The theme is theme_minimal().\n\n\n\nBased on your calculations so far, as well as your visualization, write 1-3 sentences that describe the relationship, in this sample, between age and plans for presidential vote.\n\n\nRender, commit, and push one last time. Make sure that you commit and push all changed documents and your Git pane is completely empty before proceeding.",
    "crumbs": [
      "Labs",
      "Lab 5"
    ]
  },
  {
    "objectID": "labs/lab-5.html#question-10",
    "href": "labs/lab-5.html#question-10",
    "title": "Lab 5 - Potpourri",
    "section": "Question 10",
    "text": "Question 10\nTo complete this exercise you will first need to watch the documentary Coded Bias. To do so, you either need to be on the Duke network or connected to the Duke VPN. Then go to https://find.library.duke.edu/catalog/DUKE009834953 and click on “View Online”. Once you watch the video, write a reflection in 2-5 bullet points highlighting at least one thing that you already knew about (from the course prep materials) and at least one thing you learned from the movie as well as any other aspects of the documentary that you found interesting / enlightening.\n\n\n\n\n\n\nImportant\n\n\n\nThis question requires no code, only narrative. Remember that, based on the syllabus, you may not use generative AI tools (e.g., Chat GPT) to write narrative on assignments.\n\n\n\nRender, commit, and push one last time. Make sure that you commit and push all changed documents and your Git pane is completely empty before proceeding.",
    "crumbs": [
      "Labs",
      "Lab 5"
    ]
  },
  {
    "objectID": "labs/lab-5.html#submission",
    "href": "labs/lab-5.html#submission",
    "title": "Lab 5 - Potpourri",
    "section": "Submission",
    "text": "Submission\nOnce you are finished with the lab, you will submit your final PDF document to Gradescope.\n\n\n\n\n\n\nWarning\n\n\n\nBefore you wrap up the assignment, make sure all of your documents are updated on your GitHub repo. We will be checking these to make sure you have been practicing how to commit and push changes.\nYou must turn in a PDF file to the Gradescope page by the submission deadline to be considered “on time”.\n\n\nTo submit your assignment:\n\nGo to http://www.gradescope.com and click Log in in the top right corner.\nClick School Credentials \\(\\rightarrow\\) Duke NetID and log in using your NetID credentials.\nClick on your STA 199 course.\nClick on the assignment, and you’ll be prompted to submit it.\nMark all the pages associated with question. All the pages of your lab should be associated with at least one question (i.e., should be “checked”).\n\n\n\n\n\n\n\nChecklist\n\n\n\nMake sure you have:\n\nattempted all questions\nrendered your Quarto document\ncommitted and pushed everything to your GitHub repository such that the Git pane in RStudio is empty\nuploaded your PDF to Gradescope\nselected pages associated with each question on Gradescope",
    "crumbs": [
      "Labs",
      "Lab 5"
    ]
  },
  {
    "objectID": "labs/lab-5.html#grading",
    "href": "labs/lab-5.html#grading",
    "title": "Lab 5 - Potpourri",
    "section": "Grading",
    "text": "Grading\nThe lab is graded out of a total of 50 points.\nYou can earn up to 5 points on each question:\n\n5: Response shows excellent understanding and addresses all or almost all of the rubric items.\n4: Response shows good understanding and addresses most of the rubric items.\n3: Response shows understanding and addresses a majority of the rubric items.\n2: Response shows effort and misses many of the rubric items.\n1: Response does not show sufficient effort or understanding and/or is largely incomplete.\n0: No attempt.",
    "crumbs": [
      "Labs",
      "Lab 5"
    ]
  },
  {
    "objectID": "labs/lab-5.html#footnotes",
    "href": "labs/lab-5.html#footnotes",
    "title": "Lab 5 - Potpourri",
    "section": "Footnotes",
    "text": "Footnotes\n\nFull survey results can be found at https://www.surveyusa.com/client/PollReport.aspx?g=300d50f5-303b-4652-b59e-6fbf1b87e24a.↩︎",
    "crumbs": [
      "Labs",
      "Lab 5"
    ]
  },
  {
    "objectID": "labs/lab-6.html",
    "href": "labs/lab-6.html",
    "title": "Lab 6 - Modeling I",
    "section": "",
    "text": "In this lab you’ll start your practice of statistical modeling. You’ll fit models, interpret model output, and make decisions about your data and research question based on the model results.\n\n\nYour plots should include an informative title, axes should be labeled, and careful consideration should be given to aesthetic choices.\nIn addition, the code should all the code should be be able to be read (not run off the page) when you render to PDF. Make sure that is the case, and add line breaks where the code is running off the page.\n\n\n\n\n\n\nImportant\n\n\n\nRender your document. If your code is running off the page for a given question such that we can’t see your entire code, we will not evaluate any of the code for that question. The question will automatically receive a 0. This is something you can and should verify before you turn in your work.\n\n\nYou should have at least 3 commits with meaningful commit messages by the end of the assignment.\nAdditionally, if you’re using functions that are not introduced in the course materials, you must cite your sources.\n\n\n\n\n\n\nImportant\n\n\n\nFailure to cite outside resources used, including Large Language Models like Chat GPT, is a violation of the Duke Community Standard and will be treated as such.",
    "crumbs": [
      "Labs",
      "Lab 6"
    ]
  },
  {
    "objectID": "labs/lab-6.html#guidelines",
    "href": "labs/lab-6.html#guidelines",
    "title": "Lab 6 - Modeling I",
    "section": "",
    "text": "Your plots should include an informative title, axes should be labeled, and careful consideration should be given to aesthetic choices.\nIn addition, the code should all the code should be be able to be read (not run off the page) when you render to PDF. Make sure that is the case, and add line breaks where the code is running off the page.\n\n\n\n\n\n\nImportant\n\n\n\nRender your document. If your code is running off the page for a given question such that we can’t see your entire code, we will not evaluate any of the code for that question. The question will automatically receive a 0. This is something you can and should verify before you turn in your work.\n\n\nYou should have at least 3 commits with meaningful commit messages by the end of the assignment.\nAdditionally, if you’re using functions that are not introduced in the course materials, you must cite your sources.\n\n\n\n\n\n\nImportant\n\n\n\nFailure to cite outside resources used, including Large Language Models like Chat GPT, is a violation of the Duke Community Standard and will be treated as such.",
    "crumbs": [
      "Labs",
      "Lab 6"
    ]
  },
  {
    "objectID": "labs/lab-6.html#question-1",
    "href": "labs/lab-6.html#question-1",
    "title": "Lab 6 - Modeling I",
    "section": "Question 1",
    "text": "Question 1\nWe are interested in the impact of smoking during pregnancy. Since it is not possible to run a randomized controlled experiment to investigate this impact, we will instead use a data set has been of interest to medical researchers who are studying the relation between habits and practices of expectant mothers and the birth of their children. This is a random sample of 1,000 cases from a data set released in 2014 by the state of North Carolina. The data set is called births14, and it is included in the openintro package you loaded at the beginning of the assignment.\n\nCreate a version of the births14 data set dropping observations where there are NAs for habit. You can call this version births14_habitgiven.\nPlotting the data is a useful first step because it helps us quickly visualize trends, identify strong associations, and develop research questions. Create an appropriate plot displaying the relationship between weight and habit. In 2-3 sentences, discuss the relationships observed.\nNow, fit a linear model that predicts weight from habit. Provide the tidy summary output below.\nWrite the estimated least squares regression line below using proper notation.\n\n\n\n\n\n\nTip\n\n\n\nIf you need to type an equation using proper notation, type your answers in-between $$ and $$. You may use \\hat{example} to put a hat on a character.",
    "crumbs": [
      "Labs",
      "Lab 6"
    ]
  },
  {
    "objectID": "labs/lab-6.html#question-2",
    "href": "labs/lab-6.html#question-2",
    "title": "Lab 6 - Modeling I",
    "section": "Question 2",
    "text": "Question 2\n\nAnother researcher is interested in assessing the relationship between babies’ weights and mothers’ ages. Fit another linear model to investigate this relationship. Provide the summary output below.\nIn 2-3 sentences, explain how the regression line to model these data is fit, i.e., based on what criteria R determines the regression line.\nInterpret the intercept in the context of the data and the research question. Is the intercept meaningful in this context? Why or why not?\nInterpret the slope in the context of the data and the research question.",
    "crumbs": [
      "Labs",
      "Lab 6"
    ]
  },
  {
    "objectID": "labs/lab-6.html#question-3",
    "href": "labs/lab-6.html#question-3",
    "title": "Lab 6 - Modeling I",
    "section": "Question 3",
    "text": "Question 3\nLet’s start by reading in the parasites data and examining the relationship between divergence_time and parsim.\n\nLoad the data and save the data frame as parasites.\nBased on the goals of the analysis, what is the response variable?\nVisualize the relationship between the two variables.\nUse the visualization to describe the relationship between the two variables.",
    "crumbs": [
      "Labs",
      "Lab 6"
    ]
  },
  {
    "objectID": "labs/lab-6.html#question-4",
    "href": "labs/lab-6.html#question-4",
    "title": "Lab 6 - Modeling I",
    "section": "Question 4",
    "text": "Question 4\nNext, model this relationship.\n\nFit the model and write the estimated regression equation.\nInterpret the slope and the intercept in the context of the data.\nRecreate the visualization from Question 3, this time adding a regression line to the visualization.\nWhat do you notice about the prediction (regression) line that may be strange, particularly for very large divergence times?",
    "crumbs": [
      "Labs",
      "Lab 6"
    ]
  },
  {
    "objectID": "labs/lab-6.html#question-5",
    "href": "labs/lab-6.html#question-5",
    "title": "Lab 6 - Modeling I",
    "section": "Question 5",
    "text": "Question 5\nSince parsim takes values between 0 and 1, we want to transform this variable so that it can range between (−∞,+∞). This will be better suited for fitting a regression model (and interpreting predicted values!)\n\nUsing mutate, create a new variable transformed_parsim that is calculated as log(parsim/(1-parsim)). Add this variable to your data frame.\n\n\n\n\n\n\nNote\n\n\n\nlog() in R represents the nautral log.\n\n\nThen, visualize the relationship between divergence_time and transformed_parsim. Add a regression line to your visualization.\nWrite a 1-2 sentence description of what you observe in the visualization.",
    "crumbs": [
      "Labs",
      "Lab 6"
    ]
  },
  {
    "objectID": "labs/lab-6.html#question-6",
    "href": "labs/lab-6.html#question-6",
    "title": "Lab 6 - Modeling I",
    "section": "Question 6",
    "text": "Question 6\nWhich variable is the strongest individual predictor of parasite similarity between species?\nTo answer this question, begin by fitting a linear regression model to each pair of variables. Do not report the model outputs in a tidy format but save each one as dt_model, dist_model, BM_model, and prec_model, respectively.\n\ndivergence_time and transformed_parsim\ndistance and transformed_parsim\nBMdiff and transformed_parsim\nprecdiff and transformed_parsim\n\n\nReport the slopes for each of these models. Use proper notation.\nTo answer the question of interest, would it be useful to compare the slopes in each model to choose the variable that is the strongest predictor of parasite similarity? Why or why not?",
    "crumbs": [
      "Labs",
      "Lab 6"
    ]
  },
  {
    "objectID": "labs/lab-6.html#question-7",
    "href": "labs/lab-6.html#question-7",
    "title": "Lab 6 - Modeling I",
    "section": "Question 7",
    "text": "Question 7\nNow, what if we calculated \\(R^2\\) to help answer our question? To compare the explanatory power of each individual predictor, we will look at \\(R^2\\) between the models. \\(R^2\\) is a measure of how much of the variability in the response variable is explained by the model.\nAs you may have guessed from the name \\(R^2\\) can be calculated by squaring the correlation when we have a simple linear regression model. The correlation r takes values -1 to 1, therefore, \\(R^2\\) takes values 0 to 1. Intuitively, if r=1 or −1, then \\(R^2\\)=1, indicating the model is a perfect fit for the data. If r≈0 then \\(R^2\\)≈0, indicating the model is a very bad fit for the data.\nYou can calculate \\(R^2\\) using the glance function. For example, you can calculate \\(R^2\\) for dt_model using the code glance(dt_model)$r.squared.\n\nCalculate and report \\(R^2\\) for each model fit in the previous exercise.\nTo answer our question of interest, would it be useful to compare the \\(R^2\\) in each model to choose the variable that is the strongest predictor of parasite similarity? Why or why not?",
    "crumbs": [
      "Labs",
      "Lab 6"
    ]
  },
  {
    "objectID": "labs/lab-6.html#question-8",
    "href": "labs/lab-6.html#question-8",
    "title": "Lab 6 - Modeling I",
    "section": "Question 8",
    "text": "Question 8\n\nData: For our analysis, we will only be working with data from 2007. Below, filter the data set so only values from the year 2007 are shown. Save this data set as gapminder_07 and use it for the remainder of this exercise and the following.\nVisualization: We are interested in learning more about GDP, and we’ll start with exploring the relationship between life expectancy and GDP. Create two visualizations:\n\nScatter plot of gdpPercap vs. lifeExp.\nScatter plot of gdpPercap_log vs. lifeExp, where gdpPercap_log is a new variable you add to the data set by taking the natural log of gdpPercap.\n\nFirst describe the relationship between each pair of the variables. Then, comment on which relationship would be better modeled using a linear model, and explain your reasoning.\nModel fitting:\n\nFit a linear model predicting log gross domestic product from life expectancy. Display the tidy summary.\n\nModel evaluation:\n\nCalculate the R-squared of the model using two methods and confirm that the values match: first method is using glance() and the other method is based on the value of the correlation coefficient between the two variables.\nInterpret R-squared in the context of the data and the research question.",
    "crumbs": [
      "Labs",
      "Lab 6"
    ]
  },
  {
    "objectID": "labs/lab-6.html#question-9",
    "href": "labs/lab-6.html#question-9",
    "title": "Lab 6 - Modeling I",
    "section": "Question 9",
    "text": "Question 9\nNext, we want to examine if the relationship between GDP and life expectancy that we observed in the previous exercise holds across all continents in our data. We’ll continue to work with logged GDP (gdpPercap_log) and data from 2007.\n\nJustification: Create a scatter plot of gdpPercap_log vs. lifeExp, where the points are colored by continent. Do you think the trend between gdpPercap_log and lifeExp is different for different continents? Justify your answer with specific features of the plot.\nModel fitting and interpretation:\n\nRegardless of your answer in part (a), fit an additive model (main effects) that predicts gdpPercap_log from life expectancy and continent (with Africas as the baseline level). Display a tidy summary of the model output.\nInterpret the intercept of the model, making sure that your interpretation is in the units of the original data (not on log scale).\nInterpret the slope of the model, making sure that your interpretation is in the units of the original data (not on log scale).\n\nPrediction: Predict the GDP of a country in Asia where the average life expectancy is 70 years old.",
    "crumbs": [
      "Labs",
      "Lab 6"
    ]
  },
  {
    "objectID": "labs/lab-6.html#question-10",
    "href": "labs/lab-6.html#question-10",
    "title": "Lab 6 - Modeling I",
    "section": "Question 10",
    "text": "Question 10\nCommunication is a critical yet often overlooked part of data science. When we engage with our audience and capture their interest, we can ultimately better communicate what we are trying to share.\nPlease watch the following video: Hans Rosling: 200 years in 4 minutes.\nThen, write a paragraph (4-5 sentences) addressing the following:\n\nWhat did you enjoy about the presentation of data? What did you find interesting\nWere there any aspects of the presentation that were hard to follow? If so, what?\nWhat are your general take-aways from this presentation?\nWhat are your general take-aways from how this presentation was given?",
    "crumbs": [
      "Labs",
      "Lab 6"
    ]
  },
  {
    "objectID": "labs/lab-6.html#submission",
    "href": "labs/lab-6.html#submission",
    "title": "Lab 6 - Modeling I",
    "section": "Submission",
    "text": "Submission\nOnce you are finished with the lab, you will submit your final PDF document to Gradescope.\n\n\n\n\n\n\nWarning\n\n\n\nBefore you wrap up the assignment, make sure all of your documents are updated on your GitHub repo. We will be checking these to make sure you have been practicing how to commit and push changes.\nYou must turn in a PDF file to the Gradescope page by the submission deadline to be considered “on time”.\n\n\nTo submit your assignment:\n\nGo to http://www.gradescope.com and click Log in in the top right corner.\nClick School Credentials \\(\\rightarrow\\) Duke NetID and log in using your NetID credentials.\nClick on your STA 199 course.\nClick on the assignment, and you’ll be prompted to submit it.\nMark all the pages associated with question. All the pages of your lab should be associated with at least one question (i.e., should be “checked”).\n\n\n\n\n\n\n\nChecklist\n\n\n\nMake sure you have:\n\nattempted all questions\nrendered your Quarto document\ncommitted and pushed everything to your GitHub repository such that the Git pane in RStudio is empty\nuploaded your PDF to Gradescope\nselected pages associated with each question on Gradescope",
    "crumbs": [
      "Labs",
      "Lab 6"
    ]
  },
  {
    "objectID": "labs/lab-6.html#grading",
    "href": "labs/lab-6.html#grading",
    "title": "Lab 6 - Modeling I",
    "section": "Grading",
    "text": "Grading\nThe lab is graded out of a total of 50 points.\nYou can earn up to 5 points on each question:\n\n5: Response shows excellent understanding and addresses all or almost all of the rubric items.\n4: Response shows good understanding and addresses most of the rubric items.\n3: Response shows understanding and addresses a majority of the rubric items.\n2: Response shows effort and misses many of the rubric items.\n1: Response does not show sufficient effort or understanding and/or is largely incomplete.\n0: No attempt.",
    "crumbs": [
      "Labs",
      "Lab 6"
    ]
  },
  {
    "objectID": "labs/Lab_1.html",
    "href": "labs/Lab_1.html",
    "title": "Reproducuble Reports",
    "section": "",
    "text": "In today’s lab, we introduce an interface known as quarto that is helpful in creating reproducible reports. One of the most powerful features of quarto is the fact that you can write code (in code chunks) and plain text in the same document. You can generate (render) your work into formats such as pdf, word, html, etc that can be shared easily. If you are using the desktop version of quarto, you need to download quarto from https://quarto.org/docs/get-started/ before you proceed.\n\nWe are going to need a package called palmerpenguins. Install it before you proceed. To install the package, run the following command in the console\ninstall.packages(\"palmerpenguins)\nAn alternative way to install a package in RStudio is to use the install button in the packages tab.\n\nTo create your First Quarto file, follow the following steps:\nGo to File&gt;New File &gt; Quarto document. See below:\n\nAfter clicking Quarto document,a pop up window will appear with fields for the title and author. Enter the title of the document as Introducing Quarto and Tidyverse because that is what we are doing today. Write your name under author. The output format can stay as HTML. You can always change these options even after creating the document. The popup window looks as follows:\n\nClick create to create the document. Note that the document appears with the name Untitled. Click on file then navigate to save then change the name from untitled to Lab_01. Remember, we do not want to use a space for the document name. To tell whether your document saved properly, you will see the document under files with a .qmd extension. With this document saved here, you can always return to it any time and continue working.\nNow, click on Render to see the output of the document you just created. You will note that the document has both plain text and code chunks. We shall use the code chunks for writing code and plain text for interpreting our analyses and writing reports. To add your own code chunk, just click on code the go to add new chunk or use the keyboard shortcut cmd+opt+I on a mac and control+opt+I on windows. When doing this, make sure your cursor is at the place where you want to create the new code chunk.\nBy default, the code chunk that comes is for R code. If you want to write python code, just change the r to python.\nTo create a new code chunk, you can copy an already existing code chunk and paste it elsewhere on the document then edit it appropriately. You may also create new code chunks by clicking on Code and navigating to Insert code chunk.\n\nIn a code chunk, you write code that you want to reproduce in your report. There are other operations such as installing packages that should be done only in the console. When you render a quarto document, quarto runs all code chunks sequentially from top to bottom in order to output your report (in pdf, html, or word). If any code chunks has code for package installation, it means R will try to re-install the package every time you render the document (we said packages are installed one). Operations such as activating packages, i.e., library(package name), should be included in the first code chunk.\nAs a start, let us load the openintro, tidyverse, and palmerpenguins packages. Copy and paste the following code in the first code chunk:\nlibrary(openintro)\nlibrary(tidyverse)\nlibrary(palmerpenguins)\nRun the code chunk with the packages to ensure that they are all working. If any of them is missing, R will prompt you to install them.\n\nRemember that the openintro package contains the data that comes with the openintro text. To view a complete list of the data frames, visit https://www.openintro.org/data/. Today, we will use a data frame called penguins contained in the palmerpenguins package. To learn more about this data frame, run the following code in the console:\n?penguins\nTo load the data into your document, run the following command:\n\nCodedata(\"penguins\")\n\n\nWhen you run the above code, a new object should appear in the environment area. Click on penguins to view and study the data.\n\nNow that you have “imported” the data into R, we want to perform a few analyses. We are going to use the tidyverse package to do this. The tidyverse is a collection of R packages for data analysis that are developed with common ideas and norms. According to @Wickham2019,\n“At a high level, the tidyverse is a language for solving data science challenges with R code. Its primary goal is to facilitate a conversation between a human and a computer about data. Less abstractly, the tidyverse is a collection of R packages that share a high-level design philosophy and low-level grammar and data structures, so that learning one package makes it easier to learn the next.”\n\nIn lab_00, we performed the analyses using base R code. We saw that to compute the mean of a given variable in a data frame, you use data_frame_name$variable_name. The tidyverse workflow is a bit different and is what we shall use for the most part.\nFor example, to compute the mean of bill_length_mm from the penguins data frame, base R code would be\nmean(penguins$bill_length_mm)\nTry the code to see if it works. If not, what is the problem and how would you fix it?\nIn the tidyverse, the code for the mean of the bill length would be\npenguins %&gt;% summarize(length_mean = mean(bill_length_mm))\nThe symbol %&gt;% is called a pipe and is very common in tidyverse. It takes anything on its left and sends it (pipes it) to the function on the right. Here, we are taking the mtcars data frame and piping it into the summarize function (the function for summary statistics). Inside the function, we specify the variable and the statistic (in this case the mean). We have chosen to name the result as length_mean but this could be changed.\nYou can compute other summary statistics in a similar manner as above and if there is an NA one way to deal with would be to remove it. In some cases, one would replace NA with the average of the other values.\n\nIn this section, we will start by creating scatter plots and then proceed to bar plots. You will learn about more visualization tools in later labs.\n\nSuppose we want to answer the following question: Do penguins with longer flippers weigh more or less than penguins with shorter flippers?\nWe will use a package called ggplot2 (part of tidyverse) to create a scatter plot to visualize the association between flipper length and and body weight.\nggplot2 is a package (part of the tidyverse umbrella) that is used to create nice-looking graphics. It adopts the grammar of graphics, which is a coherent system for describing and building graphs.\nYou provide the data, tell ggplot2 how to map variables to aesthetics, what graphical primitives to use, and it takes care of the details.\nWith ggplot2, you begin a plot with the function ggplot(), defining a plot object that you then add layers to sequentially until you get the desired plot. We will do this in steps:\n\nStep 1: Add the data:\n\n\nCode  ggplot(data = penguins)\n\n\n\n\n\n\n\nThis creates an empty canvas\n\nStep 2: Provide the information about the x-axis and the y-axis (i.e., what variable do you want where?). We call this a mapping.\n\n\nCodeggplot(\n  data = penguins,\n  mapping = aes(x = flipper_length_mm, y = body_mass_g)\n)  \n\n\n\n\n\n\n\nThe above code adds to our empty canvas the variables specified for the y axis and the x-axis. We still do not have a scatter plot.\n\nStep 3: Define the geometry (geom) that you want ggplot2 to use. In our case, we want to use points and so we use the function geom_point(). Notice that you must have the parentheses because this is a function that can take arguments (you will learn more about this). Use teh code below:\n\n\nCodeggplot(\n  data = penguins,\n  mapping = aes(x = flipper_length_mm, y = body_mass_g)\n) +\n  geom_point()\n\nWarning: Removed 2 rows containing missing values or values outside the scale range\n(`geom_point()`).\n\n\n\n\n\n\n\n\nWe finally have our scatter plot. Based on this scatter plot, what can you say about the question we sought to answer?\nRemember the steps:\n\nGive ggplot the data,\nprovide a mapping, and\ndefine a geometry using geom_.\n\nQuestion: Try to change the geometry above to a histogram, i.e.,\nggplot(\n  data = penguins,\n  mapping = aes(x = flipper_length_mm, y = body_mass_g)\n) +\n  geom_histogram()\nDoes it work? If not, why?\n\nThe scatter plot above is a great tool to visualize the relationship between the two variables (flipper length and weight). Suppose we want to add a third (categorical) variable such as species to the scatter plot. We can achieve this by adding a third argument such as color to the aesthetics). See code below:\n\nCodeggplot(\n  data = penguins,\n  mapping = aes(x = flipper_length_mm, y = body_mass_g, color=species )\n) +\n  geom_point()\n\n\n\n\n\n\n\nWhat do you learn from this new scatter plot that you do not from the first?\nYou can also visualize how the different species are scattered on the same scale by using the face_wrap function. See code below\n\nCodeggplot(\n  data = penguins,\n  mapping = aes(x = flipper_length_mm, y = body_mass_g)\n) +\n  geom_point()+\n  facet_wrap(~species)\n\nWarning: Removed 2 rows containing missing values or values outside the scale range\n(`geom_point()`).\n\n\n\n\n\n\n\n\nYou can also add a numerical variable such as bill_depth_mm. See code below:\n\nCodeggplot(\n  data = penguins,\n  mapping = aes(x = flipper_length_mm, y = body_mass_g, color=bill_depth_mm )\n) +\n  geom_point()\n\n\n\n\n\n\n\nWhat do you learn from this scatter plot that you do not from the first?\n\nYou can also create bar plots in a similar manner as above. Remember that bar plots are for categorical variables. For example, we can use a bar plot to visualize the species of the penguins. See code below:\n\nCodeggplot(penguins, aes(x = species)) +\n  geom_bar()\n\n\n\n\n\n\n\nThe above bar plot simply gives us the count for each species. If you wanted to color the bars by species, you can\n\nCodeggplot(penguins, aes(x = species, color=species)) +\n  geom_bar()\n\n\n\n\n\n\n\nYou can make the colors to fill the bars by using fill instead of color. See below:\n\nCodeggplot(penguins, aes(x = species, fill=species)) +\n  geom_bar()\n\n\n\n\n\n\n\nIf you wanted to add another categorical variable such as island to visualize the relationship, you can fill by island nstead of by species. See below:\n\nCodeggplot(penguins, aes(x = species, fill = island)) +\n  geom_bar()\n\n\n\n\n\n\n\nThe problem with this bar plot is that it is difficult to interpret. We often prefer to have side-by-side bar plots. To achieve this, we add an argument called position inside the geom_bar function and set it to dodge.\n\nCodeggplot(penguins, aes(x = species, fill = island)) +\n  geom_bar(position = \"dodge\")\n\n\n\n\n\n\n\n\n\n\n(2 pts) There is a data frame called loan50 that is contained in the openintro package. load the data frame into your work space. \n\n\n(2 pts) Give a brief description of this data frame. How many variables does the data frame have? How many cases/observations does it have? \n\n\n(4 pts) Do people that have been employed for long tend to get lower interest rates? To answer this question, create a scatter plot for the variables emp_length and interest_rate. \n\n\n(4 pts) Recreate the following plot using the loan50 data frame.\n\n\n\n\n\n\n\n\n\n\n(4 pts) Create a bar plot (with differently colored bars) to visualize the distribution of the loans by homeownership. What insights can you draw from this bar plot? \n(4 pts) Recreate the following plot using the loan50 data frame.",
    "crumbs": [
      "Labs",
      "Lab 1"
    ]
  },
  {
    "objectID": "labs/Lab_1.html#introduction",
    "href": "labs/Lab_1.html#introduction",
    "title": "Reproducuble Reports",
    "section": "",
    "text": "In today’s lab, we introduce an interface known as quarto that is helpful in creating reproducible reports. One of the most powerful features of quarto is the fact that you can write code (in code chunks) and plain text in the same document. You can generate (render) your work into formats such as pdf, word, html, etc that can be shared easily. If you are using the desktop version of quarto, you need to download quarto from https://quarto.org/docs/get-started/ before you proceed.",
    "crumbs": [
      "Labs",
      "Lab 1"
    ]
  },
  {
    "objectID": "labs/Lab_1.html#installing-a-new-package",
    "href": "labs/Lab_1.html#installing-a-new-package",
    "title": "Reproducuble Reports",
    "section": "",
    "text": "We are going to need a package called palmerpenguins. Install it before you proceed. To install the package, run the following command in the console\ninstall.packages(\"palmerpenguins)\nAn alternative way to install a package in RStudio is to use the install button in the packages tab.",
    "crumbs": [
      "Labs",
      "Lab 1"
    ]
  },
  {
    "objectID": "labs/Lab_1.html#creating-a-quarto-file",
    "href": "labs/Lab_1.html#creating-a-quarto-file",
    "title": "Reproducuble Reports",
    "section": "",
    "text": "To create your First Quarto file, follow the following steps:\nGo to File&gt;New File &gt; Quarto document. See below:\n\nAfter clicking Quarto document,a pop up window will appear with fields for the title and author. Enter the title of the document as Introducing Quarto and Tidyverse because that is what we are doing today. Write your name under author. The output format can stay as HTML. You can always change these options even after creating the document. The popup window looks as follows:\n\nClick create to create the document. Note that the document appears with the name Untitled. Click on file then navigate to save then change the name from untitled to Lab_01. Remember, we do not want to use a space for the document name. To tell whether your document saved properly, you will see the document under files with a .qmd extension. With this document saved here, you can always return to it any time and continue working.\nNow, click on Render to see the output of the document you just created. You will note that the document has both plain text and code chunks. We shall use the code chunks for writing code and plain text for interpreting our analyses and writing reports. To add your own code chunk, just click on code the go to add new chunk or use the keyboard shortcut cmd+opt+I on a mac and control+opt+I on windows. When doing this, make sure your cursor is at the place where you want to create the new code chunk.\nBy default, the code chunk that comes is for R code. If you want to write python code, just change the r to python.\nTo create a new code chunk, you can copy an already existing code chunk and paste it elsewhere on the document then edit it appropriately. You may also create new code chunks by clicking on Code and navigating to Insert code chunk.",
    "crumbs": [
      "Labs",
      "Lab 1"
    ]
  },
  {
    "objectID": "labs/Lab_1.html#using-code-chunks",
    "href": "labs/Lab_1.html#using-code-chunks",
    "title": "Reproducuble Reports",
    "section": "",
    "text": "In a code chunk, you write code that you want to reproduce in your report. There are other operations such as installing packages that should be done only in the console. When you render a quarto document, quarto runs all code chunks sequentially from top to bottom in order to output your report (in pdf, html, or word). If any code chunks has code for package installation, it means R will try to re-install the package every time you render the document (we said packages are installed one). Operations such as activating packages, i.e., library(package name), should be included in the first code chunk.\nAs a start, let us load the openintro, tidyverse, and palmerpenguins packages. Copy and paste the following code in the first code chunk:\nlibrary(openintro)\nlibrary(tidyverse)\nlibrary(palmerpenguins)\nRun the code chunk with the packages to ensure that they are all working. If any of them is missing, R will prompt you to install them.",
    "crumbs": [
      "Labs",
      "Lab 1"
    ]
  },
  {
    "objectID": "labs/Lab_1.html#loading-and-viewing-data",
    "href": "labs/Lab_1.html#loading-and-viewing-data",
    "title": "Reproducuble Reports",
    "section": "",
    "text": "Remember that the openintro package contains the data that comes with the openintro text. To view a complete list of the data frames, visit https://www.openintro.org/data/. Today, we will use a data frame called penguins contained in the palmerpenguins package. To learn more about this data frame, run the following code in the console:\n?penguins\nTo load the data into your document, run the following command:\n\nCodedata(\"penguins\")\n\n\nWhen you run the above code, a new object should appear in the environment area. Click on penguins to view and study the data.",
    "crumbs": [
      "Labs",
      "Lab 1"
    ]
  },
  {
    "objectID": "labs/Lab_1.html#some-analyses-with-tidyverse",
    "href": "labs/Lab_1.html#some-analyses-with-tidyverse",
    "title": "Reproducuble Reports",
    "section": "",
    "text": "Now that you have “imported” the data into R, we want to perform a few analyses. We are going to use the tidyverse package to do this. The tidyverse is a collection of R packages for data analysis that are developed with common ideas and norms. According to @Wickham2019,\n“At a high level, the tidyverse is a language for solving data science challenges with R code. Its primary goal is to facilitate a conversation between a human and a computer about data. Less abstractly, the tidyverse is a collection of R packages that share a high-level design philosophy and low-level grammar and data structures, so that learning one package makes it easier to learn the next.”\n\nIn lab_00, we performed the analyses using base R code. We saw that to compute the mean of a given variable in a data frame, you use data_frame_name$variable_name. The tidyverse workflow is a bit different and is what we shall use for the most part.\nFor example, to compute the mean of bill_length_mm from the penguins data frame, base R code would be\nmean(penguins$bill_length_mm)\nTry the code to see if it works. If not, what is the problem and how would you fix it?\nIn the tidyverse, the code for the mean of the bill length would be\npenguins %&gt;% summarize(length_mean = mean(bill_length_mm))\nThe symbol %&gt;% is called a pipe and is very common in tidyverse. It takes anything on its left and sends it (pipes it) to the function on the right. Here, we are taking the mtcars data frame and piping it into the summarize function (the function for summary statistics). Inside the function, we specify the variable and the statistic (in this case the mean). We have chosen to name the result as length_mean but this could be changed.\nYou can compute other summary statistics in a similar manner as above and if there is an NA one way to deal with would be to remove it. In some cases, one would replace NA with the average of the other values.",
    "crumbs": [
      "Labs",
      "Lab 1"
    ]
  },
  {
    "objectID": "labs/Lab_1.html#visualizing-with-ggplot2",
    "href": "labs/Lab_1.html#visualizing-with-ggplot2",
    "title": "Reproducuble Reports",
    "section": "",
    "text": "In this section, we will start by creating scatter plots and then proceed to bar plots. You will learn about more visualization tools in later labs.\n\nSuppose we want to answer the following question: Do penguins with longer flippers weigh more or less than penguins with shorter flippers?\nWe will use a package called ggplot2 (part of tidyverse) to create a scatter plot to visualize the association between flipper length and and body weight.\nggplot2 is a package (part of the tidyverse umbrella) that is used to create nice-looking graphics. It adopts the grammar of graphics, which is a coherent system for describing and building graphs.\nYou provide the data, tell ggplot2 how to map variables to aesthetics, what graphical primitives to use, and it takes care of the details.\nWith ggplot2, you begin a plot with the function ggplot(), defining a plot object that you then add layers to sequentially until you get the desired plot. We will do this in steps:\n\nStep 1: Add the data:\n\n\nCode  ggplot(data = penguins)\n\n\n\n\n\n\n\nThis creates an empty canvas\n\nStep 2: Provide the information about the x-axis and the y-axis (i.e., what variable do you want where?). We call this a mapping.\n\n\nCodeggplot(\n  data = penguins,\n  mapping = aes(x = flipper_length_mm, y = body_mass_g)\n)  \n\n\n\n\n\n\n\nThe above code adds to our empty canvas the variables specified for the y axis and the x-axis. We still do not have a scatter plot.\n\nStep 3: Define the geometry (geom) that you want ggplot2 to use. In our case, we want to use points and so we use the function geom_point(). Notice that you must have the parentheses because this is a function that can take arguments (you will learn more about this). Use teh code below:\n\n\nCodeggplot(\n  data = penguins,\n  mapping = aes(x = flipper_length_mm, y = body_mass_g)\n) +\n  geom_point()\n\nWarning: Removed 2 rows containing missing values or values outside the scale range\n(`geom_point()`).\n\n\n\n\n\n\n\n\nWe finally have our scatter plot. Based on this scatter plot, what can you say about the question we sought to answer?\nRemember the steps:\n\nGive ggplot the data,\nprovide a mapping, and\ndefine a geometry using geom_.\n\nQuestion: Try to change the geometry above to a histogram, i.e.,\nggplot(\n  data = penguins,\n  mapping = aes(x = flipper_length_mm, y = body_mass_g)\n) +\n  geom_histogram()\nDoes it work? If not, why?\n\nThe scatter plot above is a great tool to visualize the relationship between the two variables (flipper length and weight). Suppose we want to add a third (categorical) variable such as species to the scatter plot. We can achieve this by adding a third argument such as color to the aesthetics). See code below:\n\nCodeggplot(\n  data = penguins,\n  mapping = aes(x = flipper_length_mm, y = body_mass_g, color=species )\n) +\n  geom_point()\n\n\n\n\n\n\n\nWhat do you learn from this new scatter plot that you do not from the first?\nYou can also visualize how the different species are scattered on the same scale by using the face_wrap function. See code below\n\nCodeggplot(\n  data = penguins,\n  mapping = aes(x = flipper_length_mm, y = body_mass_g)\n) +\n  geom_point()+\n  facet_wrap(~species)\n\nWarning: Removed 2 rows containing missing values or values outside the scale range\n(`geom_point()`).\n\n\n\n\n\n\n\n\nYou can also add a numerical variable such as bill_depth_mm. See code below:\n\nCodeggplot(\n  data = penguins,\n  mapping = aes(x = flipper_length_mm, y = body_mass_g, color=bill_depth_mm )\n) +\n  geom_point()\n\n\n\n\n\n\n\nWhat do you learn from this scatter plot that you do not from the first?\n\nYou can also create bar plots in a similar manner as above. Remember that bar plots are for categorical variables. For example, we can use a bar plot to visualize the species of the penguins. See code below:\n\nCodeggplot(penguins, aes(x = species)) +\n  geom_bar()\n\n\n\n\n\n\n\nThe above bar plot simply gives us the count for each species. If you wanted to color the bars by species, you can\n\nCodeggplot(penguins, aes(x = species, color=species)) +\n  geom_bar()\n\n\n\n\n\n\n\nYou can make the colors to fill the bars by using fill instead of color. See below:\n\nCodeggplot(penguins, aes(x = species, fill=species)) +\n  geom_bar()\n\n\n\n\n\n\n\nIf you wanted to add another categorical variable such as island to visualize the relationship, you can fill by island nstead of by species. See below:\n\nCodeggplot(penguins, aes(x = species, fill = island)) +\n  geom_bar()\n\n\n\n\n\n\n\nThe problem with this bar plot is that it is difficult to interpret. We often prefer to have side-by-side bar plots. To achieve this, we add an argument called position inside the geom_bar function and set it to dodge.\n\nCodeggplot(penguins, aes(x = species, fill = island)) +\n  geom_bar(position = \"dodge\")",
    "crumbs": [
      "Labs",
      "Lab 1"
    ]
  },
  {
    "objectID": "labs/Lab_1.html#exercises",
    "href": "labs/Lab_1.html#exercises",
    "title": "Reproducuble Reports",
    "section": "",
    "text": "(2 pts) There is a data frame called loan50 that is contained in the openintro package. load the data frame into your work space. \n\n\n(2 pts) Give a brief description of this data frame. How many variables does the data frame have? How many cases/observations does it have? \n\n\n(4 pts) Do people that have been employed for long tend to get lower interest rates? To answer this question, create a scatter plot for the variables emp_length and interest_rate. \n\n\n(4 pts) Recreate the following plot using the loan50 data frame.\n\n\n\n\n\n\n\n\n\n\n(4 pts) Create a bar plot (with differently colored bars) to visualize the distribution of the loans by homeownership. What insights can you draw from this bar plot? \n(4 pts) Recreate the following plot using the loan50 data frame.",
    "crumbs": [
      "Labs",
      "Lab 1"
    ]
  },
  {
    "objectID": "labs/Lab_2.html",
    "href": "labs/Lab_2.html",
    "title": "Data Wrangling & Simple Regression",
    "section": "",
    "text": "In this lab, we’ll be analyzing data from the Human Freedom Index (HFI) reports. The data frame is contained within the openintro package that we have already installed. We will start by doing some basic data transformations (data wrangling), then proceed to summarize a few of the relationships within the data both graphically and numerically in order to find which variables can help tell a story about freedom.\n\n\nCreate a new Quarto document with the title Data Transformations and Linear Regression. Change the output format to pdf (note that it is set to html by default). Refer to lab_00_Guide if you don’t remember how to create a new quarto file. Save the file as lab_02.\nNote that if you created the file correctly, it should appear under files with a .qmd extension(i.e., lab_02.qmd). If you do not have this file exactly as described, please stop and make sure you have it done correctly before you proceed.\nAfter correctly creating the file, click on Render to see the output in pdf format. Note that it may pop up in a new window. You may want to delete the content that comes with the quarto template before you proceed.\n\nIn this lab, you will need four packages: openintro, tidyverse, statsr, and broom. Recall that we have installed the first two but not the last two. So, we start by installing statsr and broom. Run the following code in the console. Note that we are installing multiple packages on one step:\ninstall.packages(\"statsr\", \"broom\")\nAfter installing the two packages, open a code chunk within your quarto document and load all packages needed using the following code:\nlibrary(openintro)\nlibrary(tidyverse)\nlibrary(statsr)\nlibrary(broom)\nRun the code chunk with the packages to ensure that they are all working correctly. Remember to disable the library code output in your rendered pdf from quarto. You may use include=FALSE option.\n\nAs indicated earlier, the data we will work with is called hfi (human freedom index) and is part of the openintro package. All we need to do is create a code chunk and load the data into our quarto file using the following command:\n\nCodedata(hfi)\n\n\nOnce you run the above command, you should be able to see a new object called hfi in the environment area. Click on it to examine the data.\nYou can learn more about the data by running the following command in the console:\n?hfi\nQuestion: How many variables and how many observations are the hfi dataframe?\n\nIt is often claimed that data scientists spend nearly 80 percent of their time getting their data into an easily usable format. This process is often referred to as data wrangling and is quite broad. We are going to learn about a few basic functions that you can use to perform basic data transformations. These include:\n\nselect\nmutate\nfilter\narrange\ngroup_by\ndrop_na\n\n\nThe select function is used to select specific variables (columns) from a larger data set.\nAs you should have noticed, the hfi data frame is very big. Suppose you are only interested in the variables region, pf_expression_control and pf_score. We can use the select function to create a new data frame that has only these three variables. It if often advisable to have a new name for you new data frame. If you use the same name as the original, it will overwrite the original data frame. I have chosen to use the name hfi_new. Run the code below:\n\nCodehfi_new &lt;- hfi %&gt;% \nselect (region,pf_expression_control , pf_score)\n# Pipe hfi into the select function and specify the variables of interest.\n\n\nNote:\n\nBe sure to take a moment to make sure you understand what the code is doing.\nAfter running the above code, a new data frame (hfi_new) should appear in the environment area. Click to make sure it is what you expect to see.\n\nThe mutate function is used for creating a new variable by altering (mutating) existing variable(s) in some way. Suppose, for example, let us say you wanted to convert the expression control variable (pf_expression_control) to percentages. We know that the expression control is measured out of 10. So we can divide each score by 10 and multiply by 100. Use the code below. We will name the new data frame as hfi_new_1:\n\nCodehfi_new_2 &lt;- hfi_new %&gt;% \nmutate(pf_exp_cont_percent= (pf_expression_control/10)*100)\n# The new data frame will now have 4 variables.\n\n\nNote - The new data frame (hfi_new_2) now has 4 variables. - If you wanted to delete the original variable, you can use transmute instead of mutate. - The above example assumes that variable being mutated is numerical, otherwise, the operation may not be possible. How do you mutate a categorical variable?\n\nThe operations we have considered so far focus on columns (variables). We can also work on cases (rows). The filter function is used to choose rows that meet certain characteristics that you may be interested in. Suppose, for example, that we are interested in countries from Eastern Europe only. Let us create a new data frame (call it hfi_new_3) from hfi_new_2. Use the code below:\n\nCodehfi_new_3 &lt;- hfi_new_2 %&gt;% \nfilter (region == \"Eastern Europe\")\n\n\nNote - As expected, the new data frame has only 198 cases (rows). - The number of columns (variables) stays the same as in hfi_new2.\nIf you wanted countries from Eastern Europe OR from Western Europe. To do this, you separate the regions using a | as shown below:\n\nCodehfi_new_4 &lt;- hfi_new_2 %&gt;% \nfilter (region == \"Eastern Europe\"| region== \"Western Europe\")\n\n\n\nGroup_by is a special kind of filtering that is commonly used alongside a summarize function. Suppose you want to compute the average freedom score (pf_score) by region. You can achieve this by piping the data into a group_by function that will group the data according to your wish and then call the summarize function. Run the code below:\n\nCodehfi_new_4 %&gt;% \n  group_by (region) %&gt;%\n  summarize(mean(pf_score))\n\n\nYou may have noticed that the code did not return a value for Eastern Europe. This is because there are some missing values in the data for Eastern Europe. To fix this, you can add one more step in the workflow that will drop the NA values from the pf_score variable. See below:\n\nCodehfi_new_4 %&gt;%\n  drop_na(pf_score)%&gt;% # This is the new step\n  group_by (region) %&gt;%\n  summarize(mean(pf_score))\n\n\n\n\nAs can be seen from the hfi documentation (obtained by running ?hfi in the console), the variable pf_score measures the personal freedom score of a country. The higher the score a country has on pf_score, the more the personal freedoms enjoyed by its people. On the other hand, the variable pf_expression_control measures the extent to which countries place political pressure and controls on the media content. A low score on pf_expression_control means higher controls and political pressure.\nWhat is the relationship between personal freedom score (pf_score) and the personal freedom expression control (pf_expression_contro l) for Western and Eastern European countries? To answer this question, we can create a scatter plot to visualize the relationship. We will use the hfi_new_4 data frame. Use the code below:\n\nCodeggplot(data=hfi_new_4, mapping=aes(x=pf_expression_control, y=pf_score))+\n  geom_point()\n\n\n\n\n\n\n\nNote:\n\nFrom the above scatter plot, we see an increasing (positive) linear trend where countries with low pressure on media (i.e., high score on pf_expression_control) tend to have higher personal freedoms (high scores on pf_score) and vice versa. Furthermore, the relationship appears to be fairly strong with a few suspected outliers on the lower side.\nIn your code above, change the geom_point to geom_jitter. What do you notice?\n\nThe correlation coefficient gives us a numerical measure of the association between two (numerical) variables. It tells us the strength and direction of the association. See the Tidyverse workflow below for doing this:\n\nCodehfi_new_4 %&gt;%\n  drop_na(pf_score, pf_expression_control)%&gt;%\n  summarize(cor(pf_score,pf_expression_control))\n# Notice we first dropped missing values from the two variables\n\n\nYou can also use base R (non-Tidyverse) code as follows but this is generally difficult to read/decode.\n\nCodecor(hfi_new_4$pf_score, hfi_new_4$pf_expression_control, use=\"complete.obs\")\n# Notice we first dropped missing values from the two variables\n\n\nIt is often helpful to generate both scatter plots and correlation coefficient in order to get a complete picture of the relationship.\n\nSuppose we want to use the pf_expression_control variable (predictor) to estimate the values of personal freedom score (pf_score). We can do this by fitting a least squares regression line. We use a function called lm (for linear model) as follows:\n\nCodemodel &lt;- lm(pf_score ~ pf_expression_control, data =hfi_new_4)\n\n\nNote:\n\nThe variable that comes after the ~ is ALWAYS the predictor variable (or x-variable).\nAfter setting the relationship, we must specify the data set. Here we use hfi_new_4.\nWe saved this model as an object called model because we will need it later. This means we won’t have to write the code all over again when we need it.\nTo see the model output, you can click on the object named model in the environment area and identify the slope and intercept for your model.\n\nIt is often useful to visualize the line of best fit. You can achieve this by running the following ggplot commands:\n\nCodeggplot(data =hfi_new_4, aes(x =pf_expression_control, y =pf_score))+ \n  geom_jitter() + \n  geom_smooth(method =\"lm\", se=FALSE, color=\"red\")\n\n\n\n\n\n\n\n\nThe model output seen earlier contains too much information which makes it hard to find what you need. In most cases, we are interested in the intercept, the slope, and perhaps the p-values (for statistical inference). To get a cleaner looking model output, we use the tidy function (contained in broom package. Create a code chunk and run the code below:\n\nCodetidy(model)\n\n# A tibble: 2 × 5\n  term                  estimate std.error statistic   p.value\n  &lt;chr&gt;                    &lt;dbl&gt;     &lt;dbl&gt;     &lt;dbl&gt;     &lt;dbl&gt;\n1 (Intercept)              6.13     0.0791      77.5 1.85e-222\n2 pf_expression_control    0.354    0.0108      32.9 3.44e-109\n\n\nNote:\n\nIf you had not saved the object model you would have to write the code all over again and use that code in place of model in the tidy function above.\nThe formula for the model is \\[\\widehat{ef\\_score}=6.131+0.354 \\times pf\\_expression\\_control\\]\n\n\nInterpretation:\n\nIntercept: On average, the estimated freedom score (ef_score) for a countries with absolute political pressure and control on the media (i.e., pf_expression_control of 0) would be 6.131.\nSlope: Every time we reduce the political control on the media (pf_expression_control) by one unit, the personal freedom score (pf_score) increases by 0.354 on average.\n\nFinally, we can assess model fit using a statistic called coefficient of determination (aka R-squared). This statistic gives the proportion of variability in the response variable that is explained by the explanatory variable. We use the glance() function for this. Use the code below:\n\nCodeglance(model)\n\n# A tibble: 1 × 12\n  r.squared adj.r.squared sigma statistic   p.value    df logLik   AIC   BIC\n      &lt;dbl&gt;         &lt;dbl&gt; &lt;dbl&gt;     &lt;dbl&gt;     &lt;dbl&gt; &lt;dbl&gt;  &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt;\n1     0.756         0.755 0.359     1083. 3.44e-109     1  -138.  283.  294.\n# ℹ 3 more variables: deviance &lt;dbl&gt;, df.residual &lt;int&gt;, nobs &lt;int&gt;\n\n\nNote:\n\nThe \\(R^2\\) value is .7558. This means that up to 75.58% of variability in the personal freedom scores for the countries can be accounted for by the model with pf_expression_control as the predictor.\n\nWe can also run a regression analysis using a categorical variable. Suppose we want to pf_score by country. We want to focus on Western vs Eastern Europe so we will use hfi_new_4 data frame. Before we create anything, we may want to visualize the relationship by way of a scatter plot. You can use the geom_point or the geom_jitter to shake them up a little.\n\nCodeggplot(data=hfi_new_4, aes(x=region, y=pf_score))+\n  geom_point()\n\n\n\n\n\n\nCode# Try switching geom_point to geom_jitter and see what happens.\n\n\n\nBased on the scatter plot, how would you describe the relationship between region and pf_score?\n\nWhen you have a categorical variable, you may create side-by-side box plots. These are great in comparing the distribution of the numerical variable variable by category. Use the code below:\n\nCodeggplot(data=hfi_new_4, aes(x=region, y=pf_score))+\n  geom_boxplot()\n\n\n\n\n\n\n\n\nDescribe the relationship based on the side-by-side box plots.\n\nTo fit a linear model, we use the same code as in the case of two numerical variables. We know that region is the predictor and `pf_score is the outcome. Go region comes after the ~ sign. See code below:\n\nCodemodel_2 &lt;- lm(pf_score ~ region, data =hfi_new_4)\n\n\nYou can then tidy the model using the code:\n\nCodetidy(model_2)\n\n# A tibble: 2 × 5\n  term                 estimate std.error statistic  p.value\n  &lt;chr&gt;                   &lt;dbl&gt;     &lt;dbl&gt;     &lt;dbl&gt;    &lt;dbl&gt;\n1 (Intercept)             8.24     0.0412     200.  0       \n2 regionWestern Europe    0.910    0.0607      15.0 1.50e-39\n\n\nThe formula for the model can be written as: \\[\\widehat{ef\\_score}=8.24+0.91 \\times region\\_WesternEurope\\]\nQuestion:\n\nWhy do we have region_WesternEurope in the model instead of the expected variable name (i.e., region)?\nInterpret the slope and the intercept in context.\n\nYou may want to create a new quarto file for the exercises. This way, it will be easy to keep track of what you are doing and avoid confusion with the work done during class. For this lab you need the same packages used in class (i.e., openintro, tidyverse, statsr, and broom).\n\n(2 pts) Create a new data frame (name it new_hfi) with the variables region, ef_regulation, ef_regulation_business and ef_score. You will need this data frame in the next exercises.\n(2 pts) Create a new data frame (name it new_hfi_1) from new_hfi. The data frame new_hfi_1 should have countries from South Asia or East Asia only. How many cases are in this new data frame?\n(2 pts) Use the group_by function to compute the average ef_score for counties in East Asia and those in South Asia.\n(4 pts) Reproduce the following scatter plot using the new_hfi_1 data frame. What can you say about the relationship between ef_score and ef_regulation for countries in East Asia South Asia?\n\n\n\n\n\n\n\n\n\n\n(2 pts) Compute the correlation coefficient for the variables in exercise 4 above. Comment about the strength of the relationship.\n(6 pts) Suppose we want to create a model for estimating the economic freedom score (ef_score) of countries in East or South Asia based on their business regulation (ef_regulation_business). Create a scatter plot to assess the relationship between the variables. Given the scatter plot, do you think it is appropriate to proceed with linear regression modeling? If yes, create the model and interpret its parameters(i.e., the slope and the intercept) in context. Use your model to estimate the economic freedom score of a country with a business regulation score of 3.9.\n(2 pts) Find the R-squared value for the model in exercise 6 and explain its meaning in context.",
    "crumbs": [
      "Labs",
      "Lab 2"
    ]
  },
  {
    "objectID": "labs/Lab_2.html#introduction",
    "href": "labs/Lab_2.html#introduction",
    "title": "Data Wrangling & Simple Regression",
    "section": "",
    "text": "In this lab, we’ll be analyzing data from the Human Freedom Index (HFI) reports. The data frame is contained within the openintro package that we have already installed. We will start by doing some basic data transformations (data wrangling), then proceed to summarize a few of the relationships within the data both graphically and numerically in order to find which variables can help tell a story about freedom.",
    "crumbs": [
      "Labs",
      "Lab 2"
    ]
  },
  {
    "objectID": "labs/Lab_2.html#creating-a-quarto-file",
    "href": "labs/Lab_2.html#creating-a-quarto-file",
    "title": "Data Wrangling & Simple Regression",
    "section": "",
    "text": "Create a new Quarto document with the title Data Transformations and Linear Regression. Change the output format to pdf (note that it is set to html by default). Refer to lab_00_Guide if you don’t remember how to create a new quarto file. Save the file as lab_02.\nNote that if you created the file correctly, it should appear under files with a .qmd extension(i.e., lab_02.qmd). If you do not have this file exactly as described, please stop and make sure you have it done correctly before you proceed.\nAfter correctly creating the file, click on Render to see the output in pdf format. Note that it may pop up in a new window. You may want to delete the content that comes with the quarto template before you proceed.",
    "crumbs": [
      "Labs",
      "Lab 2"
    ]
  },
  {
    "objectID": "labs/Lab_2.html#packages",
    "href": "labs/Lab_2.html#packages",
    "title": "Data Wrangling & Simple Regression",
    "section": "",
    "text": "In this lab, you will need four packages: openintro, tidyverse, statsr, and broom. Recall that we have installed the first two but not the last two. So, we start by installing statsr and broom. Run the following code in the console. Note that we are installing multiple packages on one step:\ninstall.packages(\"statsr\", \"broom\")\nAfter installing the two packages, open a code chunk within your quarto document and load all packages needed using the following code:\nlibrary(openintro)\nlibrary(tidyverse)\nlibrary(statsr)\nlibrary(broom)\nRun the code chunk with the packages to ensure that they are all working correctly. Remember to disable the library code output in your rendered pdf from quarto. You may use include=FALSE option.",
    "crumbs": [
      "Labs",
      "Lab 2"
    ]
  },
  {
    "objectID": "labs/Lab_2.html#loading-and-viewing-data",
    "href": "labs/Lab_2.html#loading-and-viewing-data",
    "title": "Data Wrangling & Simple Regression",
    "section": "",
    "text": "As indicated earlier, the data we will work with is called hfi (human freedom index) and is part of the openintro package. All we need to do is create a code chunk and load the data into our quarto file using the following command:\n\nCodedata(hfi)\n\n\nOnce you run the above command, you should be able to see a new object called hfi in the environment area. Click on it to examine the data.\nYou can learn more about the data by running the following command in the console:\n?hfi\nQuestion: How many variables and how many observations are the hfi dataframe?",
    "crumbs": [
      "Labs",
      "Lab 2"
    ]
  },
  {
    "objectID": "labs/Lab_2.html#data-transfromations",
    "href": "labs/Lab_2.html#data-transfromations",
    "title": "Data Wrangling & Simple Regression",
    "section": "",
    "text": "It is often claimed that data scientists spend nearly 80 percent of their time getting their data into an easily usable format. This process is often referred to as data wrangling and is quite broad. We are going to learn about a few basic functions that you can use to perform basic data transformations. These include:\n\nselect\nmutate\nfilter\narrange\ngroup_by\ndrop_na\n\n\nThe select function is used to select specific variables (columns) from a larger data set.\nAs you should have noticed, the hfi data frame is very big. Suppose you are only interested in the variables region, pf_expression_control and pf_score. We can use the select function to create a new data frame that has only these three variables. It if often advisable to have a new name for you new data frame. If you use the same name as the original, it will overwrite the original data frame. I have chosen to use the name hfi_new. Run the code below:\n\nCodehfi_new &lt;- hfi %&gt;% \nselect (region,pf_expression_control , pf_score)\n# Pipe hfi into the select function and specify the variables of interest.\n\n\nNote:\n\nBe sure to take a moment to make sure you understand what the code is doing.\nAfter running the above code, a new data frame (hfi_new) should appear in the environment area. Click to make sure it is what you expect to see.\n\nThe mutate function is used for creating a new variable by altering (mutating) existing variable(s) in some way. Suppose, for example, let us say you wanted to convert the expression control variable (pf_expression_control) to percentages. We know that the expression control is measured out of 10. So we can divide each score by 10 and multiply by 100. Use the code below. We will name the new data frame as hfi_new_1:\n\nCodehfi_new_2 &lt;- hfi_new %&gt;% \nmutate(pf_exp_cont_percent= (pf_expression_control/10)*100)\n# The new data frame will now have 4 variables.\n\n\nNote - The new data frame (hfi_new_2) now has 4 variables. - If you wanted to delete the original variable, you can use transmute instead of mutate. - The above example assumes that variable being mutated is numerical, otherwise, the operation may not be possible. How do you mutate a categorical variable?\n\nThe operations we have considered so far focus on columns (variables). We can also work on cases (rows). The filter function is used to choose rows that meet certain characteristics that you may be interested in. Suppose, for example, that we are interested in countries from Eastern Europe only. Let us create a new data frame (call it hfi_new_3) from hfi_new_2. Use the code below:\n\nCodehfi_new_3 &lt;- hfi_new_2 %&gt;% \nfilter (region == \"Eastern Europe\")\n\n\nNote - As expected, the new data frame has only 198 cases (rows). - The number of columns (variables) stays the same as in hfi_new2.\nIf you wanted countries from Eastern Europe OR from Western Europe. To do this, you separate the regions using a | as shown below:\n\nCodehfi_new_4 &lt;- hfi_new_2 %&gt;% \nfilter (region == \"Eastern Europe\"| region== \"Western Europe\")\n\n\n\nGroup_by is a special kind of filtering that is commonly used alongside a summarize function. Suppose you want to compute the average freedom score (pf_score) by region. You can achieve this by piping the data into a group_by function that will group the data according to your wish and then call the summarize function. Run the code below:\n\nCodehfi_new_4 %&gt;% \n  group_by (region) %&gt;%\n  summarize(mean(pf_score))\n\n\nYou may have noticed that the code did not return a value for Eastern Europe. This is because there are some missing values in the data for Eastern Europe. To fix this, you can add one more step in the workflow that will drop the NA values from the pf_score variable. See below:\n\nCodehfi_new_4 %&gt;%\n  drop_na(pf_score)%&gt;% # This is the new step\n  group_by (region) %&gt;%\n  summarize(mean(pf_score))",
    "crumbs": [
      "Labs",
      "Lab 2"
    ]
  },
  {
    "objectID": "labs/Lab_2.html#regression-modeling",
    "href": "labs/Lab_2.html#regression-modeling",
    "title": "Data Wrangling & Simple Regression",
    "section": "",
    "text": "As can be seen from the hfi documentation (obtained by running ?hfi in the console), the variable pf_score measures the personal freedom score of a country. The higher the score a country has on pf_score, the more the personal freedoms enjoyed by its people. On the other hand, the variable pf_expression_control measures the extent to which countries place political pressure and controls on the media content. A low score on pf_expression_control means higher controls and political pressure.\nWhat is the relationship between personal freedom score (pf_score) and the personal freedom expression control (pf_expression_contro l) for Western and Eastern European countries? To answer this question, we can create a scatter plot to visualize the relationship. We will use the hfi_new_4 data frame. Use the code below:\n\nCodeggplot(data=hfi_new_4, mapping=aes(x=pf_expression_control, y=pf_score))+\n  geom_point()\n\n\n\n\n\n\n\nNote:\n\nFrom the above scatter plot, we see an increasing (positive) linear trend where countries with low pressure on media (i.e., high score on pf_expression_control) tend to have higher personal freedoms (high scores on pf_score) and vice versa. Furthermore, the relationship appears to be fairly strong with a few suspected outliers on the lower side.\nIn your code above, change the geom_point to geom_jitter. What do you notice?\n\nThe correlation coefficient gives us a numerical measure of the association between two (numerical) variables. It tells us the strength and direction of the association. See the Tidyverse workflow below for doing this:\n\nCodehfi_new_4 %&gt;%\n  drop_na(pf_score, pf_expression_control)%&gt;%\n  summarize(cor(pf_score,pf_expression_control))\n# Notice we first dropped missing values from the two variables\n\n\nYou can also use base R (non-Tidyverse) code as follows but this is generally difficult to read/decode.\n\nCodecor(hfi_new_4$pf_score, hfi_new_4$pf_expression_control, use=\"complete.obs\")\n# Notice we first dropped missing values from the two variables\n\n\nIt is often helpful to generate both scatter plots and correlation coefficient in order to get a complete picture of the relationship.\n\nSuppose we want to use the pf_expression_control variable (predictor) to estimate the values of personal freedom score (pf_score). We can do this by fitting a least squares regression line. We use a function called lm (for linear model) as follows:\n\nCodemodel &lt;- lm(pf_score ~ pf_expression_control, data =hfi_new_4)\n\n\nNote:\n\nThe variable that comes after the ~ is ALWAYS the predictor variable (or x-variable).\nAfter setting the relationship, we must specify the data set. Here we use hfi_new_4.\nWe saved this model as an object called model because we will need it later. This means we won’t have to write the code all over again when we need it.\nTo see the model output, you can click on the object named model in the environment area and identify the slope and intercept for your model.\n\nIt is often useful to visualize the line of best fit. You can achieve this by running the following ggplot commands:\n\nCodeggplot(data =hfi_new_4, aes(x =pf_expression_control, y =pf_score))+ \n  geom_jitter() + \n  geom_smooth(method =\"lm\", se=FALSE, color=\"red\")\n\n\n\n\n\n\n\n\nThe model output seen earlier contains too much information which makes it hard to find what you need. In most cases, we are interested in the intercept, the slope, and perhaps the p-values (for statistical inference). To get a cleaner looking model output, we use the tidy function (contained in broom package. Create a code chunk and run the code below:\n\nCodetidy(model)\n\n# A tibble: 2 × 5\n  term                  estimate std.error statistic   p.value\n  &lt;chr&gt;                    &lt;dbl&gt;     &lt;dbl&gt;     &lt;dbl&gt;     &lt;dbl&gt;\n1 (Intercept)              6.13     0.0791      77.5 1.85e-222\n2 pf_expression_control    0.354    0.0108      32.9 3.44e-109\n\n\nNote:\n\nIf you had not saved the object model you would have to write the code all over again and use that code in place of model in the tidy function above.\nThe formula for the model is \\[\\widehat{ef\\_score}=6.131+0.354 \\times pf\\_expression\\_control\\]\n\n\nInterpretation:\n\nIntercept: On average, the estimated freedom score (ef_score) for a countries with absolute political pressure and control on the media (i.e., pf_expression_control of 0) would be 6.131.\nSlope: Every time we reduce the political control on the media (pf_expression_control) by one unit, the personal freedom score (pf_score) increases by 0.354 on average.\n\nFinally, we can assess model fit using a statistic called coefficient of determination (aka R-squared). This statistic gives the proportion of variability in the response variable that is explained by the explanatory variable. We use the glance() function for this. Use the code below:\n\nCodeglance(model)\n\n# A tibble: 1 × 12\n  r.squared adj.r.squared sigma statistic   p.value    df logLik   AIC   BIC\n      &lt;dbl&gt;         &lt;dbl&gt; &lt;dbl&gt;     &lt;dbl&gt;     &lt;dbl&gt; &lt;dbl&gt;  &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt;\n1     0.756         0.755 0.359     1083. 3.44e-109     1  -138.  283.  294.\n# ℹ 3 more variables: deviance &lt;dbl&gt;, df.residual &lt;int&gt;, nobs &lt;int&gt;\n\n\nNote:\n\nThe \\(R^2\\) value is .7558. This means that up to 75.58% of variability in the personal freedom scores for the countries can be accounted for by the model with pf_expression_control as the predictor.\n\nWe can also run a regression analysis using a categorical variable. Suppose we want to pf_score by country. We want to focus on Western vs Eastern Europe so we will use hfi_new_4 data frame. Before we create anything, we may want to visualize the relationship by way of a scatter plot. You can use the geom_point or the geom_jitter to shake them up a little.\n\nCodeggplot(data=hfi_new_4, aes(x=region, y=pf_score))+\n  geom_point()\n\n\n\n\n\n\nCode# Try switching geom_point to geom_jitter and see what happens.\n\n\n\nBased on the scatter plot, how would you describe the relationship between region and pf_score?\n\nWhen you have a categorical variable, you may create side-by-side box plots. These are great in comparing the distribution of the numerical variable variable by category. Use the code below:\n\nCodeggplot(data=hfi_new_4, aes(x=region, y=pf_score))+\n  geom_boxplot()\n\n\n\n\n\n\n\n\nDescribe the relationship based on the side-by-side box plots.\n\nTo fit a linear model, we use the same code as in the case of two numerical variables. We know that region is the predictor and `pf_score is the outcome. Go region comes after the ~ sign. See code below:\n\nCodemodel_2 &lt;- lm(pf_score ~ region, data =hfi_new_4)\n\n\nYou can then tidy the model using the code:\n\nCodetidy(model_2)\n\n# A tibble: 2 × 5\n  term                 estimate std.error statistic  p.value\n  &lt;chr&gt;                   &lt;dbl&gt;     &lt;dbl&gt;     &lt;dbl&gt;    &lt;dbl&gt;\n1 (Intercept)             8.24     0.0412     200.  0       \n2 regionWestern Europe    0.910    0.0607      15.0 1.50e-39\n\n\nThe formula for the model can be written as: \\[\\widehat{ef\\_score}=8.24+0.91 \\times region\\_WesternEurope\\]\nQuestion:\n\nWhy do we have region_WesternEurope in the model instead of the expected variable name (i.e., region)?\nInterpret the slope and the intercept in context.",
    "crumbs": [
      "Labs",
      "Lab 2"
    ]
  },
  {
    "objectID": "labs/Lab_2.html#exercises",
    "href": "labs/Lab_2.html#exercises",
    "title": "Data Wrangling & Simple Regression",
    "section": "",
    "text": "You may want to create a new quarto file for the exercises. This way, it will be easy to keep track of what you are doing and avoid confusion with the work done during class. For this lab you need the same packages used in class (i.e., openintro, tidyverse, statsr, and broom).\n\n(2 pts) Create a new data frame (name it new_hfi) with the variables region, ef_regulation, ef_regulation_business and ef_score. You will need this data frame in the next exercises.\n(2 pts) Create a new data frame (name it new_hfi_1) from new_hfi. The data frame new_hfi_1 should have countries from South Asia or East Asia only. How many cases are in this new data frame?\n(2 pts) Use the group_by function to compute the average ef_score for counties in East Asia and those in South Asia.\n(4 pts) Reproduce the following scatter plot using the new_hfi_1 data frame. What can you say about the relationship between ef_score and ef_regulation for countries in East Asia South Asia?\n\n\n\n\n\n\n\n\n\n\n(2 pts) Compute the correlation coefficient for the variables in exercise 4 above. Comment about the strength of the relationship.\n(6 pts) Suppose we want to create a model for estimating the economic freedom score (ef_score) of countries in East or South Asia based on their business regulation (ef_regulation_business). Create a scatter plot to assess the relationship between the variables. Given the scatter plot, do you think it is appropriate to proceed with linear regression modeling? If yes, create the model and interpret its parameters(i.e., the slope and the intercept) in context. Use your model to estimate the economic freedom score of a country with a business regulation score of 3.9.\n(2 pts) Find the R-squared value for the model in exercise 6 and explain its meaning in context.",
    "crumbs": [
      "Labs",
      "Lab 2"
    ]
  },
  {
    "objectID": "ae/ae-05-majors-tidying-A.html",
    "href": "ae/ae-05-majors-tidying-A.html",
    "title": "AE 05: Tidying StatSci Majors",
    "section": "",
    "text": "Important\n\n\n\nThese are suggested answers. This document should be used as reference only, it’s not designed to be an exhaustive key."
  },
  {
    "objectID": "ae/ae-05-majors-tidying-A.html#goal",
    "href": "ae/ae-05-majors-tidying-A.html#goal",
    "title": "AE 05: Tidying StatSci Majors",
    "section": "Goal",
    "text": "Goal\nOur ultimate goal in this application exercise is to make the following data visualization."
  },
  {
    "objectID": "ae/ae-05-majors-tidying-A.html#data",
    "href": "ae/ae-05-majors-tidying-A.html#data",
    "title": "AE 05: Tidying StatSci Majors",
    "section": "Data",
    "text": "Data\nThe data come from the Office of the University Registrar. They make the data available as a table that you can download as a PDF, but I’ve put the data exported in a CSV file for you. Let’s load that in.\n\nlibrary(tidyverse)\n\nstatsci &lt;- read_csv(\"https://sta199-s24.github.io/data/statsci.csv\")\n\nAnd let’s take a look at the data.\n\nstatsci\n\n# A tibble: 4 × 14\n  degree   `2011` `2012` `2013` `2014` `2015` `2016` `2017` `2018` `2019` `2020`\n  &lt;chr&gt;     &lt;dbl&gt;  &lt;dbl&gt;  &lt;dbl&gt;  &lt;dbl&gt;  &lt;dbl&gt;  &lt;dbl&gt;  &lt;dbl&gt;  &lt;dbl&gt;  &lt;dbl&gt;  &lt;dbl&gt;\n1 Statist…     NA      1     NA     NA      4      4      1     NA     NA      1\n2 Statist…      2      2      4      1      3      6      3      4      4      1\n3 Statist…      2      6      1     NA      5      6      6      8      8     17\n4 Statist…      5      9      4     13     10     17     24     21     26     27\n# ℹ 3 more variables: `2021` &lt;dbl&gt;, `2022` &lt;dbl&gt;, `2023` &lt;dbl&gt;"
  },
  {
    "objectID": "ae/ae-05-majors-tidying-A.html#pivoting",
    "href": "ae/ae-05-majors-tidying-A.html#pivoting",
    "title": "AE 05: Tidying StatSci Majors",
    "section": "Pivoting",
    "text": "Pivoting\n\nDemo: Pivot the statsci data frame longer such that each row represents a degree type / year combination and year and number of graduates for that year are columns in the data frame.\n\n\nstatsci |&gt;\n  pivot_longer(\n    cols = -degree,\n    names_to = \"year\",\n    values_to = \"n\"\n  )\n\n# A tibble: 52 × 3\n   degree                    year      n\n   &lt;chr&gt;                     &lt;chr&gt; &lt;dbl&gt;\n 1 Statistical Science (AB2) 2011     NA\n 2 Statistical Science (AB2) 2012      1\n 3 Statistical Science (AB2) 2013     NA\n 4 Statistical Science (AB2) 2014     NA\n 5 Statistical Science (AB2) 2015      4\n 6 Statistical Science (AB2) 2016      4\n 7 Statistical Science (AB2) 2017      1\n 8 Statistical Science (AB2) 2018     NA\n 9 Statistical Science (AB2) 2019     NA\n10 Statistical Science (AB2) 2020      1\n# ℹ 42 more rows\n\n\n\nQuestion: What is the type of the year variable? Why? What should it be?\n\nIt’s a character (chr) variable since the information came from the columns of the original data frame and R cannot know that these character strings represent years. The variable type should be numeric.\n\nDemo: Start over with pivoting, and this time also make sure year is a numerical variable in the resulting data frame.\n\n\nstatsci |&gt;\n  pivot_longer(\n    cols = -degree,\n    names_to = \"year\",\n    names_transform = as.numeric,\n    values_to = \"n\"\n  )\n\n# A tibble: 52 × 3\n   degree                     year     n\n   &lt;chr&gt;                     &lt;dbl&gt; &lt;dbl&gt;\n 1 Statistical Science (AB2)  2011    NA\n 2 Statistical Science (AB2)  2012     1\n 3 Statistical Science (AB2)  2013    NA\n 4 Statistical Science (AB2)  2014    NA\n 5 Statistical Science (AB2)  2015     4\n 6 Statistical Science (AB2)  2016     4\n 7 Statistical Science (AB2)  2017     1\n 8 Statistical Science (AB2)  2018    NA\n 9 Statistical Science (AB2)  2019    NA\n10 Statistical Science (AB2)  2020     1\n# ℹ 42 more rows\n\n\n\nQuestion: What does an NA mean in this context? Hint: The data come from the university registrar, and they have records on every single graduates, there shouldn’t be anything “unknown” to them about who graduated when.\n\nNAs should actually be 0s.\n\nDemo: Add on to your pipeline that you started with pivoting and convert NAs in n to 0s.\n\n\nstatsci |&gt;\n  pivot_longer(\n    cols = -degree,\n    names_to = \"year\",\n    names_transform = as.numeric,\n    values_to = \"n\"\n  ) |&gt;\n  mutate(n = if_else(is.na(n), 0, n))\n\n# A tibble: 52 × 3\n   degree                     year     n\n   &lt;chr&gt;                     &lt;dbl&gt; &lt;dbl&gt;\n 1 Statistical Science (AB2)  2011     0\n 2 Statistical Science (AB2)  2012     1\n 3 Statistical Science (AB2)  2013     0\n 4 Statistical Science (AB2)  2014     0\n 5 Statistical Science (AB2)  2015     4\n 6 Statistical Science (AB2)  2016     4\n 7 Statistical Science (AB2)  2017     1\n 8 Statistical Science (AB2)  2018     0\n 9 Statistical Science (AB2)  2019     0\n10 Statistical Science (AB2)  2020     1\n# ℹ 42 more rows\n\n\n\nDemo: In our plot the degree types are BS, BS2, AB, and AB2. This information is in our dataset, in the degree column, but this column also has additional characters we don’t need. Create a new column called degree_type with levels BS, BS2, AB, and AB2 (in this order) based on degree. Do this by adding on to your pipeline from earlier.\n\n\nstatsci |&gt;\n  pivot_longer(\n    cols = -degree,\n    names_to = \"year\",\n    names_transform = as.numeric,\n    values_to = \"n\"\n  ) |&gt;\n  mutate(n = if_else(is.na(n), 0, n)) |&gt;\n  separate(degree, sep = \" \\\\(\", into = c(\"major\", \"degree_type\")) |&gt;\n  mutate(\n    degree_type = str_remove(degree_type, \"\\\\)\"),\n    degree_type = fct_relevel(degree_type, \"BS\", \"BS2\", \"AB\", \"AB2\")\n    )\n\n# A tibble: 52 × 4\n   major               degree_type  year     n\n   &lt;chr&gt;               &lt;fct&gt;       &lt;dbl&gt; &lt;dbl&gt;\n 1 Statistical Science AB2          2011     0\n 2 Statistical Science AB2          2012     1\n 3 Statistical Science AB2          2013     0\n 4 Statistical Science AB2          2014     0\n 5 Statistical Science AB2          2015     4\n 6 Statistical Science AB2          2016     4\n 7 Statistical Science AB2          2017     1\n 8 Statistical Science AB2          2018     0\n 9 Statistical Science AB2          2019     0\n10 Statistical Science AB2          2020     1\n# ℹ 42 more rows\n\n\n\nYour turn (5 minutes): Now we start making our plot, but let’s not get too fancy right away. Create the following plot, which will serve as the “first draft” on the way to our Goal. Do this by adding on to your pipeline from earlier.\n\n\n\n\n\n\n\nstatsci |&gt;\n  pivot_longer(\n    cols = -degree,\n    names_to = \"year\",\n    names_transform = as.numeric,\n    values_to = \"n\"\n  ) |&gt;\n  mutate(n = if_else(is.na(n), 0, n)) |&gt;\n  separate(degree, sep = \" \\\\(\", into = c(\"major\", \"degree_type\")) |&gt;\n  mutate(\n    degree_type = str_remove(degree_type, \"\\\\)\"),\n    degree_type = fct_relevel(degree_type, \"BS\", \"BS2\", \"AB\", \"AB2\")\n    ) |&gt;\n  ggplot(aes(x = year, y = n, color = degree_type)) +\n  geom_point() +\n  geom_line()\n\n\n\n\n\n\n\n\n\nYour turn (4 minutes): What aspects of the plot need to be updated to go from the draft you created above to the Goal plot at the beginning of this application exercise.\n\nx-axis scale: need to go from 2011 to 2023 in increments of 2 years\nline colors\naxis labels: title, subtitle, x, y, caption\ntheme\nlegend position and border\n\nDemo: Update x-axis scale such that the years displayed go from 2011 to 2023 in increments of 2 years. Do this by adding on to your pipeline from earlier.\n\n\nstatsci |&gt;\n  pivot_longer(\n    cols = -degree,\n    names_to = \"year\",\n    names_transform = as.numeric,\n    values_to = \"n\"\n  ) |&gt;\n  mutate(n = if_else(is.na(n), 0, n)) |&gt;\n  separate(degree, sep = \" \\\\(\", into = c(\"major\", \"degree_type\")) |&gt;\n  mutate(\n    degree_type = str_remove(degree_type, \"\\\\)\"),\n    degree_type = fct_relevel(degree_type, \"BS\", \"BS2\", \"AB\", \"AB2\")\n    ) |&gt;\n  ggplot(aes(x = year, y = n, color = degree_type)) +\n  geom_point() +\n  geom_line() +\n  scale_x_continuous(breaks = seq(2011, 2023, 2))\n\n\n\n\n\n\n\n\n\nDemo: Update line colors using the following level / color assignments. Once again, do this by adding on to your pipeline from earlier.\n\n“BS” = “cadetblue4”\n“BS2” = “cadetblue3”\n“AB” = “lightgoldenrod4”\n“AB2” = “lightgoldenrod3”\n\n\n\nstatsci |&gt;\n  pivot_longer(\n    cols = -degree,\n    names_to = \"year\",\n    names_transform = as.numeric,\n    values_to = \"n\"\n  ) |&gt;\n  mutate(n = if_else(is.na(n), 0, n)) |&gt;\n  separate(degree, sep = \" \\\\(\", into = c(\"major\", \"degree_type\")) |&gt;\n  mutate(\n    degree_type = str_remove(degree_type, \"\\\\)\"),\n    degree_type = fct_relevel(degree_type, \"BS\", \"BS2\", \"AB\", \"AB2\")\n    ) |&gt;\n  ggplot(aes(x = year, y = n, color = degree_type)) +\n  geom_point() +\n  geom_line() +\n  scale_x_continuous(breaks = seq(2011, 2023, 2)) +\n  scale_color_manual(\n    values = c(\"BS\" = \"cadetblue4\", \n               \"BS2\" = \"cadetblue3\", \n               \"AB\" = \"lightgoldenrod4\", \n               \"AB2\" = \"lightgoldenrod3\"))\n\n\n\n\n\n\n\n\n\nYour turn (4 minutes): Update the plot labels (title, subtitle, x, y, and caption) and use theme_minimal(). Once again, do this by adding on to your pipeline from earlier.\n\n\nstatsci |&gt;\n  pivot_longer(\n    cols = -degree,\n    names_to = \"year\",\n    names_transform = as.numeric,\n    values_to = \"n\"\n  ) |&gt;\n  mutate(n = if_else(is.na(n), 0, n)) |&gt;\n  separate(degree, sep = \" \\\\(\", into = c(\"major\", \"degree_type\")) |&gt;\n  mutate(\n    degree_type = str_remove(degree_type, \"\\\\)\"),\n    degree_type = fct_relevel(degree_type, \"BS\", \"BS2\", \"AB\", \"AB2\")\n    ) |&gt;\n  ggplot(aes(x = year, y = n, color = degree_type)) +\n  geom_point() +\n  geom_line() +\n  scale_x_continuous(breaks = seq(2011, 2023, 2)) +\n  scale_color_manual(\n    values = c(\"BS\" = \"cadetblue4\",\n               \"BS2\" = \"cadetblue3\",\n               \"AB\" = \"lightgoldenrod4\",\n               \"AB2\" = \"lightgoldenrod3\")) +\n  labs(\n    x = \"Graduation year\",\n    y = \"Number of majors graduating\",\n    color = \"Degree type\",\n    title = \"Statistical Science majors over the years\",\n    subtitle = \"Academic years 2011 - 2023\",\n    caption = \"Source: Office of the University Registrar\\nhttps://registrar.duke.edu/registration/enrollment-statistics\"\n  ) +\n  theme_minimal()\n\n\n\n\n\n\n\n\n\nDemo: Finally, adding to your pipeline you’ve developed so far, move the legend into the plot, make its background white, and its border gray. Set fig-width: 7 and fig-height: 5 for your plot in the chunk options.\n\n\nstatsci |&gt;\n  pivot_longer(\n    cols = -degree,\n    names_to = \"year\",\n    names_transform = as.numeric,\n    values_to = \"n\"\n  ) |&gt;\n  mutate(n = if_else(is.na(n), 0, n)) |&gt;\n  separate(degree, sep = \" \\\\(\", into = c(\"major\", \"degree_type\")) |&gt;\n  mutate(\n    degree_type = str_remove(degree_type, \"\\\\)\"),\n    degree_type = fct_relevel(degree_type, \"BS\", \"BS2\", \"AB\", \"AB2\")\n    ) |&gt;\n  ggplot(aes(x = year, y = n, color = degree_type)) +\n  geom_point() +\n  geom_line() +\n  scale_x_continuous(breaks = seq(2011, 2023, 2)) +\n  scale_color_manual(\n    values = c(\"BS\" = \"cadetblue4\",\n               \"BS2\" = \"cadetblue3\",\n               \"AB\" = \"lightgoldenrod4\",\n               \"AB2\" = \"lightgoldenrod3\")) +\n  labs(\n    x = \"Graduation year\",\n    y = \"Number of majors graduating\",\n    color = \"Degree type\",\n    title = \"Statistical Science majors over the years\",\n    subtitle = \"Academic years 2011 - 2023\",\n    caption = \"Source: Office of the University Registrar\\nhttps://registrar.duke.edu/registration/enrollment-statistics\"\n  ) +\n  theme_minimal() +\n  theme(\n    legend.position = c(0.2, 0.8),\n    legend.background = element_rect(fill = \"white\", color = \"gray\")\n    )"
  },
  {
    "objectID": "ae/ae-14-spam-filter-A.html",
    "href": "ae/ae-14-spam-filter-A.html",
    "title": "Building a spam filter",
    "section": "",
    "text": "In this application exercise, we will\nTo illustrate logistic regression, we will build a spam filter from email data.\nThe data come from incoming emails in David Diez’s (one of the authors of OpenIntro textbooks) Gmail account for the first three months of 2012. All personally identifiable information has been removed.\nlibrary(tidyverse)\nlibrary(tidymodels)\nlibrary(openintro)\nglimpse(email)\n\nRows: 3,921\nColumns: 21\n$ spam         &lt;fct&gt; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, …\n$ to_multiple  &lt;fct&gt; 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, …\n$ from         &lt;fct&gt; 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, …\n$ cc           &lt;int&gt; 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 2, 1, 0, 2, 0, …\n$ sent_email   &lt;fct&gt; 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, …\n$ time         &lt;dttm&gt; 2012-01-01 01:16:41, 2012-01-01 02:03:59, 2012-01-01 11:…\n$ image        &lt;dbl&gt; 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, …\n$ attach       &lt;dbl&gt; 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, …\n$ dollar       &lt;dbl&gt; 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 5, 0, 0, …\n$ winner       &lt;fct&gt; no, no, no, no, no, no, no, no, no, no, no, no, no, no, n…\n$ inherit      &lt;dbl&gt; 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, …\n$ viagra       &lt;dbl&gt; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, …\n$ password     &lt;dbl&gt; 0, 0, 0, 0, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, …\n$ num_char     &lt;dbl&gt; 11.370, 10.504, 7.773, 13.256, 1.231, 1.091, 4.837, 7.421…\n$ line_breaks  &lt;int&gt; 202, 202, 192, 255, 29, 25, 193, 237, 69, 68, 25, 79, 191…\n$ format       &lt;fct&gt; 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, …\n$ re_subj      &lt;fct&gt; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 1, …\n$ exclaim_subj &lt;dbl&gt; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, …\n$ urgent_subj  &lt;fct&gt; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, …\n$ exclaim_mess &lt;dbl&gt; 0, 1, 6, 48, 1, 1, 1, 18, 1, 0, 2, 1, 0, 10, 4, 10, 20, 0…\n$ number       &lt;fct&gt; big, small, small, small, none, none, big, small, small, …\nThe variables we’ll use in this analysis are\nGoal: Use the number of exclamation points in an email to predict whether or not it is spam."
  },
  {
    "objectID": "ae/ae-14-spam-filter-A.html#exercise-1",
    "href": "ae/ae-14-spam-filter-A.html#exercise-1",
    "title": "Building a spam filter",
    "section": "Exercise 1",
    "text": "Exercise 1\n\nDemo: Fit the logistic regression model using the number of exclamation points to predict the probability an email is spam.\n\n\nlog_fit &lt;- logistic_reg() |&gt;\n  fit(spam ~ exclaim_mess, data = email)\n\ntidy(log_fit)\n\n# A tibble: 2 × 5\n  term          estimate std.error statistic p.value\n  &lt;chr&gt;            &lt;dbl&gt;     &lt;dbl&gt;     &lt;dbl&gt;   &lt;dbl&gt;\n1 (Intercept)  -2.27      0.0553     -41.1     0    \n2 exclaim_mess  0.000272  0.000949     0.287   0.774\n\n\n\nYour turn: How does the code above differ from previous code we’ve used to fit regression models? Compare your summary output to the estimated model below.\n\n\\[\\log\\Big(\\frac{p}{1-p}\\Big) = -2.27 - 0.000272 \\times exclaim\\_mess\\]\nWe use logistic instead of linear regression."
  },
  {
    "objectID": "ae/ae-14-spam-filter-A.html#exercise-2",
    "href": "ae/ae-14-spam-filter-A.html#exercise-2",
    "title": "Building a spam filter",
    "section": "Exercise 2",
    "text": "Exercise 2\nWhat is the probability the email is spam if it contains 10 exclamation points? Answer the question using the predict() function.\nWe can use the predict function in R to produce the probability as well.\n\nep_10 &lt;- tibble(exclaim_mess = 10)\npredict(log_fit, ep_10, type = \"prob\")\n\n# A tibble: 1 × 2\n  .pred_0 .pred_1\n    &lt;dbl&gt;   &lt;dbl&gt;\n1   0.906  0.0937"
  },
  {
    "objectID": "ae/ae-14-spam-filter-A.html#exercise-3",
    "href": "ae/ae-14-spam-filter-A.html#exercise-3",
    "title": "Building a spam filter",
    "section": "Exercise 3",
    "text": "Exercise 3\nWe have the probability an email is spam, but ultimately we want to use the probability to classify an email as spam or not spam. Therefore, we need to set a decision-making threshold, such that an email is classified as spam if the predicted probability is greater than the threshold and not spam otherwise.\nSuppose you are a data scientist working on a spam filter. You must determine how high the predicted probability must be before you think it would be reasonable to call it spam and put it in the junk folder (which the user is unlikely to check).\nYour turn: What are some trade offs you would consider as you set the decision-making threshold? Discuss with your neighbor.\nAnswers will vary.\n\naugment(log_fit, email) |&gt;\n  select(spam, exclaim_mess, .pred_class) |&gt;\n  ggplot(aes(x = exclaim_mess, y = spam, color = .pred_class)) +\n  geom_jitter(alpha = 0.5)"
  },
  {
    "objectID": "ae/ae-14-spam-filter-A.html#exercise-4",
    "href": "ae/ae-14-spam-filter-A.html#exercise-4",
    "title": "Building a spam filter",
    "section": "Exercise 4",
    "text": "Exercise 4\nFit a model with all variables in the dataset as predictors and recreate the visualization above for this model.\n\nlog_fit2 &lt;- logistic_reg() |&gt;\n  fit(spam ~ ., data = email)\n\nWarning: glm.fit: fitted probabilities numerically 0 or 1 occurred\n\nlog_aug2 &lt;- augment(log_fit2, email)\n\nggplot(log_aug2, aes(x = exclaim_mess, y = spam, color = .pred_class)) +\n  geom_jitter(alpha = 0.5)\n\n\n\n\n\n\n\n\n\nlog_aug2 |&gt;\n  count(spam, .pred_class) |&gt;\n  group_by(spam) |&gt;\n  mutate(p = n / sum(n))\n\n# A tibble: 4 × 4\n# Groups:   spam [2]\n  spam  .pred_class     n       p\n  &lt;fct&gt; &lt;fct&gt;       &lt;int&gt;   &lt;dbl&gt;\n1 0     0            3521 0.991  \n2 0     1              33 0.00929\n3 1     0             299 0.815  \n4 1     1              68 0.185"
  },
  {
    "objectID": "ae/ae-15-duke-forest-bootstrap-A.html",
    "href": "ae/ae-15-duke-forest-bootstrap-A.html",
    "title": "AE 15: Modeling houses in Duke Forest",
    "section": "",
    "text": "In this application exercise, we will\nThe dataset are on housing prices in Duke Forest – a dataset you’ve seen before! It’s called duke_forest and it’s in the openintro package. Additionally, we’ll use tidyverse and tidymodels packages.\nlibrary(tidyverse)\nlibrary(tidymodels)\nlibrary(openintro)"
  },
  {
    "objectID": "ae/ae-15-duke-forest-bootstrap-A.html#exercise-1",
    "href": "ae/ae-15-duke-forest-bootstrap-A.html#exercise-1",
    "title": "AE 15: Modeling houses in Duke Forest",
    "section": "Exercise 1",
    "text": "Exercise 1\nVisualize the distribution of sizes of houses in Duke Forest. What is the size of a typical house?\n\nggplot(duke_forest, aes(x = area)) +\n  geom_histogram(binwidth = 250)"
  },
  {
    "objectID": "ae/ae-15-duke-forest-bootstrap-A.html#exercise-2",
    "href": "ae/ae-15-duke-forest-bootstrap-A.html#exercise-2",
    "title": "AE 15: Modeling houses in Duke Forest",
    "section": "Exercise 2",
    "text": "Exercise 2\nConstruct a 95% confidence interval for the typical size of a house in Duke Forest. Interpret the interval in context of the data.\n\nset.seed(12345)\ndf_araa_median_boot &lt;- duke_forest |&gt;\n  specify(response = area) |&gt;\n  generate(reps = 100, type = \"bootstrap\") |&gt;\n  calculate(stat = \"median\")\n\nggplot(df_araa_median_boot, aes(x = stat)) +\n  geom_histogram(binwidth = 50)\n\n\n\n\n\n\n\ndf_araa_median_boot |&gt;\n  summarize(\n    l = quantile(stat, 0.025),\n    u = quantile(stat, 0.975)\n  )\n\n# A tibble: 1 × 2\n      l     u\n  &lt;dbl&gt; &lt;dbl&gt;\n1 2365. 2836.\n\n\nWe are 95% confident that the median house in Duke Forest is between 2,365 and 2,836 square feet."
  },
  {
    "objectID": "ae/ae-15-duke-forest-bootstrap-A.html#exercise-3",
    "href": "ae/ae-15-duke-forest-bootstrap-A.html#exercise-3",
    "title": "AE 15: Modeling houses in Duke Forest",
    "section": "Exercise 3",
    "text": "Exercise 3\nWithout calculating it – would a 90% confidence interval be wider or narrower? Why?\nNarrower, lower confidence level needed so we can be more precise."
  },
  {
    "objectID": "ae/ae-15-duke-forest-bootstrap-A.html#exercise-4",
    "href": "ae/ae-15-duke-forest-bootstrap-A.html#exercise-4",
    "title": "AE 15: Modeling houses in Duke Forest",
    "section": "Exercise 4",
    "text": "Exercise 4\nConstruct the 90% confidence interval and interpret it.\n\ndf_araa_median_boot |&gt;\n  summarize(\n    l = quantile(stat, 0.05),\n    u = quantile(stat, 0.95)\n  )\n\n# A tibble: 1 × 2\n      l     u\n  &lt;dbl&gt; &lt;dbl&gt;\n1 2395.  2830\n\n\nWe are 95% confident that the median house in Duke Forest is between 2,395 and 2,830 square feet."
  },
  {
    "objectID": "ae/ae-15-duke-forest-bootstrap-A.html#exercise-5",
    "href": "ae/ae-15-duke-forest-bootstrap-A.html#exercise-5",
    "title": "AE 15: Modeling houses in Duke Forest",
    "section": "Exercise 5",
    "text": "Exercise 5\nQuantify the uncertainty around this slope using a 95% bootstrap confidence interval and interpret the interval in context of the data.\n\ndf_price_area_boot &lt;- duke_forest |&gt;\n  specify(price ~ area) |&gt;\n  generate(reps = 1000, type = \"bootstrap\") |&gt;\n  calculate(stat = \"slope\")\n\nggplot(df_price_area_boot, aes(x = stat)) +\n  geom_histogram(binwidth = 10)\n\n\n\n\n\n\n\ndf_price_area_boot |&gt;\n  summarize(\n    l = quantile(stat, 0.025),\n    u = quantile(stat, 0.975)\n  )\n\n# A tibble: 1 × 2\n      l     u\n  &lt;dbl&gt; &lt;dbl&gt;\n1  89.9  214.\n\n\nWe are 95% confident that, for each additional square feet, the model predicts that prices of houses in Duke Forest are higher by $89.9 to $214, on average."
  },
  {
    "objectID": "ae/ae-11-modeling-penguins-A.html",
    "href": "ae/ae-11-modeling-penguins-A.html",
    "title": "AE 11: Modelling penguins",
    "section": "",
    "text": "In this application exercise we will be studying penguins. The data can be found in the palmerpenguins package and we will use tidyverse and tidymodels for data exploration and modeling, respectively.\n\nlibrary(tidyverse)\nlibrary(tidymodels)\nlibrary(palmerpenguins)\n\nPlease read the following context and take a glimpse at the data set before we get started.\n\nThis data set comprising various measurements of three different penguin species, namely Adelie, Gentoo, and Chinstrap. The rigorous study was conducted in the islands of the Palmer Archipelago, Antarctica. These data were collected from 2007 to 2009 by Dr. Kristen Gorman with the Palmer Station Long Term Ecological Research Program, part of the US Long Term Ecological Research Network. The data set is called penguins.\n\n\nglimpse(penguins)\n\nRows: 344\nColumns: 8\n$ species           &lt;fct&gt; Adelie, Adelie, Adelie, Adelie, Adelie, Adelie, Adel…\n$ island            &lt;fct&gt; Torgersen, Torgersen, Torgersen, Torgersen, Torgerse…\n$ bill_length_mm    &lt;dbl&gt; 39.1, 39.5, 40.3, NA, 36.7, 39.3, 38.9, 39.2, 34.1, …\n$ bill_depth_mm     &lt;dbl&gt; 18.7, 17.4, 18.0, NA, 19.3, 20.6, 17.8, 19.6, 18.1, …\n$ flipper_length_mm &lt;int&gt; 181, 186, 195, NA, 193, 190, 181, 195, 193, 190, 186…\n$ body_mass_g       &lt;int&gt; 3750, 3800, 3250, NA, 3450, 3650, 3625, 4675, 3475, …\n$ sex               &lt;fct&gt; male, female, female, NA, female, male, female, male…\n$ year              &lt;int&gt; 2007, 2007, 2007, 2007, 2007, 2007, 2007, 2007, 2007…\n\n\nOur goal is to understand better how various body measurements and attributes of penguins relate to their body mass. First, we are going to investigate the relationship between a penguins’ flipper lengths and their body masses.\n\nQuestion: Based on our research focus, which variable is the response variable?\n\nBody mass.\n\nDemo: Visualize the relationship between flipper length and body mass of penguins.\n\n\nggplot(penguins, aes(x = flipper_length_mm, y = body_mass_g)) +\n  geom_point()\n\nWarning: Removed 2 rows containing missing values (`geom_point()`).\n\n\n\n\n\n\n\n\n\n\nCorrelation\n\nYour turn (5 minutes):\n\nWhat is correlation? What values can correlation take?\nStrength and direction of a linear relationship. It’s bounded by -1 and 1.\nAre you good at guessing correlation? Give it a try! https://www.rossmanchance.com/applets/2021/guesscorrelation/GuessCorrelation.html\n\nDemo: What is the correlation between flipper length and body mass of penguins?\n\n\n# option 1\npenguins |&gt;\n  summarize(r = cor(flipper_length_mm, body_mass_g, use = \"complete.obs\"))\n\n# A tibble: 1 × 1\n      r\n  &lt;dbl&gt;\n1 0.871\n\n# option 2\npenguins |&gt;\n  drop_na(flipper_length_mm, body_mass_g) |&gt;\n  summarize(r = cor(flipper_length_mm, body_mass_g))\n\n# A tibble: 1 × 1\n      r\n  &lt;dbl&gt;\n1 0.871\n\n\n\n\nDefining, fitting, and summarizing a model\n\nDemo: Write the population model below that explains the relationship between body mass and flipper length.\n\n\\[\nbody~mass = \\beta_0 + \\beta_1 \\times flipper~length + \\epsilon\n\\]\n\nDemo: Fit the linear regression model and display the results. Write the estimated model output below.\n\n\nbm_fl_fit &lt;- linear_reg() |&gt;\n  fit(body_mass_g ~ flipper_length_mm, data = penguins)\n\ntidy(bm_fl_fit)\n\n# A tibble: 2 × 5\n  term              estimate std.error statistic   p.value\n  &lt;chr&gt;                &lt;dbl&gt;     &lt;dbl&gt;     &lt;dbl&gt;     &lt;dbl&gt;\n1 (Intercept)        -5781.     306.       -18.9 5.59e- 55\n2 flipper_length_mm     49.7      1.52      32.7 4.37e-107\n\n\n\\[\n\\widehat{body~mass} = -5781 + 49.7 \\times flipper~length\n\\]\n\nYour turn: Interpret the slope and the intercept in the context of the data.\n\nIntercept: Penguins with 0 flipper length are expected, on average, to weigh 5,781 grams.\nSlopes: For each additional millimeter of a penguin;s flipper length, the weight of their penguin is expected to be higher, on average, by 49.7 grams.\n\nYour turn: Recreate the visualization from above, this time adding a regression line to the visualization geom_smooth(method = \"lm\").\n\n\nggplot(penguins,\n       aes(x = flipper_length_mm, y = body_mass_g)) +\n  geom_point() +\n  geom_smooth(method = \"lm\")\n\n`geom_smooth()` using formula = 'y ~ x'\n\n\nWarning: Removed 2 rows containing non-finite values (`stat_smooth()`).\n\n\nWarning: Removed 2 rows containing missing values (`geom_point()`).\n\n\n\n\n\n\n\n\n\n\nYour turn: What is the estimated body mass for a penguin with a flipper length of 210?\n\n\nbm_fl_fit |&gt;\n  predict(new_data = tibble(flipper_length_mm = 210))\n\n# A tibble: 1 × 1\n  .pred\n  &lt;dbl&gt;\n1 4653.\n\n\n\nDemo: What is the estimated body mass for a penguin with a flipper length of 100?\n\nBut we shouldn’t do this prediction based on this model since 100 mm is outside of the range of the data (extrapolation).\n\nbm_fl_fit |&gt;\n  predict(new_data = tibble(flipper_length_mm = 100))\n\n# A tibble: 1 × 1\n  .pred\n  &lt;dbl&gt;\n1 -812.\n\n\n\n\nAnother model\n\nDemo: A different researcher wants to look at body weight of penguins based on the island they were recorded on. How are the variables involved in this analysis different?\n\nPredictor is categorical.\n\nDemo: Make an appropriate visualization to investigate this relationship below. Additionally, calculate the mean body mass by island.\n\n\nggplot(penguins, aes(x = island, y = body_mass_g)) +\n  geom_boxplot()\n\nWarning: Removed 2 rows containing non-finite values (`stat_boxplot()`).\n\n\n\n\n\n\n\n\n\n\npenguins |&gt;\n  group_by(island) |&gt;\n  summarize(mean_bm = mean(body_mass_g, na.rm = TRUE))\n\n# A tibble: 3 × 2\n  island    mean_bm\n  &lt;fct&gt;       &lt;dbl&gt;\n1 Biscoe      4716.\n2 Dream       3713.\n3 Torgersen   3706.\n\n\n\nDemo: Change the geom of your previous plot to geom_point(). Use this plot to think about how R models these data.\n\n\nggplot(penguins, aes(x = island, y = body_mass_g)) +\n  geom_point()\n\nWarning: Removed 2 rows containing missing values (`geom_point()`).\n\n\n\n\n\n\n\n\n\n\nYour turn: Fit the linear regression model and display the results. Write the estimated model output below.\n\n\nbm_island_fit &lt;- linear_reg() |&gt;\n  fit(body_mass_g ~ island, data = penguins)\n\ntidy(bm_island_fit)\n\n# A tibble: 3 × 5\n  term            estimate std.error statistic   p.value\n  &lt;chr&gt;              &lt;dbl&gt;     &lt;dbl&gt;     &lt;dbl&gt;     &lt;dbl&gt;\n1 (Intercept)        4716.      48.5      97.3 8.93e-250\n2 islandDream       -1003.      74.2     -13.5 1.42e- 33\n3 islandTorgersen   -1010.     100.      -10.1 4.66e- 21\n\n\n\nDemo: Interpret each coefficient in context of the problem.\n\nIntercept: Penguins from Biscoe island are expected to weigh, on average, 4,716 grams.\nSlopes:\n\nPenguins from Dream island are expected to weigh, on average, 1,003 grams less than those from Biscoe island.\nPenguins from Torgersen island are expected to weigh, on average, 1,010 grams less than those from Biscoe island.\n\n\nDemo: What is the estimated body weight of a penguin on Biscoe island? What are the estimated body weights of penguins on Dream and Torgersen islands?\n\n\nbm_island_fit |&gt;\n  predict(new_data = tibble(island = c(\"Biscoe\", \"Dream\", \"Torgersen\")))\n\n# A tibble: 3 × 1\n  .pred\n  &lt;dbl&gt;\n1 4716.\n2 3713.\n3 3706."
  },
  {
    "objectID": "ae/ae-13-modeling-loans-A.html",
    "href": "ae/ae-13-modeling-loans-A.html",
    "title": "Modelling loan interest rates",
    "section": "",
    "text": "In this application exercise we will be studying loan interest rates. The dataset is one you’ve come across before in your reading – the dataset about loans from the peer-to-peer lender, Lending Club, from the openintro package. We will use tidyverse and tidymodels for data exploration and modeling, respectively.\nlibrary(tidyverse)\nlibrary(tidymodels)\nlibrary(openintro)\nBefore we use the dataset, we’ll make a few transformations to it.\nAdd response here.\nloans &lt;- loans_full_schema |&gt;\n  mutate(\n    credit_util = total_credit_utilized / total_credit_limit,\n    bankruptcy = as.factor(if_else(public_record_bankrupt == 0, 0, 1)),\n    verified_income = droplevels(verified_income),\n    homeownership = str_to_title(homeownership),\n    homeownership = fct_relevel(homeownership, \"Rent\", \"Mortgage\", \"Own\")\n  ) |&gt;\n  rename(credit_checks = inquiries_last_12m) |&gt;\n  select(\n    interest_rate, loan_amount, verified_income, \n    debt_to_income, credit_util, bankruptcy, term, \n    credit_checks, issue_month, homeownership\n  )\nHere is a glimpse at the data:\nglimpse(loans)\n\nRows: 10,000\nColumns: 10\n$ interest_rate   &lt;dbl&gt; 14.07, 12.61, 17.09, 6.72, 14.07, 6.72, 13.59, 11.99, …\n$ loan_amount     &lt;int&gt; 28000, 5000, 2000, 21600, 23000, 5000, 24000, 20000, 2…\n$ verified_income &lt;fct&gt; Verified, Not Verified, Source Verified, Not Verified,…\n$ debt_to_income  &lt;dbl&gt; 18.01, 5.04, 21.15, 10.16, 57.96, 6.46, 23.66, 16.19, …\n$ credit_util     &lt;dbl&gt; 0.54759517, 0.15003472, 0.66134832, 0.19673228, 0.7549…\n$ bankruptcy      &lt;fct&gt; 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, …\n$ term            &lt;dbl&gt; 60, 36, 36, 36, 36, 36, 60, 60, 36, 36, 60, 60, 36, 60…\n$ credit_checks   &lt;int&gt; 6, 1, 4, 0, 7, 6, 1, 1, 3, 0, 4, 4, 8, 6, 0, 0, 4, 6, …\n$ issue_month     &lt;fct&gt; Mar-2018, Feb-2018, Feb-2018, Jan-2018, Mar-2018, Jan-…\n$ homeownership   &lt;fct&gt; Mortgage, Rent, Rent, Rent, Rent, Own, Mortgage, Mortg…"
  },
  {
    "objectID": "ae/ae-13-modeling-loans-A.html#main-effects-model",
    "href": "ae/ae-13-modeling-loans-A.html#main-effects-model",
    "title": "Modelling loan interest rates",
    "section": "Main effects model",
    "text": "Main effects model\n\nDemo: Fit a model to predict interest rate from credit utilization and homeownership, without an interaction effect between the two predictors. Display the summary output and write out the estimated regression equation.\n\n\nrate_util_home_fit &lt;- linear_reg() |&gt;\n  fit(interest_rate ~ credit_util + homeownership, data = loans)\n\ntidy(rate_util_home_fit)\n\n# A tibble: 4 × 5\n  term                  estimate std.error statistic   p.value\n  &lt;chr&gt;                    &lt;dbl&gt;     &lt;dbl&gt;     &lt;dbl&gt;     &lt;dbl&gt;\n1 (Intercept)              9.93      0.140    70.8   0        \n2 credit_util              5.34      0.207    25.7   2.20e-141\n3 homeownershipMortgage    0.696     0.121     5.76  8.71e-  9\n4 homeownershipOwn         0.128     0.155     0.827 4.08e-  1\n\n\n\\[\n\\widehat{interest~rate} = 9.93 + 5.34 \\times credit~util + 0.696 \\times Mortgage + 0.128 \\times Own\n\\]\n\nDemo: Write the estimated regression equation for loan applications from each of the homeownership groups separately.\n\nRent: \\(\\widehat{interest~rate} = 9.93 + 5.34 \\times credit~util\\)\nMortgage: \\(\\widehat{interest~rate} = 10.626 + 5.34 \\times credit~util\\)\nOwn: \\(\\widehat{interest~rate} = 10.058 + 5.34 \\times credit~util\\)\n\nQuestion: How does the model predict the interest rate to vary as credit utilization varies for loan applicants with different homeownership status. Are the rates the same or different?\n\nThe same."
  },
  {
    "objectID": "ae/ae-13-modeling-loans-A.html#interaction-effects-model",
    "href": "ae/ae-13-modeling-loans-A.html#interaction-effects-model",
    "title": "Modelling loan interest rates",
    "section": "Interaction effects model",
    "text": "Interaction effects model\n\nDemo: Fit a model to predict interest rate from credit utilization and homeownership, with an interaction effect between the two predictors. Display the summary output and write out the estimated regression equation.\n\n\nrate_util_home_int_fit &lt;- linear_reg() |&gt;\n  fit(interest_rate ~ credit_util * homeownership, data = loans)\n\ntidy(rate_util_home_int_fit)\n\n# A tibble: 6 × 5\n  term                              estimate std.error statistic  p.value\n  &lt;chr&gt;                                &lt;dbl&gt;     &lt;dbl&gt;     &lt;dbl&gt;    &lt;dbl&gt;\n1 (Intercept)                          9.44      0.199     47.5  0       \n2 credit_util                          6.20      0.325     19.1  1.01e-79\n3 homeownershipMortgage                1.39      0.228      6.11 1.04e- 9\n4 homeownershipOwn                     0.697     0.316      2.20 2.75e- 2\n5 credit_util:homeownershipMortgage   -1.64      0.457     -3.58 3.49e- 4\n6 credit_util:homeownershipOwn        -1.06      0.590     -1.80 7.24e- 2\n\n\n\\[\n\\widehat{interest~rate} = 9.44 + 6.20 \\times credit~util + 1.39 \\times Mortgage + 0.697 \\times Own - 1.64 \\times credit_util:Mortgage - 1.06 \\times credit_util:Own\n\\]\n\nDemo: Write the estimated regression equation for loan applications from each of the homeownership groups separately.\n\nRent: \\(\\widehat{interest~rate} = 9.44 + 6.20 \\times credit~util\\)\nMortgage: \\(\\widehat{interest~rate} = 10.83 + 4.56 \\times credit~util\\)\nOwn: \\(\\widehat{interest~rate} = 10.137 + 5.14 \\times credit~util\\)\n\nQuestion: How does the model predict the interest rate to vary as credit utilization varies for loan applicants with different homeownership status. Are the rates the same or different?\n\nDifferent."
  },
  {
    "objectID": "ae/ae-13-modeling-loans-A.html#choosing-a-model",
    "href": "ae/ae-13-modeling-loans-A.html#choosing-a-model",
    "title": "Modelling loan interest rates",
    "section": "Choosing a model",
    "text": "Choosing a model\nRule of thumb: Occam’s Razor - Don’t overcomplicate the situation! We prefer the simplest best model.\n\nglance(rate_util_home_fit)\n\n# A tibble: 1 × 12\n  r.squared adj.r.squared sigma statistic   p.value    df  logLik    AIC    BIC\n      &lt;dbl&gt;         &lt;dbl&gt; &lt;dbl&gt;     &lt;dbl&gt;     &lt;dbl&gt; &lt;dbl&gt;   &lt;dbl&gt;  &lt;dbl&gt;  &lt;dbl&gt;\n1    0.0682        0.0679  4.83      244. 1.25e-152     3 -29926. 59861. 59897.\n# ℹ 3 more variables: deviance &lt;dbl&gt;, df.residual &lt;int&gt;, nobs &lt;int&gt;\n\nglance(rate_util_home_int_fit)\n\n# A tibble: 1 × 12\n  r.squared adj.r.squared sigma statistic   p.value    df  logLik    AIC    BIC\n      &lt;dbl&gt;         &lt;dbl&gt; &lt;dbl&gt;     &lt;dbl&gt;     &lt;dbl&gt; &lt;dbl&gt;   &lt;dbl&gt;  &lt;dbl&gt;  &lt;dbl&gt;\n1    0.0694        0.0689  4.83      149. 4.79e-153     5 -29919. 59852. 59903.\n# ℹ 3 more variables: deviance &lt;dbl&gt;, df.residual &lt;int&gt;, nobs &lt;int&gt;\n\n\n\nReview: What is R-squared? What is adjusted R-squared?\n\nR-squared is the percent variability in the response that is explained by our model. (Can use when models have same number of variables for model selection)\nAdjusted R-squared is similar, but has a penalty for the number of variables in the model. (Should use for model selection when models have different numbers of variables).\n\nQuestion: Based on the adjusted \\(R^2\\)s of these two models, which one do we prefer?\n\nThe interaction effects model, though just barely."
  },
  {
    "objectID": "ae/ae-09-chronicle-scrape-A.html",
    "href": "ae/ae-09-chronicle-scrape-A.html",
    "title": "AE 09: Opinion articles in The Chronicle",
    "section": "",
    "text": "Important\n\n\n\nThese are suggested answers. This document should be used as reference only, it’s not designed to be an exhaustive key."
  },
  {
    "objectID": "ae/ae-09-chronicle-scrape-A.html#part-1---data-scraping",
    "href": "ae/ae-09-chronicle-scrape-A.html#part-1---data-scraping",
    "title": "AE 09: Opinion articles in The Chronicle",
    "section": "Part 1 - Data scraping",
    "text": "Part 1 - Data scraping\nSee chronicle-scrape.R for suggested scraping code."
  },
  {
    "objectID": "ae/ae-09-chronicle-scrape-A.html#part-2---data-analysis",
    "href": "ae/ae-09-chronicle-scrape-A.html#part-2---data-analysis",
    "title": "AE 09: Opinion articles in The Chronicle",
    "section": "Part 2 - Data analysis",
    "text": "Part 2 - Data analysis\nLet’s start by loading the packages we will need:\n\nlibrary(tidyverse)\n\n\nYour turn (1 minute): Load the data you saved into the data folder and name it chronicle.\n\n\nchronicle &lt;- read_csv(\"data/chronicle.csv\")\n\n\nYour turn (3 minutes): Who are the most prolific authors of the 100 most recent opinion articles in The Chronicle?\n\n\nchronicle |&gt;\n  count(author, sort = TRUE)\n\n# A tibble: 204 × 2\n   author                        n\n   &lt;chr&gt;                     &lt;int&gt;\n 1 Luke A. Powery               30\n 2 Heidi Smith                  27\n 3 Advikaa Anand                22\n 4 Monday Monday                17\n 5 Monika Narain                16\n 6 Community Editorial Board    12\n 7 Linda Cao                    12\n 8 Sonia Green                  12\n 9 Valerie Tan                  11\n10 Nathan Luzum                 10\n# ℹ 194 more rows\n\n\n\nDemo: Draw a line plot of the number of opinion articles published per day in The Chronicle.\n\n\nchronicle |&gt;\n  count(date) |&gt;\n  ggplot(aes(x = date, y = n, group = 1)) +\n  geom_line()\n\n\n\n\n\n\n\n\n\nDemo: What percent of the most recent 100 opinion articles in The Chronicle mention “climate” in their title?\n\n\nchronicle |&gt;\n  mutate(\n    title = str_to_lower(title),\n    climate = if_else(str_detect(title, \"climate\"), \"mentioned\", \"not mentioned\")\n    ) |&gt;\n  count(climate) |&gt;\n  mutate(prop = n / sum(n))\n\n# A tibble: 2 × 3\n  climate           n  prop\n  &lt;chr&gt;         &lt;int&gt; &lt;dbl&gt;\n1 mentioned        10  0.02\n2 not mentioned   490  0.98\n\n\n\nYour turn (5 minutes): What percent of the most recent 100 opinion articles in The Chronicle mention “climate” in their title or abstract?\n\n\nchronicle |&gt;\n  mutate(\n    title = str_to_lower(title),\n    abstract = str_to_lower(abstract),\n    climate = if_else(\n      str_detect(title, \"climate\") | str_detect(abstract, \"climate\"), \n      \"mentioned\", \n      \"not mentioned\"\n      )\n    ) |&gt;\n  count(climate) |&gt;\n  mutate(prop = n / sum(n))\n\n# A tibble: 3 × 3\n  climate           n  prop\n  &lt;chr&gt;         &lt;int&gt; &lt;dbl&gt;\n1 mentioned        14 0.028\n2 not mentioned   482 0.964\n3 &lt;NA&gt;              4 0.008\n\n\n\nTime permitting: Come up with another question and try to answer it using the data.\n\n\n# add code here\n\n\nTime permitting:"
  },
  {
    "objectID": "ae/ae-02-bechdel-dataviz.html",
    "href": "ae/ae-02-bechdel-dataviz.html",
    "title": "AE 02: Bechdel + data visualization",
    "section": "",
    "text": "In this mini analysis we work with the data used in the FiveThirtyEight story titled “The Dollar-And-Cents Case Against Hollywood’s Exclusion of Women”.\nThis analysis is about the Bechdel test, a measure of the representation of women in fiction."
  },
  {
    "objectID": "ae/ae-02-bechdel-dataviz.html#getting-started",
    "href": "ae/ae-02-bechdel-dataviz.html#getting-started",
    "title": "AE 02: Bechdel + data visualization",
    "section": "Getting started",
    "text": "Getting started\n\nPackages\nWe start with loading the packages we’ll use: tidyverse for majority of the analysis and scales for pretty plot labels later on.\n\nlibrary(tidyverse)\nlibrary(scales)\n\n\n\nData\nThe data are stored as a CSV (comma separated values) file in the data folder of your repository. Let’s read it from there and save it as an object called bechdel.\n\nbechdel &lt;- read_csv(\"https://sta199-s24.github.io/data/bechdel.csv\")\n\n\n\nGet to know the data\nWe can use the glimpse function to get an overview (or “glimpse”) of the data.\n\n# add code here\n\n\nWhat does each observation (row) in the data set represent?\n\nEach observation represents a ___.\n\nHow many observations (rows) are in the data set?\n\nThere are 1615 movies in the dataset.\n\nHow many variables (columns) are in the data set?\n\nThere are ___ columns in the dataset.\n\n\nVariables of interest\nThe variables we’ll focus on are the following:\n\nbudget_2013: Budget in 2013 inflation adjusted dollars.\ngross_2013: Gross (US and international combined) in 2013 inflation adjusted dollars.\nroi: Return on investment, calculated as the ratio of the gross to budget.\nclean_test: Bechdel test result:\n\nok = passes test\ndubious\nmen = women only talk about men\nnotalk = women don’t talk to each other\nnowomen = fewer than two women\n\nbinary: Bechdel Test PASS vs FAIL binary\n\nWe will also use the year of release in data prep and title of movie to take a deeper look at some outliers.\nThere are a few other variables in the dataset, but we won’t be using them in this analysis."
  },
  {
    "objectID": "ae/ae-02-bechdel-dataviz.html#visualizing-data-with-ggplot2",
    "href": "ae/ae-02-bechdel-dataviz.html#visualizing-data-with-ggplot2",
    "title": "AE 02: Bechdel + data visualization",
    "section": "Visualizing data with ggplot2",
    "text": "Visualizing data with ggplot2\nggplot2 is the package and ggplot() is the function in this package that is used to create a plot.\n\nggplot() creates the initial base coordinate system, and we will add layers to that base. We first specify the data set we will use with data = bechdel.\n\n\nggplot(data = bechdel)\n\n\n\n\n\n\n\n\n\nThe mapping argument is paired with an aesthetic (aes()), which tells us how the variables in our data set should be mapped to the visual properties of the graph.\n\n\nggplot(\n  data = bechdel, \n  mapping = aes(x = budget_2013, y = gross_2013)\n)\n\n\n\n\n\n\n\n\nAs we previously mentioned, we often omit the names of the first two arguments in R functions. So you’ll often see this written as:\n\nggplot(bechdel, aes(x = budget_2013, y = gross_2013))\n\n\n\n\n\n\n\n\nNote that the result is exactly the same.\n\nThe geom_xx function specifies the type of plot we want to use to represent the data. In the code below, we use geom_point which creates a plot where each observation is represented by a point.\n\n\nggplot(bechdel, aes(x = budget_2013, y = gross_2013)) +\n  geom_point()\n\nWarning: Removed 15 rows containing missing values (`geom_point()`).\n\n\n\n\n\n\n\n\n\nNote that this results in a warning as well. What does the warning mean?"
  },
  {
    "objectID": "ae/ae-02-bechdel-dataviz.html#gross-revenue-vs.-budget",
    "href": "ae/ae-02-bechdel-dataviz.html#gross-revenue-vs.-budget",
    "title": "AE 02: Bechdel + data visualization",
    "section": "Gross revenue vs. budget",
    "text": "Gross revenue vs. budget\n\nStep 1 - Your turn\nModify the following plot to change the color of all points to a different color.\n\n\n\n\n\n\nTip\n\n\n\nSee http://www.stat.columbia.edu/~tzheng/files/Rcolor.pdf for many color options you can use by name in R or use the hex code for a color of your choice.\n\n\n\nggplot(bechdel, aes(x = budget_2013, y = gross_2013)) +\n  geom_point(color = \"deepskyblue3\") \n\nWarning: Removed 15 rows containing missing values (`geom_point()`).\n\n\n\n\n\n\n\n\n\n\n\nStep 2 - Your turn\nAdd labels for the title and x and y axes.\n\nggplot(bechdel, aes(x = budget_2013, y = gross_2013))+\n  geom_point(color = \"deepskyblue3\") + \n  labs(\n    x = \"___\", \n    y = \"___\", \n    title = \"___\"\n  )\n\nWarning: Removed 15 rows containing missing values (`geom_point()`).\n\n\n\n\n\n\n\n\n\n\n\nStep 3 - Your turn\nAn aesthetic is a visual property of one of the objects in your plot. Commonly used aesthetic options are:\n\ncolor\nfill\nshape\nsize\nalpha (transparency)\n\nModify the plot below, so the color of the points is based on the variable binary.\n\nggplot(bechdel, aes(x = budget_2013, y = gross_2013)) +\n  geom_point() + \n  labs(\n    x = \"Budget (in 2013 $)\", \n    y = \"Gross revenue (in 2013 $)\", \n    title = \"Gross revenue vs. budget, by ___\"\n  )\n\nWarning: Removed 15 rows containing missing values (`geom_point()`).\n\n\n\n\n\n\n\n\n\n\n\nStep 4 - Your turn\nExpand on your plot from the previous step to make the size of your points based on roi.\n\n# add code here\n\n\n\nStep 5 - Your turn\nExpand on your plot from the previous step to make the transparency (alpha) of the points 0.5.\n\n# add code here\n\n\n\nStep 6 - Your turn\nExpand on your plot from the previous step by using facet_wrap to display the association between budget and gross for different values of clean_test.\n\n# add code here\n\n\n\nStep 7 - Demo\nImprove your plot from the previous step by making the x and y scales more legible.\n\n\n\n\n\n\nTip\n\n\n\nMake use of the scales package, specifically the scale_x_continuous() and scale_y_continuous() functions.\n\n\n\n# add code here\n\n\n\nStep 8 - Your turn\nExpand on your plot from the previous step by using facet_grid to display the association between budget and gross for different combinations of clean_test and binary. Comment on whether this was a useful update.\n\n# add code here\n\nAdd comment here…\n\n\nStep 9 - Demo\nWhat other improvements could we make to this plot?\n\n# add code here\n\n\n\nRender, commit, and push\n\nIf you made any changes since the last render, render again to get the final version of the AE.\nCheck the box next to each document in the Git tab (this is called “staging” the changes). Commit the changes you made using a simple and informative message.\nUse the green arrow to push your changes to your repo on GitHub.\nCheck your repo on GitHub and see the updated files. Once your updated files are in your repo on GitHub, you’re good to go!"
  },
  {
    "objectID": "ae/ae-02-bechdel-dataviz.html#return-on-investment",
    "href": "ae/ae-02-bechdel-dataviz.html#return-on-investment",
    "title": "AE 02: Bechdel + data visualization",
    "section": "Return-on-investment",
    "text": "Return-on-investment\nFinally, let’s take a look at return-on-investment (ROI).\n\nStep 1 - Your turn\nCreate side-by-side box plots of roi by clean_test where the boxes are colored by binary.\n\n# add code here\n\nWhat are those movies with very high returns on investment?\n\nbechdel |&gt;\n  filter(roi &gt; 400) |&gt;\n  select(title, roi, budget_2013, gross_2013, year, clean_test)\n\n# A tibble: 3 × 6\n  title                     roi budget_2013 gross_2013  year clean_test\n  &lt;chr&gt;                   &lt;dbl&gt;       &lt;dbl&gt;      &lt;dbl&gt; &lt;dbl&gt; &lt;chr&gt;     \n1 Paranormal Activity      671.      505595  339424558  2007 dubious   \n2 The Blair Witch Project  648.      839077  543776715  1999 ok        \n3 El Mariachi              583.       11622    6778946  1992 nowomen   \n\n\n\n\nStep 2 - Demo\nExpand on your plot from the previous step to zoom in on movies with roi &lt; ___ to get a better view of how the medians across the categories compare.\n\n# add code here\n\nWhat does this plot say about return-on-investment on movies that pass the Bechdel test?\n\n\nRender, commit, and push\n\nIf you made any changes since the last render, render again to get the final version of the AE.\nCheck the box next to each document in the Git tab (this is called “staging” the changes). Commit the changes you made using a simple and informative message.\nUse the green arrow to push your changes to your repo on GitHub.\nCheck your repo on GitHub and see the updated files. Once your updated files are in your repo on GitHub, you’re good to go!"
  },
  {
    "objectID": "ae/ae-16-equality-randomization.html",
    "href": "ae/ae-16-equality-randomization.html",
    "title": "Equality",
    "section": "",
    "text": "In this application exercise, we’ll do inference on two population proportions."
  },
  {
    "objectID": "ae/ae-16-equality-randomization.html#exercise-1",
    "href": "ae/ae-16-equality-randomization.html#exercise-1",
    "title": "Equality",
    "section": "Exercise 1",
    "text": "Exercise 1\nThe two populations of interest in this survey are 18-24 year olds and 25+ year olds. State the hypotheses for evaluating whether there is a discernible difference between the proportions of those who think “The country needs to continue to make changes to give women equal rights to men.” (need more changes) in the two age groups.\nAdd response here."
  },
  {
    "objectID": "ae/ae-16-equality-randomization.html#exercise-2",
    "href": "ae/ae-16-equality-randomization.html#exercise-2",
    "title": "Equality",
    "section": "Exercise 2",
    "text": "Exercise 2\nWhat proportion of 18-24 year olds think “The country needs to continue to make changes to give women equal rights to men”? What proportion of 25+ year olds? Calculate and visualize these proportions.\n\n# add code here"
  },
  {
    "objectID": "ae/ae-16-equality-randomization.html#exercise-3",
    "href": "ae/ae-16-equality-randomization.html#exercise-3",
    "title": "Equality",
    "section": "Exercise 3",
    "text": "Exercise 3\nCalculate the observed sample statistic, i.e., the difference between the proportions of respondents who think “The country needs to continue to make changes to give women equal rights to men” between the two age groups.\n\n# add code here"
  },
  {
    "objectID": "ae/ae-16-equality-randomization.html#exercise-4",
    "href": "ae/ae-16-equality-randomization.html#exercise-4",
    "title": "Equality",
    "section": "Exercise 4",
    "text": "Exercise 4\nWhat is the parameter of interest?\nAdd response here."
  },
  {
    "objectID": "ae/ae-16-equality-randomization.html#exercise-5",
    "href": "ae/ae-16-equality-randomization.html#exercise-5",
    "title": "Equality",
    "section": "Exercise 5",
    "text": "Exercise 5\nExplain how you can set up a simulation for this hypothesis test.\nAdd response here."
  },
  {
    "objectID": "ae/ae-16-equality-randomization.html#exercise-6",
    "href": "ae/ae-16-equality-randomization.html#exercise-6",
    "title": "Equality",
    "section": "Exercise 6",
    "text": "Exercise 6\nConduct the hypothesis test using randomization and visualize and report the p-value.\n\n# add code here"
  },
  {
    "objectID": "ae/ae-16-equality-randomization.html#exercise-7",
    "href": "ae/ae-16-equality-randomization.html#exercise-7",
    "title": "Equality",
    "section": "Exercise 7",
    "text": "Exercise 7\nWhat is the conclusion of the hypothesis test?\nAdd response here."
  },
  {
    "objectID": "ae/ae-16-equality-randomization.html#exercise-8",
    "href": "ae/ae-16-equality-randomization.html#exercise-8",
    "title": "Equality",
    "section": "Exercise 8",
    "text": "Exercise 8\nInterpret the p-value in the context of the data and the hypotheses.\nAdd response here."
  },
  {
    "objectID": "ae/ae-16-equality-randomization.html#exercise-9",
    "href": "ae/ae-16-equality-randomization.html#exercise-9",
    "title": "Equality",
    "section": "Exercise 9",
    "text": "Exercise 9\nEstimate the difference in population proportions of 18-24 year old NC voters and 25+ year old NC voters using a 95% bootstrap interval.\n\n# add code here"
  },
  {
    "objectID": "ae/ae-16-equality-randomization.html#exercise-10",
    "href": "ae/ae-16-equality-randomization.html#exercise-10",
    "title": "Equality",
    "section": "Exercise 10",
    "text": "Exercise 10\nInterpret the confidence interval in context of the data.\nAdd response here."
  },
  {
    "objectID": "ae/ae-16-equality-randomization.html#exercise-11",
    "href": "ae/ae-16-equality-randomization.html#exercise-11",
    "title": "Equality",
    "section": "Exercise 11",
    "text": "Exercise 11\nDescribe how the simulation scheme for bootstrapping is different than that for the hypothesis test.\nAdd response here."
  },
  {
    "objectID": "ae/ae-16-equality-randomization.html#exercise-12",
    "href": "ae/ae-16-equality-randomization.html#exercise-12",
    "title": "Equality",
    "section": "Exercise 12",
    "text": "Exercise 12\nWhat is \\(p\\) vs. \\(\\hat{p}\\) vs. p-value. Explain generically as well as in the context of these data and research question.\nAdd response here."
  },
  {
    "objectID": "ae/ae-16-equality-randomization.html#exercise-13",
    "href": "ae/ae-16-equality-randomization.html#exercise-13",
    "title": "Equality",
    "section": "Exercise 13",
    "text": "Exercise 13\nWhat is bootstrap distribution vs. null distribution? Explain generically as well as in the context of these data and research question.\nAdd response here."
  },
  {
    "objectID": "ae/ae-18-second-to-last-ae.html",
    "href": "ae/ae-18-second-to-last-ae.html",
    "title": "Second to last AE",
    "section": "",
    "text": "Make a change, any change, to this document. Render, commit, and push by Sunday evening."
  },
  {
    "objectID": "ae/ae-04-flights-wrangling-A.html",
    "href": "ae/ae-04-flights-wrangling-A.html",
    "title": "AE 04: NYC flights + data wrangling",
    "section": "",
    "text": "Important\n\n\n\nThese are suggested answers. This document should be used as reference only, it’s not designed to be an exhaustive key.\nlibrary(tidyverse)\nlibrary(nycflights13)"
  },
  {
    "objectID": "ae/ae-04-flights-wrangling-A.html#exercise-1",
    "href": "ae/ae-04-flights-wrangling-A.html#exercise-1",
    "title": "AE 04: NYC flights + data wrangling",
    "section": "Exercise 1",
    "text": "Exercise 1\nYour turn: Fill in the blanks:\nThe flights data frame has 336776 rows. Each row represents a _flight_."
  },
  {
    "objectID": "ae/ae-04-flights-wrangling-A.html#exercise-2",
    "href": "ae/ae-04-flights-wrangling-A.html#exercise-2",
    "title": "AE 04: NYC flights + data wrangling",
    "section": "Exercise 2",
    "text": "Exercise 2\nYour turn: What are the names of the variables in flights.\n\nnames(flights)\n\n [1] \"year\"           \"month\"          \"day\"            \"dep_time\"      \n [5] \"sched_dep_time\" \"dep_delay\"      \"arr_time\"       \"sched_arr_time\"\n [9] \"arr_delay\"      \"carrier\"        \"flight\"         \"tailnum\"       \n[13] \"origin\"         \"dest\"           \"air_time\"       \"distance\"      \n[17] \"hour\"           \"minute\"         \"time_hour\""
  },
  {
    "objectID": "ae/ae-04-flights-wrangling-A.html#exercise-3---select",
    "href": "ae/ae-04-flights-wrangling-A.html#exercise-3---select",
    "title": "AE 04: NYC flights + data wrangling",
    "section": "Exercise 3 - select()",
    "text": "Exercise 3 - select()\n\nDemo: Make a data frame that only contains the variables dep_delay and arr_delay.\n\n\nflights |&gt;\n  select(dep_delay, arr_delay)\n\n# A tibble: 336,776 × 2\n   dep_delay arr_delay\n       &lt;dbl&gt;     &lt;dbl&gt;\n 1         2        11\n 2         4        20\n 3         2        33\n 4        -1       -18\n 5        -6       -25\n 6        -4        12\n 7        -5        19\n 8        -3       -14\n 9        -3        -8\n10        -2         8\n# ℹ 336,766 more rows\n\n\n\nDemo: Make a data frame that keeps every variable except dep_delay.\n\n\nflights |&gt;\n  select(-dep_delay)\n\n# A tibble: 336,776 × 18\n    year month   day dep_time sched_dep_time arr_time sched_arr_time arr_delay\n   &lt;int&gt; &lt;int&gt; &lt;int&gt;    &lt;int&gt;          &lt;int&gt;    &lt;int&gt;          &lt;int&gt;     &lt;dbl&gt;\n 1  2013     1     1      517            515      830            819        11\n 2  2013     1     1      533            529      850            830        20\n 3  2013     1     1      542            540      923            850        33\n 4  2013     1     1      544            545     1004           1022       -18\n 5  2013     1     1      554            600      812            837       -25\n 6  2013     1     1      554            558      740            728        12\n 7  2013     1     1      555            600      913            854        19\n 8  2013     1     1      557            600      709            723       -14\n 9  2013     1     1      557            600      838            846        -8\n10  2013     1     1      558            600      753            745         8\n# ℹ 336,766 more rows\n# ℹ 10 more variables: carrier &lt;chr&gt;, flight &lt;int&gt;, tailnum &lt;chr&gt;,\n#   origin &lt;chr&gt;, dest &lt;chr&gt;, air_time &lt;dbl&gt;, distance &lt;dbl&gt;, hour &lt;dbl&gt;,\n#   minute &lt;dbl&gt;, time_hour &lt;dttm&gt;\n\n\n\nDemo: Make a data frame that includes all variables between year through dep_delay (inclusive). These are all variables that provide information about the departure of each flight.\n\n\nflights |&gt;\n  select(year:dep_delay)\n\n# A tibble: 336,776 × 6\n    year month   day dep_time sched_dep_time dep_delay\n   &lt;int&gt; &lt;int&gt; &lt;int&gt;    &lt;int&gt;          &lt;int&gt;     &lt;dbl&gt;\n 1  2013     1     1      517            515         2\n 2  2013     1     1      533            529         4\n 3  2013     1     1      542            540         2\n 4  2013     1     1      544            545        -1\n 5  2013     1     1      554            600        -6\n 6  2013     1     1      554            558        -4\n 7  2013     1     1      555            600        -5\n 8  2013     1     1      557            600        -3\n 9  2013     1     1      557            600        -3\n10  2013     1     1      558            600        -2\n# ℹ 336,766 more rows\n\n\n\nDemo: Use the select helper contains() to make a data frame that includes the variables associated with the arrival, i.e., contains the string \"arr\\_\" in the name.\n\n\nflights |&gt;\n  select(contains(\"arr_\"))\n\n# A tibble: 336,776 × 3\n   arr_time sched_arr_time arr_delay\n      &lt;int&gt;          &lt;int&gt;     &lt;dbl&gt;\n 1      830            819        11\n 2      850            830        20\n 3      923            850        33\n 4     1004           1022       -18\n 5      812            837       -25\n 6      740            728        12\n 7      913            854        19\n 8      709            723       -14\n 9      838            846        -8\n10      753            745         8\n# ℹ 336,766 more rows"
  },
  {
    "objectID": "ae/ae-04-flights-wrangling-A.html#exercise-4---slice",
    "href": "ae/ae-04-flights-wrangling-A.html#exercise-4---slice",
    "title": "AE 04: NYC flights + data wrangling",
    "section": "Exercise 4 - slice()",
    "text": "Exercise 4 - slice()\n\nDemo: Display the first five rows of the flights data frame.\n\n\nflights |&gt;\n  slice(1:5)\n\n# A tibble: 5 × 19\n   year month   day dep_time sched_dep_time dep_delay arr_time sched_arr_time\n  &lt;int&gt; &lt;int&gt; &lt;int&gt;    &lt;int&gt;          &lt;int&gt;     &lt;dbl&gt;    &lt;int&gt;          &lt;int&gt;\n1  2013     1     1      517            515         2      830            819\n2  2013     1     1      533            529         4      850            830\n3  2013     1     1      542            540         2      923            850\n4  2013     1     1      544            545        -1     1004           1022\n5  2013     1     1      554            600        -6      812            837\n# ℹ 11 more variables: arr_delay &lt;dbl&gt;, carrier &lt;chr&gt;, flight &lt;int&gt;,\n#   tailnum &lt;chr&gt;, origin &lt;chr&gt;, dest &lt;chr&gt;, air_time &lt;dbl&gt;, distance &lt;dbl&gt;,\n#   hour &lt;dbl&gt;, minute &lt;dbl&gt;, time_hour &lt;dttm&gt;\n\n\n\nDemo: Display the last two rows of the flights data frame.\n\n\nflights |&gt;\n  slice((n()-1):n())\n\n# A tibble: 2 × 19\n   year month   day dep_time sched_dep_time dep_delay arr_time sched_arr_time\n  &lt;int&gt; &lt;int&gt; &lt;int&gt;    &lt;int&gt;          &lt;int&gt;     &lt;dbl&gt;    &lt;int&gt;          &lt;int&gt;\n1  2013     9    30       NA           1159        NA       NA           1344\n2  2013     9    30       NA            840        NA       NA           1020\n# ℹ 11 more variables: arr_delay &lt;dbl&gt;, carrier &lt;chr&gt;, flight &lt;int&gt;,\n#   tailnum &lt;chr&gt;, origin &lt;chr&gt;, dest &lt;chr&gt;, air_time &lt;dbl&gt;, distance &lt;dbl&gt;,\n#   hour &lt;dbl&gt;, minute &lt;dbl&gt;, time_hour &lt;dttm&gt;"
  },
  {
    "objectID": "ae/ae-04-flights-wrangling-A.html#exercise-5---arrange",
    "href": "ae/ae-04-flights-wrangling-A.html#exercise-5---arrange",
    "title": "AE 04: NYC flights + data wrangling",
    "section": "Exercise 5 - arrange()",
    "text": "Exercise 5 - arrange()\n\nDemo: Let’s arrange the data by departure delay, so the flights with the shortest departure delays will be at the top of the data frame.\n\n\nflights |&gt;\n  arrange(dep_delay)\n\n# A tibble: 336,776 × 19\n    year month   day dep_time sched_dep_time dep_delay arr_time sched_arr_time\n   &lt;int&gt; &lt;int&gt; &lt;int&gt;    &lt;int&gt;          &lt;int&gt;     &lt;dbl&gt;    &lt;int&gt;          &lt;int&gt;\n 1  2013    12     7     2040           2123       -43       40           2352\n 2  2013     2     3     2022           2055       -33     2240           2338\n 3  2013    11    10     1408           1440       -32     1549           1559\n 4  2013     1    11     1900           1930       -30     2233           2243\n 5  2013     1    29     1703           1730       -27     1947           1957\n 6  2013     8     9      729            755       -26     1002            955\n 7  2013    10    23     1907           1932       -25     2143           2143\n 8  2013     3    30     2030           2055       -25     2213           2250\n 9  2013     3     2     1431           1455       -24     1601           1631\n10  2013     5     5      934            958       -24     1225           1309\n# ℹ 336,766 more rows\n# ℹ 11 more variables: arr_delay &lt;dbl&gt;, carrier &lt;chr&gt;, flight &lt;int&gt;,\n#   tailnum &lt;chr&gt;, origin &lt;chr&gt;, dest &lt;chr&gt;, air_time &lt;dbl&gt;, distance &lt;dbl&gt;,\n#   hour &lt;dbl&gt;, minute &lt;dbl&gt;, time_hour &lt;dttm&gt;\n\n\n\nQuestion: What does it mean for the dep_delay to have a negative value?\n\nArrived early.\n\nDemo: Arrange the data by descending departure delay, so the flights with the longest departure delays will be at the top.\n\n\nflights |&gt;\n  arrange(desc(dep_delay))\n\n# A tibble: 336,776 × 19\n    year month   day dep_time sched_dep_time dep_delay arr_time sched_arr_time\n   &lt;int&gt; &lt;int&gt; &lt;int&gt;    &lt;int&gt;          &lt;int&gt;     &lt;dbl&gt;    &lt;int&gt;          &lt;int&gt;\n 1  2013     1     9      641            900      1301     1242           1530\n 2  2013     6    15     1432           1935      1137     1607           2120\n 3  2013     1    10     1121           1635      1126     1239           1810\n 4  2013     9    20     1139           1845      1014     1457           2210\n 5  2013     7    22      845           1600      1005     1044           1815\n 6  2013     4    10     1100           1900       960     1342           2211\n 7  2013     3    17     2321            810       911      135           1020\n 8  2013     6    27      959           1900       899     1236           2226\n 9  2013     7    22     2257            759       898      121           1026\n10  2013    12     5      756           1700       896     1058           2020\n# ℹ 336,766 more rows\n# ℹ 11 more variables: arr_delay &lt;dbl&gt;, carrier &lt;chr&gt;, flight &lt;int&gt;,\n#   tailnum &lt;chr&gt;, origin &lt;chr&gt;, dest &lt;chr&gt;, air_time &lt;dbl&gt;, distance &lt;dbl&gt;,\n#   hour &lt;dbl&gt;, minute &lt;dbl&gt;, time_hour &lt;dttm&gt;\n\n\n\nYour turn: Create a data frame that only includes the plane tail number (tailnum), carrier (carrier), and departure delay for the flight with the longest departure delay. What is the plane tail number (tailnum) for this flight?\n\n\nflights |&gt;\n  select(tailnum, carrier, dep_delay) %&gt;%\n  arrange(dep_delay) |&gt;\n  slice(1)\n\n# A tibble: 1 × 3\n  tailnum carrier dep_delay\n  &lt;chr&gt;   &lt;chr&gt;       &lt;dbl&gt;\n1 N592JB  B6            -43"
  },
  {
    "objectID": "ae/ae-04-flights-wrangling-A.html#exercise-6---filter",
    "href": "ae/ae-04-flights-wrangling-A.html#exercise-6---filter",
    "title": "AE 04: NYC flights + data wrangling",
    "section": "Exercise 6 - filter()",
    "text": "Exercise 6 - filter()\n\nDemo: Filter the data frame by selecting the rows where the destination airport is RDU.\n\n\nflights |&gt;\n  filter(dest == \"RDU\")\n\n# A tibble: 8,163 × 19\n    year month   day dep_time sched_dep_time dep_delay arr_time sched_arr_time\n   &lt;int&gt; &lt;int&gt; &lt;int&gt;    &lt;int&gt;          &lt;int&gt;     &lt;dbl&gt;    &lt;int&gt;          &lt;int&gt;\n 1  2013     1     1      800            810       -10      949            955\n 2  2013     1     1      832            840        -8     1006           1030\n 3  2013     1     1      851            851         0     1032           1036\n 4  2013     1     1      917            920        -3     1052           1108\n 5  2013     1     1     1024           1030        -6     1204           1215\n 6  2013     1     1     1127           1129        -2     1303           1309\n 7  2013     1     1     1157           1205        -8     1342           1345\n 8  2013     1     1     1240           1235         5     1415           1415\n 9  2013     1     1     1317           1325        -8     1454           1505\n10  2013     1     1     1449           1450        -1     1651           1640\n# ℹ 8,153 more rows\n# ℹ 11 more variables: arr_delay &lt;dbl&gt;, carrier &lt;chr&gt;, flight &lt;int&gt;,\n#   tailnum &lt;chr&gt;, origin &lt;chr&gt;, dest &lt;chr&gt;, air_time &lt;dbl&gt;, distance &lt;dbl&gt;,\n#   hour &lt;dbl&gt;, minute &lt;dbl&gt;, time_hour &lt;dttm&gt;\n\n\n\nDemo: We can also filter using more than one condition. Here we select all rows where the destination airport is RDU and the arrival delay is less than 0.\n\n\nflights |&gt;\n  filter(dest == \"RDU\", arr_delay &lt; 0)\n\n# A tibble: 4,232 × 19\n    year month   day dep_time sched_dep_time dep_delay arr_time sched_arr_time\n   &lt;int&gt; &lt;int&gt; &lt;int&gt;    &lt;int&gt;          &lt;int&gt;     &lt;dbl&gt;    &lt;int&gt;          &lt;int&gt;\n 1  2013     1     1      800            810       -10      949            955\n 2  2013     1     1      832            840        -8     1006           1030\n 3  2013     1     1      851            851         0     1032           1036\n 4  2013     1     1      917            920        -3     1052           1108\n 5  2013     1     1     1024           1030        -6     1204           1215\n 6  2013     1     1     1127           1129        -2     1303           1309\n 7  2013     1     1     1157           1205        -8     1342           1345\n 8  2013     1     1     1317           1325        -8     1454           1505\n 9  2013     1     1     1505           1510        -5     1654           1655\n10  2013     1     1     1800           1800         0     1945           1951\n# ℹ 4,222 more rows\n# ℹ 11 more variables: arr_delay &lt;dbl&gt;, carrier &lt;chr&gt;, flight &lt;int&gt;,\n#   tailnum &lt;chr&gt;, origin &lt;chr&gt;, dest &lt;chr&gt;, air_time &lt;dbl&gt;, distance &lt;dbl&gt;,\n#   hour &lt;dbl&gt;, minute &lt;dbl&gt;, time_hour &lt;dttm&gt;\n\n\n\nYour turn: Describe what the code is doing in words.\n\n\nflights |&gt;\n  filter(\n    dest %in% c(\"RDU\", \"GSO\"),\n    arr_delay &lt; 0 | dep_delay &lt; 0\n    )\n\n# A tibble: 6,203 × 19\n    year month   day dep_time sched_dep_time dep_delay arr_time sched_arr_time\n   &lt;int&gt; &lt;int&gt; &lt;int&gt;    &lt;int&gt;          &lt;int&gt;     &lt;dbl&gt;    &lt;int&gt;          &lt;int&gt;\n 1  2013     1     1      800            810       -10      949            955\n 2  2013     1     1      832            840        -8     1006           1030\n 3  2013     1     1      851            851         0     1032           1036\n 4  2013     1     1      917            920        -3     1052           1108\n 5  2013     1     1     1024           1030        -6     1204           1215\n 6  2013     1     1     1127           1129        -2     1303           1309\n 7  2013     1     1     1157           1205        -8     1342           1345\n 8  2013     1     1     1317           1325        -8     1454           1505\n 9  2013     1     1     1449           1450        -1     1651           1640\n10  2013     1     1     1505           1510        -5     1654           1655\n# ℹ 6,193 more rows\n# ℹ 11 more variables: arr_delay &lt;dbl&gt;, carrier &lt;chr&gt;, flight &lt;int&gt;,\n#   tailnum &lt;chr&gt;, origin &lt;chr&gt;, dest &lt;chr&gt;, air_time &lt;dbl&gt;, distance &lt;dbl&gt;,\n#   hour &lt;dbl&gt;, minute &lt;dbl&gt;, time_hour &lt;dttm&gt;\n\n\nHint: Logical operators in R:\n\n\n\n\n\n\n\noperator\ndefinition\n\n\n\n\n&lt;\nis less than?\n\n\n&lt;=\nis less than or equal to?\n\n\n&gt;\nis greater than?\n\n\n&gt;=\nis greater than or equal to?\n\n\n==\nis exactly equal to?\n\n\n!=\nis not equal to?\n\n\nx & y\nis x AND y?\n\n\nx \\| y\nis x OR y?\n\n\nis.na(x)\nis x NA?\n\n\n!is.na(x)\nis x not NA?\n\n\nx %in% y\nis x in y?\n\n\n!(x %in% y)\nis x not in y?\n\n\n!x\nis not x? (only makes sense if x is TRUE or FALSE)"
  },
  {
    "objectID": "ae/ae-04-flights-wrangling-A.html#exercise-7---count",
    "href": "ae/ae-04-flights-wrangling-A.html#exercise-7---count",
    "title": "AE 04: NYC flights + data wrangling",
    "section": "Exercise 7 - count()",
    "text": "Exercise 7 - count()\n\nDemo: Create a frequency table of the destination locations for flights from New York.\n\n\nflights |&gt;\n  count(dest)\n\n# A tibble: 105 × 2\n   dest      n\n   &lt;chr&gt; &lt;int&gt;\n 1 ABQ     254\n 2 ACK     265\n 3 ALB     439\n 4 ANC       8\n 5 ATL   17215\n 6 AUS    2439\n 7 AVL     275\n 8 BDL     443\n 9 BGR     375\n10 BHM     297\n# ℹ 95 more rows\n\n\n\nDemo: In which month was there the fewest number of flights? How many flights were there in that month?\n\n\nflights |&gt;\n  count(month) |&gt;\n  filter(n == min(n))\n\n# A tibble: 1 × 2\n  month     n\n  &lt;int&gt; &lt;int&gt;\n1     2 24951\n\n\n\nYour turn: On which date (month + day) was there the largest number of flights? How many flights were there on that day?\n\n\nflights |&gt;\n  count(month, day) |&gt;\n  filter(n == max(n))\n\n# A tibble: 1 × 3\n  month   day     n\n  &lt;int&gt; &lt;int&gt; &lt;int&gt;\n1    11    27  1014"
  },
  {
    "objectID": "ae/ae-04-flights-wrangling-A.html#exercise-8---mutate",
    "href": "ae/ae-04-flights-wrangling-A.html#exercise-8---mutate",
    "title": "AE 04: NYC flights + data wrangling",
    "section": "Exercise 8 - mutate()",
    "text": "Exercise 8 - mutate()\n\nDemo: Convert air_time (minutes in the air) to hours and then create a new variable, mph, the miles per hour of the flight.\n\n\nflights |&gt;\n  mutate(\n    hours = air_time / 60,\n    mph = distance / hours\n    ) |&gt;\n  select(air_time, distance, hours, mph)\n\n# A tibble: 336,776 × 4\n   air_time distance hours   mph\n      &lt;dbl&gt;    &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt;\n 1      227     1400 3.78   370.\n 2      227     1416 3.78   374.\n 3      160     1089 2.67   408.\n 4      183     1576 3.05   517.\n 5      116      762 1.93   394.\n 6      150      719 2.5    288.\n 7      158     1065 2.63   404.\n 8       53      229 0.883  259.\n 9      140      944 2.33   405.\n10      138      733 2.3    319.\n# ℹ 336,766 more rows\n\n\n\nYour turn: Create a new variable to calculate the percentage of flights in each month. What percentage of flights take place in July?\n\n\nflights |&gt;\n  count(month) |&gt;\n  mutate(perc = n / sum(n) * 100)\n\n# A tibble: 12 × 3\n   month     n  perc\n   &lt;int&gt; &lt;int&gt; &lt;dbl&gt;\n 1     1 27004  8.02\n 2     2 24951  7.41\n 3     3 28834  8.56\n 4     4 28330  8.41\n 5     5 28796  8.55\n 6     6 28243  8.39\n 7     7 29425  8.74\n 8     8 29327  8.71\n 9     9 27574  8.19\n10    10 28889  8.58\n11    11 27268  8.10\n12    12 28135  8.35\n\n\n\nDemo: Create a new variable, rdu_bound, which indicates whether the flight is to RDU or not. Then, for each departure airport (origin), calculate what proportion of flights originating from that airport are to RDU.\n\n\nflights |&gt;\n  mutate(rdu_bound = if_else(dest == \"RDU\", \"Yes\", \"No\")) |&gt;\n  count(origin, rdu_bound) |&gt;\n  group_by(origin) |&gt;\n  mutate(prop = n / sum(n)) |&gt;\n  filter(rdu_bound == \"Yes\")\n\n# A tibble: 3 × 4\n# Groups:   origin [3]\n  origin rdu_bound     n   prop\n  &lt;chr&gt;  &lt;chr&gt;     &lt;int&gt;  &lt;dbl&gt;\n1 EWR    Yes        1482 0.0123\n2 JFK    Yes        3100 0.0279\n3 LGA    Yes        3581 0.0342"
  },
  {
    "objectID": "ae/ae-04-flights-wrangling-A.html#exercise-9---summarize",
    "href": "ae/ae-04-flights-wrangling-A.html#exercise-9---summarize",
    "title": "AE 04: NYC flights + data wrangling",
    "section": "Exercise 9 - summarize()",
    "text": "Exercise 9 - summarize()\n\nDemo: Find mean arrival delay for all flights.\n\n\nflights |&gt;\n  summarize(mean_dep_delay = mean(dep_delay))\n\n# A tibble: 1 × 1\n  mean_dep_delay\n           &lt;dbl&gt;\n1             NA"
  },
  {
    "objectID": "ae/ae-04-flights-wrangling-A.html#exercise-10---group_by",
    "href": "ae/ae-04-flights-wrangling-A.html#exercise-10---group_by",
    "title": "AE 04: NYC flights + data wrangling",
    "section": "Exercise 10 - group_by()",
    "text": "Exercise 10 - group_by()\n\nDemo: Find mean arrival delay for for each month.\n\n\nflights |&gt;\n  group_by(month) |&gt;\n  summarize(mean_arr_delay = mean(arr_delay, na.rm = TRUE))\n\n# A tibble: 12 × 2\n   month mean_arr_delay\n   &lt;int&gt;          &lt;dbl&gt;\n 1     1          6.13 \n 2     2          5.61 \n 3     3          5.81 \n 4     4         11.2  \n 5     5          3.52 \n 6     6         16.5  \n 7     7         16.7  \n 8     8          6.04 \n 9     9         -4.02 \n10    10         -0.167\n11    11          0.461\n12    12         14.9  \n\n\n\nYour turn: What is the median departure delay for each airports around NYC (origin)? Which airport has the shortest median departure delay?\n\n\nflights |&gt;\n  group_by(origin) |&gt;\n  summarize(med_dep_delay = median(dep_delay, na.rm = TRUE))\n\n# A tibble: 3 × 2\n  origin med_dep_delay\n  &lt;chr&gt;          &lt;dbl&gt;\n1 EWR               -1\n2 JFK               -1\n3 LGA               -3"
  },
  {
    "objectID": "ae/ae-00-unvotes.html",
    "href": "ae/ae-00-unvotes.html",
    "title": "UN Votes",
    "section": "",
    "text": "How do various countries vote in the United Nations General Assembly, how have their voting patterns evolved throughout time, and how similarly or differently do they view certain issues? Answering these questions (at a high level) is the focus of this analysis.\n\n\nWe will use the tidyverse, lubridate, and scales packages for data wrangling and visualization, and the DT package for interactive display of tabular output, and the unvotes package for the data.\n\nlibrary(tidyverse)\nlibrary(lubridate)\nlibrary(scales)\nlibrary(DT)\nlibrary(unvotes)\n\n\n\n\nThe data we’re using originally come from the unvotes package. In the chunk below we modify the data by joining the various data frames provided in the package to help you get started with the analysis.\n\nunvotes &lt;- un_votes |&gt;\n  inner_join(un_roll_calls, by = \"rcid\") |&gt;\n  inner_join(un_roll_call_issues, by = \"rcid\", relationship =\n  \"many-to-many\")"
  },
  {
    "objectID": "ae/ae-00-unvotes.html#introduction",
    "href": "ae/ae-00-unvotes.html#introduction",
    "title": "UN Votes",
    "section": "",
    "text": "How do various countries vote in the United Nations General Assembly, how have their voting patterns evolved throughout time, and how similarly or differently do they view certain issues? Answering these questions (at a high level) is the focus of this analysis.\n\n\nWe will use the tidyverse, lubridate, and scales packages for data wrangling and visualization, and the DT package for interactive display of tabular output, and the unvotes package for the data.\n\nlibrary(tidyverse)\nlibrary(lubridate)\nlibrary(scales)\nlibrary(DT)\nlibrary(unvotes)\n\n\n\n\nThe data we’re using originally come from the unvotes package. In the chunk below we modify the data by joining the various data frames provided in the package to help you get started with the analysis.\n\nunvotes &lt;- un_votes |&gt;\n  inner_join(un_roll_calls, by = \"rcid\") |&gt;\n  inner_join(un_roll_call_issues, by = \"rcid\", relationship =\n  \"many-to-many\")"
  },
  {
    "objectID": "ae/ae-00-unvotes.html#un-voting-patterns",
    "href": "ae/ae-00-unvotes.html#un-voting-patterns",
    "title": "UN Votes",
    "section": "UN voting patterns",
    "text": "UN voting patterns\nLet’s create a data visualisation that displays how the voting record of the UK & NI changed over time on a variety of issues, and compares it to two other countries: US and Turkey.\nWe can easily change which countries are being plotted by changing which countries the code above filters for. Note that the country name should be spelled and capitalized exactly the same way as it appears in the data. See the Appendix for a list of the countries in the data.\n\nunvotes |&gt;\n  filter(country %in% c(\"United Kingdom\", \"United States\", \"Turkey\")) |&gt;\n  mutate(year = year(date)) |&gt;\n  group_by(country, year, issue) |&gt;\n  summarize(percent_yes = mean(vote == \"yes\")) |&gt;\n  ggplot(mapping = aes(x = year, y = percent_yes, color = country)) +\n  geom_point(alpha = 0.4) +\n  geom_smooth(method = \"loess\", se = FALSE) +\n  facet_wrap(~issue) +\n  scale_y_continuous(labels = percent) +\n  labs(\n    title = \"Percentage of 'Yes' votes in the UN General Assembly\",\n    subtitle = \"1946 to 2019\",\n    y = \"% Yes\",\n    x = \"Year\",\n    color = \"Country\"\n  )"
  },
  {
    "objectID": "ae/ae-00-unvotes.html#references",
    "href": "ae/ae-00-unvotes.html#references",
    "title": "UN Votes",
    "section": "References",
    "text": "References\n\nDavid Robinson (2017). unvotes: United Nations General Assembly Voting Data. R package version 0.2.0.\nErik Voeten “Data and Analyses of Voting in the UN General Assembly” Routledge Handbook of International Organization, edited by Bob Reinalda (published May 27, 2013).\nMuch of the analysis has been modeled on the examples presented in the unvotes package vignette."
  },
  {
    "objectID": "ae/ae-00-unvotes.html#appendix",
    "href": "ae/ae-00-unvotes.html#appendix",
    "title": "UN Votes",
    "section": "Appendix",
    "text": "Appendix\nBelow is a list of countries in the dataset:"
  },
  {
    "objectID": "ae/ae-17-effective-dataviz-A.html",
    "href": "ae/ae-17-effective-dataviz-A.html",
    "title": "Trends instructional staff employees in universities",
    "section": "",
    "text": "The American Association of University Professors (AAUP) is a nonprofit membership association of faculty and other academic professionals. This report by the AAUP shows trends in instructional staff employees between 1975 and 2011, and contains the following image. What trends are apparent in this visualization?"
  },
  {
    "objectID": "ae/ae-17-effective-dataviz-A.html#packages",
    "href": "ae/ae-17-effective-dataviz-A.html#packages",
    "title": "Trends instructional staff employees in universities",
    "section": "Packages",
    "text": "Packages\n\nlibrary(tidyverse)\nlibrary(scales)\nlibrary(ggthemes)"
  },
  {
    "objectID": "ae/ae-17-effective-dataviz-A.html#data",
    "href": "ae/ae-17-effective-dataviz-A.html#data",
    "title": "Trends instructional staff employees in universities",
    "section": "Data",
    "text": "Data\nEach row in this dataset represents a faculty type, and the columns are the years for which we have data. The values are percentage of hires of that type of faculty for each year.\n\nstaff &lt;- read_csv(\"https://sta199-s24.github.io/data/instructional-staff.csv\")\nstaff\n\n# A tibble: 5 × 12\n  faculty_type    `1975` `1989` `1993` `1995` `1999` `2001` `2003` `2005` `2007`\n  &lt;chr&gt;            &lt;dbl&gt;  &lt;dbl&gt;  &lt;dbl&gt;  &lt;dbl&gt;  &lt;dbl&gt;  &lt;dbl&gt;  &lt;dbl&gt;  &lt;dbl&gt;  &lt;dbl&gt;\n1 Full-Time Tenu…   29     27.6   25     24.8   21.8   20.3   19.3   17.8   17.2\n2 Full-Time Tenu…   16.1   11.4   10.2    9.6    8.9    9.2    8.8    8.2    8  \n3 Full-Time Non-…   10.3   14.1   13.6   13.6   15.2   15.5   15     14.8   14.9\n4 Part-Time Facu…   24     30.4   33.1   33.2   35.5   36     37     39.3   40.5\n5 Graduate Stude…   20.5   16.5   18.1   18.8   18.7   19     20     19.9   19.5\n# ℹ 2 more variables: `2009` &lt;dbl&gt;, `2011` &lt;dbl&gt;"
  },
  {
    "objectID": "ae/ae-17-effective-dataviz-A.html#recreate",
    "href": "ae/ae-17-effective-dataviz-A.html#recreate",
    "title": "Trends instructional staff employees in universities",
    "section": "Recreate",
    "text": "Recreate\n\nYour turn (10 minutes): Recreate the visualization above. Try to match as many of the elements as possible. Hint: You might need to reshape your data first.\n\n\nstaff_long &lt;- staff |&gt;\n  pivot_longer(\n    cols = -faculty_type, names_to = \"year\",\n    values_to = \"percentage\"\n  ) |&gt;\n  mutate(\n    percentage = as.numeric(percentage),\n    faculty_type = fct_relevel(\n      faculty_type,\n      \"Full-Time Tenured Faculty\",\n      \"Full-Time Tenure-Track Faculty\",\n      \"Full-Time Non-Tenure-Track Faculty\",\n      \"Part-Time Faculty\",\n      \"Graduate Student Employees\"\n    )\n  )\n\n\nggplot(\n  staff_long,\n  aes(\n    x = str_wrap(faculty_type, 20),\n    y = percentage,\n    fill = year\n    )\n  ) +\n  geom_col(position = \"dodge\") +\n  scale_y_continuous(breaks = seq(5, 45, 5), limits = c(0, 45)) +\n  labs(\n    x = NULL,\n    y = \"Percent of Total Instructional Staff\",\n    fill = NULL,\n    title = \"Trends in Instructional Staff Employment Status, 1975-2011\",\n    subtitle = \"All Institutions, National Totals\",\n    caption = \"Source: US Department of Education, IPEDS Fall Staff Survey\"\n  ) +\n  theme(\n    legend.position = c(0.4, 0.93),\n    legend.direction = \"horizontal\",\n    legend.key.size = unit(0.2, \"cm\"),\n    legend.key.height = unit(0.1, \"cm\"),\n    legend.text.align = 0,\n    legend.background = element_rect(color = \"black\", linewidth = 0.2),\n    legend.text = element_text(size = 7),\n    panel.grid.minor = element_blank(),\n    panel.grid.major.x = element_blank(),\n    plot.caption = element_text(size = 8, hjust = 0)\n  ) +\n  guides(fill = guide_legend(nrow = 1))"
  },
  {
    "objectID": "ae/ae-17-effective-dataviz-A.html#represent-percentages-as-parts-of-a-whole",
    "href": "ae/ae-17-effective-dataviz-A.html#represent-percentages-as-parts-of-a-whole",
    "title": "Trends instructional staff employees in universities",
    "section": "Represent percentages as parts of a whole",
    "text": "Represent percentages as parts of a whole\n\nDemo: Recreate the previous visualization where the percentages are represented as parts of a whole.\n\n\nggplot(\n  staff_long,\n  aes(\n    x = str_wrap(faculty_type, 20),\n    y = percentage,\n    fill = fct_rev(year)\n    )\n  ) +\n  geom_col(position = \"fill\", color = \"white\", linewidth = 0.2) +\n  scale_y_continuous(labels = label_percent()) +\n  labs(\n    x = NULL,\n    y = \"Percent of Total Instructional Staff\",\n    fill = NULL,\n    title = \"Trends in Instructional Staff Employment Status, 1975-2011\",\n    subtitle = \"All Institutions, National Totals\",\n    caption = \"Source: US Department of Education, IPEDS Fall Staff Survey\"\n  ) +\n  theme(\n    legend.text.align = 0,\n    legend.background = element_rect(color = \"black\", size = 0.2),\n    legend.text = element_text(size = 7),\n    panel.grid.minor = element_blank(),\n    panel.grid.major.x = element_blank(),\n    plot.caption = element_text(size = 8, hjust = 0)\n  )\n\nWarning: The `size` argument of `element_rect()` is deprecated as of ggplot2 3.4.0.\nℹ Please use the `linewidth` argument instead."
  },
  {
    "objectID": "ae/ae-17-effective-dataviz-A.html#place-time-on-x-axis",
    "href": "ae/ae-17-effective-dataviz-A.html#place-time-on-x-axis",
    "title": "Trends instructional staff employees in universities",
    "section": "Place time on x-axis",
    "text": "Place time on x-axis\n\nDemo: Convert the visualization to a line plot with time on the x-axis.\n\n\nggplot(\n  staff_long,\n  aes(\n    x = year,\n    y = percentage,\n    color = str_wrap(faculty_type, 20),\n    group = str_wrap(faculty_type, 20)\n    )\n  ) +\n  geom_line(linewidth = 1) +\n  labs(\n    x = NULL,\n    y = \"Percent of Total Instructional Staff\",\n    color = NULL,\n    title = \"Trends in Instructional Staff Employment Status, 1975-2011\",\n    subtitle = \"All Institutions, National Totals\",\n    caption = \"Source: US Department of Education, IPEDS Fall Staff Survey\"\n  ) +\n  scale_y_continuous(labels = label_percent(accuracy = 1, scale = 1)) +\n  theme(\n    legend.key.height = unit(1.5, \"cm\"),\n    plot.caption = element_text(size = 8, hjust = 0)\n  )"
  },
  {
    "objectID": "ae/ae-17-effective-dataviz-A.html#pay-attention-to-variable-types",
    "href": "ae/ae-17-effective-dataviz-A.html#pay-attention-to-variable-types",
    "title": "Trends instructional staff employees in universities",
    "section": "Pay attention to variable types",
    "text": "Pay attention to variable types\n\nQuestion: What is wrong with the x-axis of the plot above? How can you fix it?\n\nTime is represented as a character string (equally spaces between levels) instead of on a continuous scale (with spacing indicating numbers of years between ticks.\n\nYour turn: Implement the fix for the x-axis of the plot.\n\n\nstaff_long &lt;- staff_long |&gt;\n  mutate(year = as.numeric(year))\n\nggplot(\n  staff_long,\n  aes(\n    x = year,\n    y = percentage,\n    color = str_wrap(faculty_type, 20),\n    group = str_wrap(faculty_type, 20)\n  )\n) +\n  geom_line(linewidth = 1) +\n  labs(\n    x = NULL,\n    y = \"Percent of Total Instructional Staff\",\n    color = NULL,\n    title = \"Trends in Instructional Staff Employment Status, 1975-2011\",\n    subtitle = \"All Institutions, National Totals\",\n    caption = \"Source: US Department of Education, IPEDS Fall Staff Survey\"\n  ) +\n  scale_y_continuous(labels = label_percent(accuracy = 1, scale = 1)) +\n  theme(\n    legend.key.height = unit(1.5, \"cm\"),\n    plot.caption = element_text(size = 8, hjust = 0)\n  )"
  },
  {
    "objectID": "ae/ae-17-effective-dataviz-A.html#use-an-accessible-color-scale",
    "href": "ae/ae-17-effective-dataviz-A.html#use-an-accessible-color-scale",
    "title": "Trends instructional staff employees in universities",
    "section": "Use an accessible color scale",
    "text": "Use an accessible color scale\nQuestion: What do we mean by an accessible color scale? What types of color vision deficiencies are there?\n\nDemo: What does the plot look like to people with various color vision deficiencies?\nDemo: Remake the plot with an accessible color scale.\n\n\nggplot(\n  staff_long,\n  aes(\n    x = year,\n    y = percentage,\n    color = str_wrap(faculty_type, 20),\n    group = str_wrap(faculty_type, 20)\n    )\n  ) +\n  geom_line(linewidth = 1) +\n  labs(\n    x = NULL,\n    y = \"Percent of Total Instructional Staff\",\n    color = NULL,\n    title = \"Trends in Instructional Staff Employment Status, 1975-2011\",\n    subtitle = \"All Institutions, National Totals\",\n    caption = \"Source: US Department of Education, IPEDS Fall Staff Survey\"\n  ) +\n  scale_y_continuous(labels = label_percent(accuracy = 1, scale = 1)) +\n  theme(\n    legend.key.height = unit(1.5, \"cm\"),\n    plot.caption = element_text(size = 8, hjust = 0)\n  ) +\n  scale_color_colorblind() # from ggthemes package"
  },
  {
    "objectID": "ae/ae-17-effective-dataviz-A.html#use-direct-labeling",
    "href": "ae/ae-17-effective-dataviz-A.html#use-direct-labeling",
    "title": "Trends instructional staff employees in universities",
    "section": "Use direct labeling",
    "text": "Use direct labeling\n\nDemo: Remove the legend and add labels for each line at the end of the line (where x is the max(x) recorded).\n\n\nggplot(\n  staff_long,\n  aes(\n    x = year,\n    y = percentage,\n    color = faculty_type,\n    group = faculty_type\n    )\n  ) +\n  geom_line(linewidth = 1, show.legend = FALSE) +\n  geom_text(\n    data = staff_long |&gt; filter(year == max(year)),\n    aes(x = year + 1, y = percentage, label = faculty_type),\n    hjust = \"left\", show.legend = FALSE, size = 4\n  ) +\n  labs(\n    x = NULL,\n    y = \"Percent of Total Instructional Staff\",\n    color = NULL,\n    title = \"Trends in Instructional Staff Employment Status, 1975-2011\",\n    subtitle = \"All Institutions, National Totals\",\n    caption = \"Source: US Department of Education, IPEDS Fall Staff Survey\"\n  ) +\n  scale_y_continuous(labels = label_percent(accuracy = 1, scale = 1)) +\n  theme(\n    plot.caption = element_text(size = 8, hjust = 0),\n    plot.margin = margin(0.1, 2.5, 0.1, 0.1, unit = \"in\")\n  ) +\n  coord_cartesian(clip = \"off\") +\n  scale_color_colorblind()"
  },
  {
    "objectID": "ae/ae-17-effective-dataviz-A.html#use-color-to-draw-attention",
    "href": "ae/ae-17-effective-dataviz-A.html#use-color-to-draw-attention",
    "title": "Trends instructional staff employees in universities",
    "section": "Use color to draw attention",
    "text": "Use color to draw attention\n\nDemo: Redo the line plot where Part-time Faculty is red and the rest are gray.\n\n\nstaff_long &lt;- staff_long |&gt;\n  mutate(faculty_type_color = if_else(faculty_type == \"Part-Time Faculty\", \"firebrick3\", \"gray40\"))\n\n\nggplot(\n  staff_long,\n  aes(\n    x = year,\n    y = percentage,\n    color = faculty_type_color, group = faculty_type\n    )\n  ) +\n  geom_line(linewidth = 1, show.legend = FALSE) +\n  geom_text(\n    data = staff_long |&gt; filter(year == max(year)),\n    aes(x = year + 1, y = percentage, label = faculty_type),\n    hjust = \"left\", show.legend = FALSE, size = 4\n  ) +\n  labs(\n    x = NULL,\n    y = \"Percent of Total Instructional Staff\",\n    color = NULL,\n    title = \"Trends in Instructional Staff Employment Status, 1975-2011\",\n    subtitle = \"All Institutions, National Totals\",\n    caption = \"Source: US Department of Education, IPEDS Fall Staff Survey\"\n  ) +\n  scale_y_continuous(labels = label_percent(accuracy = 1, scale = 1)) +\n  scale_color_identity() +\n  theme(\n    plot.caption = element_text(size = 8, hjust = 0),\n    plot.margin = margin(0.1, 2.5, 0.1, 0.1, unit = \"in\")\n  ) +\n  coord_cartesian(clip = \"off\")"
  },
  {
    "objectID": "ae/ae-17-effective-dataviz-A.html#pick-a-purpose",
    "href": "ae/ae-17-effective-dataviz-A.html#pick-a-purpose",
    "title": "Trends instructional staff employees in universities",
    "section": "Pick a purpose",
    "text": "Pick a purpose\n\np &lt;- ggplot(\n  staff_long,\n  aes(\n    x = year,\n    y = percentage,\n    color = faculty_type_color, group = faculty_type\n    )\n  ) +\n  geom_line(linewidth = 1, show.legend = FALSE) +\n  labs(\n    x = NULL,\n    y = \"Percent of Total Instructional Staff\",\n    color = NULL,\n    title = \"Trends in Instructional Staff Employment Status, 1975-2011\",\n    subtitle = \"All Institutions, National Totals\",\n    caption = \"Source: US Department of Education, IPEDS Fall Staff Survey\"\n  ) +\n  scale_y_continuous(labels = label_percent(accuracy = 1, scale = 1)) +\n  scale_color_identity() +\n  theme(\n    plot.caption = element_text(size = 8, hjust = 0),\n    plot.margin = margin(0.1, 0.6, 0.1, 0.1, unit = \"in\")\n  ) +\n  coord_cartesian(clip = \"off\") +\n  annotate(\n    geom = \"text\",\n    x = 2012, y = 41, label = \"Part-Time\\nFaculty\",\n    color = \"firebrick3\", hjust = \"left\", size = 5\n  ) +\n  annotate(\n    geom = \"text\",\n    x = 2012, y = 13.5, label = \"Other\\nFaculty\",\n    color = \"gray40\", hjust = \"left\", size = 5\n  ) +\n  annotate(\n    geom = \"segment\",\n    x = 2011.5, xend = 2011.5,\n    y = 7, yend = 20,\n    color = \"gray40\", linetype = \"dotted\"\n  )"
  },
  {
    "objectID": "ae/ae-17-effective-dataviz-A.html#use-labels-to-communicate-the-message",
    "href": "ae/ae-17-effective-dataviz-A.html#use-labels-to-communicate-the-message",
    "title": "Trends instructional staff employees in universities",
    "section": "Use labels to communicate the message",
    "text": "Use labels to communicate the message\n\np +\n  labs(\n    title = \"Instruction by part-time faculty on a steady increase\",\n    subtitle = \"Trends in Instructional Staff Employment Status, 1975-2011\\nAll Institutions, National Totals\",\n    caption = \"Source: US Department of Education, IPEDS Fall Staff Survey\",\n    y = \"Percent of Total Instructional Staff\",\n    x = NULL\n  )"
  },
  {
    "objectID": "ae/ae-17-effective-dataviz-A.html#simplify",
    "href": "ae/ae-17-effective-dataviz-A.html#simplify",
    "title": "Trends instructional staff employees in universities",
    "section": "Simplify",
    "text": "Simplify\n\np +\n  labs(\n    title = \"Instruction by part-time faculty on a steady increase\",\n    subtitle = \"Trends in Instructional Staff Employment Status, 1975-2011\\nAll Institutions, National Totals\",\n    caption = \"Source: US Department of Education, IPEDS Fall Staff Survey\",\n    y = \"Percent of Total Instructional Staff\",\n    x = NULL\n  ) +\n  theme(panel.grid.minor = element_blank())"
  },
  {
    "objectID": "ae/ae-17-effective-dataviz-A.html#summary",
    "href": "ae/ae-17-effective-dataviz-A.html#summary",
    "title": "Trends instructional staff employees in universities",
    "section": "Summary",
    "text": "Summary\n\nRepresent percentages as parts of a whole\nPlace variables representing time on the x-axis when possible\nPay attention to data types, e.g., represent time as time on a continuous scale, not years as levels of a categorical variable\nPrefer direct labeling over legends\nUse accessible colors\nUse color to draw attention\nPick a purpose and label, color, annotate for that purpose\nCommunicate your main message directly in the plot labels\nSimplify before you call it done (a.k.a. “Before you leave the house, look in the mirror and take one thing off”)"
  },
  {
    "objectID": "ae/ae-12-modeling-penguins-multi-A.html",
    "href": "ae/ae-12-modeling-penguins-multi-A.html",
    "title": "AE 12: Modeling penguins with multiple predictors",
    "section": "",
    "text": "In this application exercise we will be studying penguins. The data can be found in the palmerpenguins package and we will use tidyverse and tidymodels for data exploration and modeling, respectively.\nlibrary(tidyverse)\nlibrary(tidymodels)\nlibrary(palmerpenguins)\nPlease read the following context and take a glimpse at the data set before we get started.\nglimpse(penguins)\n\nRows: 344\nColumns: 8\n$ species           &lt;fct&gt; Adelie, Adelie, Adelie, Adelie, Adelie, Adelie, Adel…\n$ island            &lt;fct&gt; Torgersen, Torgersen, Torgersen, Torgersen, Torgerse…\n$ bill_length_mm    &lt;dbl&gt; 39.1, 39.5, 40.3, NA, 36.7, 39.3, 38.9, 39.2, 34.1, …\n$ bill_depth_mm     &lt;dbl&gt; 18.7, 17.4, 18.0, NA, 19.3, 20.6, 17.8, 19.6, 18.1, …\n$ flipper_length_mm &lt;int&gt; 181, 186, 195, NA, 193, 190, 181, 195, 193, 190, 186…\n$ body_mass_g       &lt;int&gt; 3750, 3800, 3250, NA, 3450, 3650, 3625, 4675, 3475, …\n$ sex               &lt;fct&gt; male, female, female, NA, female, male, female, male…\n$ year              &lt;int&gt; 2007, 2007, 2007, 2007, 2007, 2007, 2007, 2007, 2007…\nOur goal is to understand better how various body measurements and attributes of penguins relate to their body mass."
  },
  {
    "objectID": "ae/ae-12-modeling-penguins-multi-A.html#additive-vs.-interaction-models",
    "href": "ae/ae-12-modeling-penguins-multi-A.html#additive-vs.-interaction-models",
    "title": "AE 12: Modeling penguins with multiple predictors",
    "section": "Additive vs. interaction models",
    "text": "Additive vs. interaction models\n\nYour turn: Run the two chunks of code below and create two separate plots. How are the two plots different than each other? Which plot does the model we fit above represent?\n\n# Plot A\nggplot(\n  penguins, \n  aes(x = flipper_length_mm, y = body_mass_g, color = island)\n  ) +\n  geom_point(alpha = 0.5) +\n  geom_smooth(method = \"lm\") +\n  labs(title = \"Plot A - Interaction model\") +\n  theme(legend.position = \"bottom\")\n\n`geom_smooth()` using formula = 'y ~ x'\n\n\nWarning: Removed 2 rows containing non-finite values (`stat_smooth()`).\n\n\nWarning: Removed 2 rows containing missing values (`geom_point()`).\n\n# Plot B\nbm_fl_island_aug &lt;- augment(bm_fl_island_fit, new_data = penguins)\nggplot(\n  bm_fl_island_aug, \n  aes(x = flipper_length_mm, y = body_mass_g, color = island)\n  ) +\n  geom_point(alpha = 0.5) +\n  geom_smooth(aes(y = .pred), method = \"lm\") +\n  labs(title = \"Plot B - Additive model\") +\n  theme(legend.position = \"bottom\")\n\n`geom_smooth()` using formula = 'y ~ x'\n\n\nWarning: Removed 2 rows containing non-finite values (`stat_smooth()`).\nRemoved 2 rows containing missing values (`geom_point()`).\n\n\n\n\n\n\n\n\n\n\n\nPlot B represent the model we fit.\n\nYour turn: Interpret the slope coefficient for flipper length in the context of the data and the research question.\n\nFor every 1 millimeter the flipper is longer, we expect body mass to be higher, on average, by 44.5 grams, holding all else (the island) constant. In other words, this is true for penguins in a given island, regardless of the island.\n\nDemo: Predict the body mass of a Dream island penguin with a flipper length of 200 mm.\n\n\npenguin_200_Dream &lt;- tibble(\n  flipper_length_mm = 200,\n  island = \"Dream\"\n)\n\npredict(bm_fl_island_fit, new_data = penguin_200_Dream)\n\n# A tibble: 1 × 1\n  .pred\n  &lt;dbl&gt;\n1 4021.\n\n\n\nReview: Look back at Plot B. What assumption does the additive model make about the slopes between flipper length and body mass for each of the three islands?\n\nThe additive model assumes the same slope between body mass and flipper length for all three islands.\n\nDemo: Now fit the interaction model represented in Plot A and write the estimated regression model.\n\n\nbm_fl_island_int_fit &lt;- linear_reg() |&gt;\n  fit(body_mass_g ~ flipper_length_mm * island, data = penguins)\n\ntidy(bm_fl_island_int_fit)\n\n# A tibble: 6 × 5\n  term                              estimate std.error statistic  p.value\n  &lt;chr&gt;                                &lt;dbl&gt;     &lt;dbl&gt;     &lt;dbl&gt;    &lt;dbl&gt;\n1 (Intercept)                        -5464.     431.      -12.7  2.51e-30\n2 flipper_length_mm                     48.5      2.05     23.7  1.66e-73\n3 islandDream                         3551.     969.        3.66 2.89e- 4\n4 islandTorgersen                     3218.    1680.        1.92 5.62e- 2\n5 flipper_length_mm:islandDream        -19.4      4.94     -3.93 1.03e- 4\n6 flipper_length_mm:islandTorgersen    -17.4      8.73     -1.99 4.69e- 2\n\n\n\\[\n\\widehat{body~mass} = -5464 \\\\\n+ 48.5 \\times flipper~length \\\\\n+ 3551 \\times Dream + 3218 \\times Torgersen \\\\\n- 19.4 \\times flipper~length*Dream - 17.4 \\times flipper~length*Torgersen\n\\]\n\nReview: What does modeling body mass with an interaction effect get us that without doing so does not?\n\nThe interaction effect allows us to model the rate of change in estimated body mass as flipper length increases as different in the three islands.\n\nYour turn: Predict the body mass of a Dream island penguin with a flipper length of 200 mm.\n\n\npredict(bm_fl_island_int_fit, new_data = penguin_200_Dream)\n\n# A tibble: 1 × 1\n  .pred\n  &lt;dbl&gt;\n1 3915."
  },
  {
    "objectID": "ae/ae-12-modeling-penguins-multi-A.html#choosing-a-model",
    "href": "ae/ae-12-modeling-penguins-multi-A.html#choosing-a-model",
    "title": "AE 12: Modeling penguins with multiple predictors",
    "section": "Choosing a model",
    "text": "Choosing a model\nRule of thumb: Occam’s Razor - Don’t overcomplicate the situation! We prefer the simplest best model.\n\nglance(bm_fl_island_fit)\n\n# A tibble: 1 × 12\n  r.squared adj.r.squared sigma statistic   p.value    df logLik   AIC   BIC\n      &lt;dbl&gt;         &lt;dbl&gt; &lt;dbl&gt;     &lt;dbl&gt;     &lt;dbl&gt; &lt;dbl&gt;  &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt;\n1     0.774         0.772  383.      386. 7.60e-109     3 -2517. 5045. 5064.\n# ℹ 3 more variables: deviance &lt;dbl&gt;, df.residual &lt;int&gt;, nobs &lt;int&gt;\n\nglance(bm_fl_island_int_fit)\n\n# A tibble: 1 × 12\n  r.squared adj.r.squared sigma statistic   p.value    df logLik   AIC   BIC\n      &lt;dbl&gt;         &lt;dbl&gt; &lt;dbl&gt;     &lt;dbl&gt;     &lt;dbl&gt; &lt;dbl&gt;  &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt;\n1     0.786         0.783  374.      246. 4.55e-110     5 -2508. 5031. 5057.\n# ℹ 3 more variables: deviance &lt;dbl&gt;, df.residual &lt;int&gt;, nobs &lt;int&gt;\n\n\n\nReview: What is R-squared? What is adjusted R-squared?\n\nR-squared is the percent variability in the response that is explained by our model. (Can use when models have same number of variables for model selection)\nAdjusted R-squared is similar, but has a penalty for the number of variables in the model. (Should use for model selection when models have different numbers of variables)."
  },
  {
    "objectID": "ae/ae-03-duke-forest.html",
    "href": "ae/ae-03-duke-forest.html",
    "title": "AE 03: Duke Forest + data visualization",
    "section": "",
    "text": "library(tidyverse)\nlibrary(openintro)"
  },
  {
    "objectID": "ae/ae-03-duke-forest.html#exercise-1",
    "href": "ae/ae-03-duke-forest.html#exercise-1",
    "title": "AE 03: Duke Forest + data visualization",
    "section": "Exercise 1",
    "text": "Exercise 1\nSuppose you’re helping some family friends who are looking to buy a house in Duke Forest. As they browse Zillow listings, they realize some houses have garages and others don’t, and they wonder: Does having a garage make a difference?\nLuckily, you can help them answer this question with data visualization!\n\nMake histograms of the prices of houses in Duke Forest based on whether they have a garage.\n\nIn order to do this, you will first need to create a new variable called garage (with levels \"Garage\" and \"No garage\").\nBelow is the code for creating this new variable. Here, we mutate() the duke_forest data frame to add a new variable called garage which takes the value \"Garage\" if the text string \"Garage\" is detected in the parking variable and takes the test string \"No garage\" if not.\n\n\n\nduke_forest |&gt;\n  mutate(garage = if_else(str_detect(parking, \"Garage\"),   \"Garage\", \"No garage\"))\n\n\nThen, facet by garage and use different colors for the two facets.\nChoose an appropriate binwidth and decide whether a legend is needed, and turn it off if not.\nInclude informative title and axis labels.\nFinally, include a brief (2-3 sentence) narrative comparing the distributions of prices of Duke Forest houses that do and don’t have garages. Your narrative should touch on whether having a garage “makes a difference” in terms of the price of the house.\n\n\n# add code here\n\nAdd narrative here…\n\n\n\n\n\n\nImportant\n\n\n\nNow is a good time to render, commit, and push. Make sure that you commit and push all changed documents and your Git pane is completely empty before proceeding."
  },
  {
    "objectID": "ae/ae-03-duke-forest.html#exercise-2",
    "href": "ae/ae-03-duke-forest.html#exercise-2",
    "title": "AE 03: Duke Forest + data visualization",
    "section": "Exercise 2",
    "text": "Exercise 2\nIt’s expected that within any given marker larger houses will be priced higher. It’s also expected that the age of the house will have an effect on the price. However in some markets new houses might be more expensive while in others new construction might mean “no character” and hence be less expensive. So your family friends ask: “In Duke Forest, do houses that are bigger and more expensive tend to be newer ones than those that are smaller and cheaper?”\nOnce again, data visualization skills to the rescue!\n\nCreate a scatter plot to exploring the relationship between price and area, conditioning for year_built.\nUse geom_smooth() with the argument se = FALSE to add a smooth curve fit to the data and color the points by year_built.\nInclude informative title, axis, and legend labels.\nDiscuss each of the following claims (1-2 sentences per claim). Your discussion should touch on specific things you observe in your plot as evidence for or against the claims.\n\nClaim 1: Larger houses are priced higher.\nClaim 2: Newer houses are priced higher.\nClaim 3: Bigger and more expensive houses tend to be newer ones than smaller and cheaper ones.\n\n\n\n# add code here\n\nAdd narrative here…\n\n\n\n\n\n\nImportant\n\n\n\nNow is a good time to render, commit, and push. Make sure that you commit and push all changed documents and your Git pane is completely empty before proceeding."
  },
  {
    "objectID": "ae/ae-04-flights-wrangling.html",
    "href": "ae/ae-04-flights-wrangling.html",
    "title": "AE 04: NYC flights + data wrangling",
    "section": "",
    "text": "library(tidyverse)\nlibrary(nycflights13)"
  },
  {
    "objectID": "ae/ae-04-flights-wrangling.html#exercise-1",
    "href": "ae/ae-04-flights-wrangling.html#exercise-1",
    "title": "AE 04: NYC flights + data wrangling",
    "section": "Exercise 1",
    "text": "Exercise 1\nYour turn: Fill in the blanks:\nThe flights data frame has ___ rows. Each row represents a ___."
  },
  {
    "objectID": "ae/ae-04-flights-wrangling.html#exercise-2",
    "href": "ae/ae-04-flights-wrangling.html#exercise-2",
    "title": "AE 04: NYC flights + data wrangling",
    "section": "Exercise 2",
    "text": "Exercise 2\nYour turn: What are the names of the variables in flights.\n\n# add code here"
  },
  {
    "objectID": "ae/ae-04-flights-wrangling.html#exercise-3---select",
    "href": "ae/ae-04-flights-wrangling.html#exercise-3---select",
    "title": "AE 04: NYC flights + data wrangling",
    "section": "Exercise 3 - select()",
    "text": "Exercise 3 - select()\n\nDemo: Make a data frame that only contains the variables dep_delay and arr_delay.\n\n\n# add code here\n\n\nDemo: Make a data frame that keeps every variable except dep_delay.\n\n\n# add code here\n\n\nDemo: Make a data frame that includes all variables between year through dep_delay (inclusive). These are all variables that provide information about the departure of each flight.\n\n\n# add code here\n\n\nDemo: Use the select helper contains() to make a data frame that includes the variables associated with the arrival, i.e., contains the string \"arr\\_\" in the name.\n\n\n# add code here"
  },
  {
    "objectID": "ae/ae-04-flights-wrangling.html#exercise-4---slice",
    "href": "ae/ae-04-flights-wrangling.html#exercise-4---slice",
    "title": "AE 04: NYC flights + data wrangling",
    "section": "Exercise 4 - slice()",
    "text": "Exercise 4 - slice()\n\nDemo: Display the first five rows of the flights data frame.\n\n\n# add code here\n\n\nDemo: Display the last two rows of the flights data frame.\n\n\n# add code here"
  },
  {
    "objectID": "ae/ae-04-flights-wrangling.html#exercise-5---arrange",
    "href": "ae/ae-04-flights-wrangling.html#exercise-5---arrange",
    "title": "AE 04: NYC flights + data wrangling",
    "section": "Exercise 5 - arrange()",
    "text": "Exercise 5 - arrange()\n\nDemo: Let’s arrange the data by departure delay, so the flights with the shortest departure delays will be at the top of the data frame.\n\n\n# add code here\n\n\nQuestion: What does it mean for the dep_delay to have a negative value?\n\nAdd your response here.\n\nDemo: Arrange the data by descending departure delay, so the flights with the longest departure delays will be at the top.\n\n\n# add code here\n\n\nYour turn: Create a data frame that only includes the plane tail number (tailnum), carrier (carrier), and departure delay for the flight with the longest departure delay. What is the plane tail number (tailnum) for this flight?\n\n\n# add code here"
  },
  {
    "objectID": "ae/ae-04-flights-wrangling.html#exercise-6---filter",
    "href": "ae/ae-04-flights-wrangling.html#exercise-6---filter",
    "title": "AE 04: NYC flights + data wrangling",
    "section": "Exercise 6 - filter()",
    "text": "Exercise 6 - filter()\n\nDemo: Filter for all rows where the destination airport is RDU.\n\n\n# add code here\n\n\nDemo: Filter for all rows where the destination airport is RDU and the arrival delay is less than 0.\n\n\n# add code here\n\n\nYour turn: Describe what the code is doing in words.\n\nAdd response here.\n\nflights |&gt;\n  filter(\n    dest %in% c(\"RDU\", \"GSO\"),\n    arr_delay &lt; 0 | dep_delay &lt; 0\n  )\n\n# A tibble: 6,203 × 19\n    year month   day dep_time sched_dep_time dep_delay arr_time sched_arr_time\n   &lt;int&gt; &lt;int&gt; &lt;int&gt;    &lt;int&gt;          &lt;int&gt;     &lt;dbl&gt;    &lt;int&gt;          &lt;int&gt;\n 1  2013     1     1      800            810       -10      949            955\n 2  2013     1     1      832            840        -8     1006           1030\n 3  2013     1     1      851            851         0     1032           1036\n 4  2013     1     1      917            920        -3     1052           1108\n 5  2013     1     1     1024           1030        -6     1204           1215\n 6  2013     1     1     1127           1129        -2     1303           1309\n 7  2013     1     1     1157           1205        -8     1342           1345\n 8  2013     1     1     1317           1325        -8     1454           1505\n 9  2013     1     1     1449           1450        -1     1651           1640\n10  2013     1     1     1505           1510        -5     1654           1655\n# ℹ 6,193 more rows\n# ℹ 11 more variables: arr_delay &lt;dbl&gt;, carrier &lt;chr&gt;, flight &lt;int&gt;,\n#   tailnum &lt;chr&gt;, origin &lt;chr&gt;, dest &lt;chr&gt;, air_time &lt;dbl&gt;, distance &lt;dbl&gt;,\n#   hour &lt;dbl&gt;, minute &lt;dbl&gt;, time_hour &lt;dttm&gt;\n\n\nHint: Logical operators in R:\n\n\n\n\n\n\n\noperator\ndefinition\n\n\n\n\n&lt;\nis less than?\n\n\n&lt;=\nis less than or equal to?\n\n\n&gt;\nis greater than?\n\n\n&gt;=\nis greater than or equal to?\n\n\n==\nis exactly equal to?\n\n\n!=\nis not equal to?\n\n\nx & y\nis x AND y?\n\n\nx \\| y\nis x OR y?\n\n\nis.na(x)\nis x NA?\n\n\n!is.na(x)\nis x not NA?\n\n\nx %in% y\nis x in y?\n\n\n!(x %in% y)\nis x not in y?\n\n\n!x\nis not x? (only makes sense if x is TRUE or FALSE)"
  },
  {
    "objectID": "ae/ae-04-flights-wrangling.html#exercise-7---count",
    "href": "ae/ae-04-flights-wrangling.html#exercise-7---count",
    "title": "AE 04: NYC flights + data wrangling",
    "section": "Exercise 7 - count()",
    "text": "Exercise 7 - count()\n\nDemo: Create a frequency table of the destination locations for flights from New York.\n\n\n# add code here\n\n\nDemo: In which month was there the fewest number of flights? How many flights were there in that month?\n\n\n# add code here\n\n\nYour turn: On which date (month + day) was there the largest number of flights? How many flights were there on that day?\n\n\n# add code here"
  },
  {
    "objectID": "ae/ae-04-flights-wrangling.html#exercise-8---mutate",
    "href": "ae/ae-04-flights-wrangling.html#exercise-8---mutate",
    "title": "AE 04: NYC flights + data wrangling",
    "section": "Exercise 8 - mutate()",
    "text": "Exercise 8 - mutate()\n\nDemo: Convert air_time (minutes in the air) to hours and then create a new variable, mph, the miles per hour of the flight.\n\n\n# add code here\n\n\nYour turn: First, count the number of flights each month, and then calculate the proportion of flights in each month. What proportion of flights take place in July?\n\n\n# add code here\n\n\nDemo: Create a new variable, rdu_bound, which indicates whether the flight is to RDU or not. Then, for each departure airport (origin), calculate what proportion of flights originating from that airport are to RDU.\n\n\n# add code here"
  },
  {
    "objectID": "ae/ae-04-flights-wrangling.html#exercise-9---summarize",
    "href": "ae/ae-04-flights-wrangling.html#exercise-9---summarize",
    "title": "AE 04: NYC flights + data wrangling",
    "section": "Exercise 9 - summarize()",
    "text": "Exercise 9 - summarize()\n\nDemo: Find mean arrival delay for all flights.\n\n\n# add code here"
  },
  {
    "objectID": "ae/ae-04-flights-wrangling.html#exercise-10---group_by",
    "href": "ae/ae-04-flights-wrangling.html#exercise-10---group_by",
    "title": "AE 04: NYC flights + data wrangling",
    "section": "Exercise 10 - group_by()",
    "text": "Exercise 10 - group_by()\n\nDemo: Find mean arrival delay for for each month.\n\n\n# add code here\n\n\nYour turn: What is the median departure delay for each airports around NYC (origin)? Which airport has the shortest median departure delay?\n\n\n# add code here"
  },
  {
    "objectID": "ae/ae-15-duke-forest-bootstrap.html",
    "href": "ae/ae-15-duke-forest-bootstrap.html",
    "title": "AE 15: Modeling houses in Duke Forest",
    "section": "",
    "text": "In this application exercise, we will\nThe dataset are on housing prices in Duke Forest – a dataset you’ve seen before! It’s called duke_forest and it’s in the openintro package. Additionally, we’ll use tidyverse and tidymodels packages.\nlibrary(tidyverse)\nlibrary(tidymodels)\nlibrary(openintro)"
  },
  {
    "objectID": "ae/ae-15-duke-forest-bootstrap.html#exercise-1",
    "href": "ae/ae-15-duke-forest-bootstrap.html#exercise-1",
    "title": "AE 15: Modeling houses in Duke Forest",
    "section": "Exercise 1",
    "text": "Exercise 1\nVisualize the distribution of sizes of houses in Duke Forest. What is the size of a typical house?\n\n# add code here"
  },
  {
    "objectID": "ae/ae-15-duke-forest-bootstrap.html#exercise-2",
    "href": "ae/ae-15-duke-forest-bootstrap.html#exercise-2",
    "title": "AE 15: Modeling houses in Duke Forest",
    "section": "Exercise 2",
    "text": "Exercise 2\nConstruct a 95% confidence interval for the typical size of a house in Duke Forest. Interpret the interval in context of the data.\n\n# add code here\n\nAdd interpretation here."
  },
  {
    "objectID": "ae/ae-15-duke-forest-bootstrap.html#exercise-3",
    "href": "ae/ae-15-duke-forest-bootstrap.html#exercise-3",
    "title": "AE 15: Modeling houses in Duke Forest",
    "section": "Exercise 3",
    "text": "Exercise 3\nWithout calculating it – would a 90% confidence interval be wider or narrower? Why?\nAdd response here."
  },
  {
    "objectID": "ae/ae-15-duke-forest-bootstrap.html#exercise-4",
    "href": "ae/ae-15-duke-forest-bootstrap.html#exercise-4",
    "title": "AE 15: Modeling houses in Duke Forest",
    "section": "Exercise 4",
    "text": "Exercise 4\nConstruct the 90% confidence interval and interpret it.\n\n# add code here\n\nAdd interpretation here."
  },
  {
    "objectID": "ae/ae-15-duke-forest-bootstrap.html#exercise-5",
    "href": "ae/ae-15-duke-forest-bootstrap.html#exercise-5",
    "title": "AE 15: Modeling houses in Duke Forest",
    "section": "Exercise 5",
    "text": "Exercise 5\nQuantify the uncertainty around this slope using a 95% bootstrap confidence interval and interpret the interval in context of the data.\n\n# add code here\n\nAdd interpretation here."
  },
  {
    "objectID": "ae/ae-02-bechdel-dataviz-A.html",
    "href": "ae/ae-02-bechdel-dataviz-A.html",
    "title": "AE 02: Bechdel + data visualization",
    "section": "",
    "text": "Important\n\n\n\nThese are suggested answers. This document should be used as reference only, it’s not designed to be an exhaustive key.\nIn this mini analysis we work with the data used in the FiveThirtyEight story titled “The Dollar-And-Cents Case Against Hollywood’s Exclusion of Women”.\nThis analysis is about the Bechdel test, a measure of the representation of women in fiction."
  },
  {
    "objectID": "ae/ae-02-bechdel-dataviz-A.html#getting-started",
    "href": "ae/ae-02-bechdel-dataviz-A.html#getting-started",
    "title": "AE 02: Bechdel + data visualization",
    "section": "Getting started",
    "text": "Getting started\n\nPackages\nWe start with loading the packages we’ll use: tidyverse for majority of the analysis and scales for pretty plot labels later on.\n\nlibrary(tidyverse)\nlibrary(scales)\n\n\n\nData\nThe data are stored as a CSV (comma separated values) file in the data folder of your repository. Let’s read it from there and save it as an object called bechdel.\n\nbechdel &lt;- read_csv(\"https://sta199-s24.github.io/data/bechdel.csv\")\n\n\n\nGet to know the data\nWe can use the glimpse function to get an overview (or “glimpse”) of the data.\n\nglimpse(bechdel)\n\nRows: 1,615\nColumns: 7\n$ title       &lt;chr&gt; \"21 & Over\", \"Dredd 3D\", \"12 Years a Slave\", \"2 Guns\", \"42…\n$ year        &lt;dbl&gt; 2013, 2012, 2013, 2013, 2013, 2013, 2013, 2013, 2013, 2013…\n$ gross_2013  &lt;dbl&gt; 67878146, 55078343, 211714070, 208105475, 190040426, 18416…\n$ budget_2013 &lt;dbl&gt; 13000000, 45658735, 20000000, 61000000, 40000000, 22500000…\n$ roi         &lt;dbl&gt; 5.221396, 1.206305, 10.585703, 3.411565, 4.751011, 0.81851…\n$ binary      &lt;chr&gt; \"FAIL\", \"PASS\", \"FAIL\", \"FAIL\", \"FAIL\", \"FAIL\", \"FAIL\", \"P…\n$ clean_test  &lt;chr&gt; \"notalk\", \"ok\", \"notalk\", \"notalk\", \"men\", \"men\", \"notalk\"…\n\n\n\nWhat does each observation (row) in the data set represent?\n\nEach observation represents a movie.\n\nHow many observations (rows) are in the data set?\n\nThere are 1615 movies in the dataset.\n\nHow many variables (columns) are in the data set?\n\nThere are 7 columns in the dataset.\n\n\nVariables of interest\nThe variables we’ll focus on are the following:\n\nbudget_2013: Budget in 2013 inflation adjusted dollars.\ngross_2013: Gross (US and international combined) in 2013 inflation adjusted dollars.\nroi: Return on investment, calculated as the ratio of the gross to budget.\nclean_test: Bechdel test result:\n\nok = passes test\ndubious\nmen = women only talk about men\nnotalk = women don’t talk to each other\nnowomen = fewer than two women\n\nbinary: Bechdel Test PASS vs FAIL binary\n\nWe will also use the year of release in data prep and title of movie to take a deeper look at some outliers.\nThere are a few other variables in the dataset, but we won’t be using them in this analysis."
  },
  {
    "objectID": "ae/ae-02-bechdel-dataviz-A.html#visualizing-data-with-ggplot2",
    "href": "ae/ae-02-bechdel-dataviz-A.html#visualizing-data-with-ggplot2",
    "title": "AE 02: Bechdel + data visualization",
    "section": "Visualizing data with ggplot2",
    "text": "Visualizing data with ggplot2\nggplot2 is the package and ggplot() is the function in this package that is used to create a plot.\n\nggplot() creates the initial base coordinate system, and we will add layers to that base. We first specify the data set we will use with data = bechdel.\n\n\nggplot(data = bechdel)\n\n\n\n\n\n\n\n\n\nThe mapping argument is paired with an aesthetic (aes()), which tells us how the variables in our data set should be mapped to the visual properties of the graph.\n\n\nggplot(data = bechdel, \n       mapping = aes(x = budget_2013, y = gross_2013))\n\n\n\n\n\n\n\n\nAs we previously mentioned, we often omit the names of the first two arguments in R functions. So you’ll often see this written as:\n\nggplot(bechdel, \n       aes(x = budget_2013, y = gross_2013))\n\n\n\n\n\n\n\n\nNote that the result is exactly the same.\n\nThe geom_xx function specifies the type of plot we want to use to represent the data. In the code below, we use geom_point which creates a plot where each observation is represented by a point.\n\n\nggplot(bechdel, \n       aes(x = budget_2013, y = gross_2013)) +\n  geom_point()\n\nWarning: Removed 15 rows containing missing values (`geom_point()`).\n\n\n\n\n\n\n\n\n\nNote that this results in a warning as well. What does the warning mean?"
  },
  {
    "objectID": "ae/ae-02-bechdel-dataviz-A.html#gross-revenue-vs.-budget",
    "href": "ae/ae-02-bechdel-dataviz-A.html#gross-revenue-vs.-budget",
    "title": "AE 02: Bechdel + data visualization",
    "section": "Gross revenue vs. budget",
    "text": "Gross revenue vs. budget\n\nStep 1 - Your turn\nModify the following plot to change the color of all points to a different color.\n\n\n\n\n\n\nTip\n\n\n\nSee http://www.stat.columbia.edu/~tzheng/files/Rcolor.pdf for many color options you can use by name in R or use the hex code for a color of your choice.\n\n\n\nggplot(bechdel, \n       aes(x = budget_2013, y = gross_2013)) +\n  geom_point(color = \"coral\") \n\nWarning: Removed 15 rows containing missing values (`geom_point()`).\n\n\n\n\n\n\n\n\n\n\n\nStep 2 - Your turn\nAdd labels for the title and x and y axes.\n\nggplot(bechdel, \n       aes(x = budget_2013, y = gross_2013))+\n  geom_point(color = \"deepskyblue3\") + \n  labs(\n    x = \"Budget (in 2013 $)\", \n    y = \"Gross revenue (in 2013 $)\", \n    title = \"Gross revenue vs. budget\"\n    )\n\nWarning: Removed 15 rows containing missing values (`geom_point()`).\n\n\n\n\n\n\n\n\n\n\n\nStep 3 - Your turn\nAn aesthetic is a visual property of one of the objects in your plot. Commonly used aesthetic options are:\n\ncolor\nfill\nshape\nsize\nalpha (transparency)\n\nModify the plot below, so the color of the points is based on the variable binary.\n\nggplot(bechdel, \n       aes(x = budget_2013, y = gross_2013, color = binary)) +\n  geom_point() + \n  labs(\n    x = \"Budget (in 2013 $)\", \n    y = \"Gross revenue (in 2013 $)\", \n    title = \"Gross revenue vs. budget, by Bechdel test result\"\n    )\n\nWarning: Removed 15 rows containing missing values (`geom_point()`).\n\n\n\n\n\n\n\n\n\n\n\nStep 4 - Your turn\nExpand on your plot from the previous step to make the size of your points based on roi.\n\nggplot(bechdel, \n       aes(x = budget_2013, y = gross_2013,\n           color = binary, size = roi)) +\n  geom_point() + \n  labs(\n    x = \"Budget (in 2013 $)\", \n    y = \"Gross revenue (in 2013 $)\", \n    title = \"Gross revenue vs. budget, by Bechdel test result\"\n    )\n\nWarning: Removed 15 rows containing missing values (`geom_point()`).\n\n\n\n\n\n\n\n\n\n\n\nStep 5 - Your turn\nExpand on your plot from the previous step to make the transparency (alpha) of the points 0.5.\n\nggplot(bechdel, \n       aes(x = budget_2013, y = gross_2013,\n           color = binary, size = roi)) +\n  geom_point(alpha = 0.5) + \n  labs(\n    x = \"Budget (in 2013 $)\", \n    y = \"Gross revenue (in 2013 $)\", \n    title = \"Gross revenue vs. budget, by Bechdel test result\"\n    )\n\nWarning: Removed 15 rows containing missing values (`geom_point()`).\n\n\n\n\n\n\n\n\n\n\n\nStep 6 - Your turn\nExpand on your plot from the previous step by using facet_wrap to display the association between budget and gross for different values of clean_test.\n\nggplot(bechdel, \n       aes(x = budget_2013, y = gross_2013,\n           color = binary, size = roi)) +\n  geom_point(alpha = 0.5) + \n  facet_wrap(~clean_test) +\n  labs(\n    x = \"Budget (in 2013 $)\", \n    y = \"Gross revenue (in 2013 $)\", \n    title = \"Gross revenue vs. budget, by Bechdel test result\"\n    )\n\nWarning: Removed 15 rows containing missing values (`geom_point()`).\n\n\n\n\n\n\n\n\n\n\n\nStep 7 - Demo\nImprove your plot from the previous step by making the x and y scales more legible.\n\n\n\n\n\n\nTip\n\n\n\nMake use of the scales package, specifically the scale_x_continuous() and scale_y_continuous() functions.\n\n\n\nggplot(bechdel, \n       aes(x = budget_2013, y = gross_2013,\n           color = binary, size = roi)) +\n  geom_point(alpha = 0.5) + \n  facet_wrap(~clean_test) +\n  scale_x_continuous(labels = label_dollar(scale = 1/1000000)) +\n  scale_y_continuous(labels = label_dollar(scale = 1/1000000)) +\n  labs(\n    x = \"Budget (in 2013 $)\", \n    y = \"Gross revenue (in 2013 $)\", \n    title = \"Gross revenue vs. budget, by Bechdel test result\"\n    )\n\nWarning: Removed 15 rows containing missing values (`geom_point()`).\n\n\n\n\n\n\n\n\n\n\n\nStep 8 - Your turn\nExpand on your plot from the previous step by using facet_grid to display the association between budget and gross for different combinations of clean_test and binary. Comment on whether this was a useful update.\n\nggplot(bechdel, \n       aes(x = budget_2013, y = gross_2013,\n           color = binary, size = roi)) +\n  geom_point(alpha = 0.5) + \n  facet_grid(binary~clean_test) +\n  scale_x_continuous(labels = label_dollar(scale = 1/1000000)) +\n  scale_y_continuous(labels = label_dollar(scale = 1/1000000)) +\n  labs(\n    x = \"Budget (in 2013 $)\", \n    y = \"Gross revenue (in 2013 $)\", \n    title = \"Gross revenue vs. budget, by Bechdel test result\"\n    )\n\nWarning: Removed 15 rows containing missing values (`geom_point()`).\n\n\n\n\n\n\n\n\n\nThis was not a useful update as one of the levels of clean_test maps directly to one of the levels of binary.\n\n\nStep 9 - Demo\nWhat other improvements could we make to this plot?\n\n# Answers may vary\n\n\n\nRender, commit, and push\n\nIf you made any changes since the last render, render again to get the final version of the AE.\nCheck the box next to each document in the Git tab (this is called “staging” the changes). Commit the changes you made using a simple and informative message.\nUse the green arrow to push your changes to your repo on GitHub.\nCheck your repo on GitHub and see the updated files. Once your updated files are in your repo on GitHub, you’re good to go!"
  },
  {
    "objectID": "ae/ae-02-bechdel-dataviz-A.html#return-on-investment",
    "href": "ae/ae-02-bechdel-dataviz-A.html#return-on-investment",
    "title": "AE 02: Bechdel + data visualization",
    "section": "Return-on-investment",
    "text": "Return-on-investment\nFinally, let’s take a look at return-on-investment (ROI).\n\nStep 1 - Your turn\nCreate side-by-side box plots of roi by clean_test where the boxes are colored by binary.\n\nggplot(bechdel, \n       aes(x = clean_test, y = roi, color = binary)) +\n  geom_boxplot() +\n  labs(\n    title = \"Return on investment vs. Bechdel test result\",\n    x = \"Detailed Bechdel result\",\n    y = \"Return-on-investment (gross / budget)\",\n    color = \"Bechdel\\nresult\"\n    )\n\nWarning: Removed 15 rows containing non-finite values (`stat_boxplot()`).\n\n\n\n\n\n\n\n\n\nWhat are those movies with very high returns on investment?\n\nbechdel |&gt;\n  filter(roi &gt; 400) |&gt;\n  select(title, roi, budget_2013, gross_2013, year, clean_test)\n\n# A tibble: 3 × 6\n  title                     roi budget_2013 gross_2013  year clean_test\n  &lt;chr&gt;                   &lt;dbl&gt;       &lt;dbl&gt;      &lt;dbl&gt; &lt;dbl&gt; &lt;chr&gt;     \n1 Paranormal Activity      671.      505595  339424558  2007 dubious   \n2 The Blair Witch Project  648.      839077  543776715  1999 ok        \n3 El Mariachi              583.       11622    6778946  1992 nowomen   \n\n\n\n\nStep 2 - Demo\nExpand on your plot from the previous step to zoom in on movies with roi &lt; ___ to get a better view of how the medians across the categories compare.\n\nggplot(bechdel, \n       aes(x = clean_test, y = roi, color = binary)) +\n  geom_boxplot() +\n  labs(\n    title = \"Return on investment vs. Bechdel test result\",\n    x = \"Detailed Bechdel result\",\n    y = \"Return-on-investment (gross / budget)\",\n    color = \"Bechdel\\nresult\"\n    ) +\n  coord_cartesian(ylim = c(0, 18))\n\nWarning: Removed 15 rows containing non-finite values (`stat_boxplot()`).\n\n\n\n\n\n\n\n\n\nWhat does this plot say about return-on-investment on movies that pass the Bechdel test?"
  },
  {
    "objectID": "ae/ae-08-data-import.html",
    "href": "ae/ae-08-data-import.html",
    "title": "AE 08: Data import",
    "section": "",
    "text": "We will use the following two packages in this application exercise.\n\ntidyverse: For data import, wrangling, and visualization.\nreadxl: For importing data from Excel.\n\n\nlibrary(tidyverse)\nlibrary(readxl)"
  },
  {
    "objectID": "ae/ae-08-data-import.html#packages",
    "href": "ae/ae-08-data-import.html#packages",
    "title": "AE 08: Data import",
    "section": "",
    "text": "We will use the following two packages in this application exercise.\n\ntidyverse: For data import, wrangling, and visualization.\nreadxl: For importing data from Excel.\n\n\nlibrary(tidyverse)\nlibrary(readxl)"
  },
  {
    "objectID": "course-overview.html",
    "href": "course-overview.html",
    "title": "About the Course",
    "section": "",
    "text": "Intermediate statistics with R. This course covers statistical methods not typically covered in introductory statistics courses. We shall use your statistical background to learn about modern statistical techniques to design, implement, analyze, and communicate research. We begin by reintroducing the key ideas (e.g., data and data distributions, confidence intervals, and hypothesis testing) using modern approaches where applicable and then extend these techniques to more sophisticated statistical analysis tools like multiple regression and Analysis of Variance (ANOVA). Real world applications will be emphasized.",
    "crumbs": [
      "Course information",
      "Overview"
    ]
  },
  {
    "objectID": "course-overview.html#course-objectives",
    "href": "course-overview.html#course-objectives",
    "title": "About the Course",
    "section": "Course Objectives",
    "text": "Course Objectives\nUpon successful completion of this course, students will be able to:\n\nImplement the model-simulate-evaluate process to address data-driven questions on real-world topics.\nChoose and use various statistical analysis techniques (exploratory and inferential) in a variety of “real life” contexts including study design.\nCritically analyze the use of statistics in research, in the media, and in various day-to-day life situations.\nCommunicate statistical ideas effectively and in context without relying on statistical jargon.\nUse technology (e.g., R) to perform statistical explorations and manipulations.\nEffectively collaborate with peers on projects and presentations.",
    "crumbs": [
      "Course information",
      "Overview"
    ]
  },
  {
    "objectID": "course-overview.html#meeting-times-location",
    "href": "course-overview.html#meeting-times-location",
    "title": "About the Course",
    "section": "Meeting Times & Location",
    "text": "Meeting Times & Location\n\n\n\nDay\nRoom/Hall\nTime\n\n\n\n\nMonday\nWilliams Hall 202\n11:45 am - 1:00 pm\n\n\nWednesday\nWilliams Hall 202\n8:30 - 9:45 am\n\n\nFriday\nWilliams Hall 202\n10:05 - 11:20 am",
    "crumbs": [
      "Course information",
      "Overview"
    ]
  },
  {
    "objectID": "course-overview.html#prerequisites",
    "href": "course-overview.html#prerequisites",
    "title": "About the Course",
    "section": "Prerequisites",
    "text": "Prerequisites\nPrerequisites include math placement in group 1, or 3, or completion of MATH 14400, MATH 14500, MATH 21600 or PSYC 207 with a grade of C- (minus) or better. Attributes: QL, LA, NS (non-ICC).",
    "crumbs": [
      "Course information",
      "Overview"
    ]
  },
  {
    "objectID": "course-overview.html#workload-expectations",
    "href": "course-overview.html#workload-expectations",
    "title": "About the Course",
    "section": "Workload Expectations",
    "text": "Workload Expectations\nThis is a 3 credits course. Credit is earned at Ithaca College in credit hours as measured by the Carnegie unit. The Carnegie unit is defined as one hour of classroom instruction and two hours of assignments outside the classroom, for a period of 15 weeks for each unit (credit).",
    "crumbs": [
      "Course information",
      "Overview"
    ]
  },
  {
    "objectID": "course-team.html",
    "href": "course-team.html",
    "title": "Teaching team",
    "section": "",
    "text": "Dr. Mine Çetinkaya-Rundel (she/her) is Professor of the Practice and Director of Undergraduate Studies at the Department of Statistical Science at Duke University. Mine’s work focuses on innovation in statistics and data science pedagogy, with an emphasis on computing, reproducible research, student-centered learning, and open-source education as well as pedagogical approaches for enhancing retention of women and under-represented minorities in STEM.\n\n\n\n\n\n\n\nOffice hours\nLocation\n\n\n\n\nTuesdays and Thursdays 1-1:30 pm (immediately after class)\nBio Sci 111\n\n\nThursdays 2-3 pm\nOld Chem 213"
  },
  {
    "objectID": "course-team.html#instructor",
    "href": "course-team.html#instructor",
    "title": "Teaching team",
    "section": "",
    "text": "Dr. Mine Çetinkaya-Rundel (she/her) is Professor of the Practice and Director of Undergraduate Studies at the Department of Statistical Science at Duke University. Mine’s work focuses on innovation in statistics and data science pedagogy, with an emphasis on computing, reproducible research, student-centered learning, and open-source education as well as pedagogical approaches for enhancing retention of women and under-represented minorities in STEM.\n\n\n\n\n\n\n\nOffice hours\nLocation\n\n\n\n\nTuesdays and Thursdays 1-1:30 pm (immediately after class)\nBio Sci 111\n\n\nThursdays 2-3 pm\nOld Chem 213"
  },
  {
    "objectID": "course-team.html#teaching-assistants",
    "href": "course-team.html#teaching-assistants",
    "title": "Teaching team",
    "section": "Teaching assistants",
    "text": "Teaching assistants\n\n\n\n\n\n\n\n\n\n\nFirst name\nLast name\nRole\n\n\n\nChris\nOswald\nLab leader: M 8:30AM - 9:45AM (Sec 1)\n\n\n\nJasmine\nWang\nLab helper: M 8:30AM - 9:45AM (Sec 1)\n\n\n\nBetsy\nBersson\nHead TA\nLab leader: M 10:05AM - 11:20AM (Sec 2)\n\n\n\nMert\nBildirici\nLab helper: M 10:05AM - 11:20AM (Sec 2)\n\n\n\nWill\nTirone\nLab leader: M 11:45AM - 1:00PM (Sec 3)\n\n\n\nKrish\nBansal\nLab helper: M 11:45AM - 1:00PM (Sec 3)\n\n\n\nCaitrin\nMurphy\nLab leader: M 1:25PM - 2:40PM (Sec 4)\n\n\n\nAvery\nHodges\nLab helper: M 1:25PM - 2:40PM (Sec 4)\n\n\n\nJon\nCampbell\nLab leader: M 1:25PM - 2:40PM (Sec 11)\n\n\n\nFoxx\nHart\nLab helper: M 1:25PM - 2:40PM (Sec 11)\nLecture helper (Tue)\n\n\n\nNetra\nMittal\nLab leader: M 3:05PM - 4:20PM (Sec 5)\n\n\n\nAlexa\nFahrer\nLab helper: M 3:05PM - 4:20PM (Sec 5)\n\n\n\nDevin\nJohnson\nLab leader: M 4:40PM - 5:55PM (Sec 6)\n\n\n\nKonnie\nHuang\nLab helper: M 4:40PM - 5:55PM (Sec 6)\n\n\n\nLi\nFan\nLab leader: M 4:40PM - 5:55PM (Sec 7)\n\n\n\nKelly\nHuang\nLab helper: M 4:40PM - 5:55PM (Sec 7)\n\n\n\nLeah\nJohnson\n\n\n\n\nLisa\nZhang\nLecture helper (Tue + Thur)\n\n\n\nMiles\nKing\nLecture helper (Tue + Thur)\n\n\n\nNoah\nObuya\nLecture helper (Thur)\n\n\n\nFor office hours, please see STA 199 - Office Hours sheet."
  },
  {
    "objectID": "course-team.html#course-coordinator",
    "href": "course-team.html#course-coordinator",
    "title": "Teaching team",
    "section": "Course coordinator",
    "text": "Course coordinator\n\nDr. Mary Knox (she/her) is the course coordinator for this course. You can reach out to her (at mary.knox@duke.edu) with any questions regarding missed work, extensions, etc. as well as registration questions."
  },
  {
    "objectID": "exam-review/exam-2-review-A.html",
    "href": "exam-review/exam-2-review-A.html",
    "title": "Exam 2 Review",
    "section": "",
    "text": "Take a random sample of size 25, with replacement, from the original sample. Calculate the proportion of students in this simulated sample who work 5 or more hours. Repeat this process 1000 times to build the bootstrap distribution. Take the middle 95% of this distribution to construct a 95% confidence interval for the true proportion of statistics majors who work 5 or more hours.\nThe exact 95% CI is (40%, 80%). Answers reasonably close to the upper and lower bounds would be accepted.\n(e) None of the above. The correct interpretation is “We are 95% confident that 40% to 80% of statistics majors work at least 5 hours per week.”\n(c) For every additional $1,000 of annual salary, the model predicts the raise to be higher, on average, by 0.0155%.\n$R^2$ of raise_2_fit is higher than $R^2$ of raise_1_fit since raise_2_fit has one more predictor and $R^2$ always\nThe reference level of performance_rating is High, since it’s the first level alphabetically. Therefore, the coefficient -2.40% is the predicted difference in raise comparing High to Successful. In this context a negative coefficient makes sense since we would expect those with High performance rating to get higher raises than those with Successful performance.\n(a) “Poor”, “Successful”, “High”, “Top”.\nOption 3. It’s a linear model with no interaction effect, so parallel lines. And since the slope for salary_typeSalaried is positive, its intercept is higher. The equations of the lines are as follows:\n\nHourly:\n\\[\n\\begin{align*}\n\\widehat{percent\\_incr} &= 1.24 + 0.0000137 \\times annual\\_salary + 0.913 salary\\_typeSalaried \\\\\n&= 1.24 + 0.0000137 \\times annual\\_salary + 0.913 \\times 0 \\\\\n&= 1.24 + 0.0000137 \\times annual\\_salary\n\\end{align*}\n\\]\nSalaried:\n\\[\n\\begin{align*}\n\\widehat{percent\\_incr} &= 1.24 + 0.0000137 \\times annual\\_salary + 0.913 salary\\_typeSalaried \\\\\n&= 1.24 + 0.0000137 \\times annual\\_salary + 0.913 \\times 1 \\\\\n&= 2.153 + 0.0000137 \\times annual\\_salary\n\\end{align*}\n\\]\n\nA parsimonious model is the simplest model with the best predictive performance.\n(c) The model predicts that the percentage increase employees with Successful performance get, on average, is higher by a factor of 1025 compared to the employees with Poor performance rating.\\/(a) and (d).\n(a) and (d).\n(c) We are 95% confident that the mean number of texts per month of all American teens is between 1450 and 1550."
  },
  {
    "objectID": "exam-review/exam-1-review.html",
    "href": "exam-review/exam-1-review.html",
    "title": "Exam 1 Review",
    "section": "",
    "text": "Come back later!",
    "crumbs": [
      "Exam review",
      "Exam 1"
    ]
  },
  {
    "objectID": "slides/22-exam-2-review.html#announcements",
    "href": "slides/22-exam-2-review.html#announcements",
    "title": "Exam 2 review",
    "section": "Announcements",
    "text": "Announcements\nSame as Exam 1!\n\nExam format / flow\nAsking questions during exam / office hours"
  },
  {
    "objectID": "slides/22-exam-2-review.html#application-exercise-ae-16-equality-randomization",
    "href": "slides/22-exam-2-review.html#application-exercise-ae-16-equality-randomization",
    "title": "Exam 2 review",
    "section": "Application exercise: ae-16-equality-randomization",
    "text": "Application exercise: ae-16-equality-randomization\n\n\nGo back to your project called ae.\nIf there are any uncommitted files, commit them, and push.\nThen pull and work on ae-16-equality-randomization.qmd."
  },
  {
    "objectID": "slides/22-exam-2-review.html#recap-of-ae",
    "href": "slides/22-exam-2-review.html#recap-of-ae",
    "title": "Exam 2 review",
    "section": "Recap of AE",
    "text": "Recap of AE\n\nA hypothesis test is a statistical technique used to evaluate competing claims (null and alternative hypotheses) using data.\nWe simulate a null distribution using our original data.\nWe use our sample statistic and direction of the alternative hypothesis to calculate the p-value.\nWe use the p-value to determine conclusions about the alternative hypotheses."
  },
  {
    "objectID": "slides/22-exam-2-review.html#questions-1",
    "href": "slides/22-exam-2-review.html#questions-1",
    "title": "Exam 2 review",
    "section": "Questions",
    "text": "Questions\n\n\nDo we need to know functions and iteration for the exam? Since we didn’t work very much with them after the HW videos.\nWhen we run bootstrapping simulations for different types of statistics (proportions, means, medians, slopes, etc), are there any differences in the methodology? Or does it all rely on calculating sample statistics for many simulations and then taking the middle 90 or 95% as a confidence interval estimate for that statistic.\nHow do you determine whether a relationship is nonlinear without visualization?\nCould you go over how logistic regression works again? Especially how a log(p/1-p) transformation of binary data creates a linear model?\nWhen do you use logarithmic functions in linear regression, rather than a logistic regression?\n\n\n\n\n\n\n🔗 sta199-s24.github.io  ·  ❓ Ask on Ed"
  },
  {
    "objectID": "slides/01-meet-the-toolkit.html#announcements",
    "href": "slides/01-meet-the-toolkit.html#announcements",
    "title": "Meet the toolkit",
    "section": "Announcements",
    "text": "Announcements\n\nIf you have not yet completed the Getting to know you survey, please do so asap!\nIf you have not yet accepted the invite to join the course GitHub Organization (I’m looking at 41 of you as of this morning!), please do so asap!\nOffice hours + locations linked at https://sta199-s24.github.io/course-team.html, come say hi to me or any of the TAs!"
  },
  {
    "objectID": "slides/01-meet-the-toolkit.html#course-homepage",
    "href": "slides/01-meet-the-toolkit.html#course-homepage",
    "title": "Meet the toolkit",
    "section": "Course homepage",
    "text": "Course homepage\nLet’s take a tour!"
  },
  {
    "objectID": "slides/01-meet-the-toolkit.html#collaboration-policy",
    "href": "slides/01-meet-the-toolkit.html#collaboration-policy",
    "title": "Meet the toolkit",
    "section": "Collaboration policy",
    "text": "Collaboration policy\n\nOnly work that is clearly assigned as team work should be completed collaboratively.\nHomeworks must be completed individually. You may not directly share answers / code with others, however you are welcome to discuss the problems in general and ask for advice.\nExams must be completed individually. You may not discuss any aspect of the exam with peers. If you have questions, post as private questions on the course forum, only the teaching team will see and answer."
  },
  {
    "objectID": "slides/01-meet-the-toolkit.html#sharing-reusing-code-policy",
    "href": "slides/01-meet-the-toolkit.html#sharing-reusing-code-policy",
    "title": "Meet the toolkit",
    "section": "Sharing / reusing code policy",
    "text": "Sharing / reusing code policy\n\nWe are aware that a huge volume of code is available on the web, and many tasks may have solutions posted\nUnless explicitly stated otherwise, this course’s policy is that you may make use of any online resources (e.g. RStudio Community, StackOverflow, etc.) but you must explicitly cite where you obtained any code you directly use or use as inspiration in your solution(s).\nAny recycled code that is discovered and is not explicitly cited will be treated as plagiarism, regardless of source"
  },
  {
    "objectID": "slides/01-meet-the-toolkit.html#use-of-generative-ai",
    "href": "slides/01-meet-the-toolkit.html#use-of-generative-ai",
    "title": "Meet the toolkit",
    "section": "Use of generative AI",
    "text": "Use of generative AI\n\nTreat generative AI, such as ChatGPT, the same as other online resources.\nGuiding principles:\n\n(1) Cognitive dimension: Working with AI should not reduce your ability to think clearly. We will practice using AI to facilitate—rather than hinder—learning.\n(2) Ethical dimension: Students using AI should be transparent about their use and make sure it aligns with academic integrity.\n\n✅ AI tools for code: You may make use of the technology for coding examples on assignments; if you do so, you must explicitly cite where you obtained the code. See the syllabus for guidelines for citing AI-generated content.\n❌ AI tools for narrative: Unless instructed otherwise, you may not use generative AI to write narrative on assignments. In general, you may use generative AI as a resource as you complete assignments but not to answer the exercises for you."
  },
  {
    "objectID": "slides/01-meet-the-toolkit.html#academic-integrity",
    "href": "slides/01-meet-the-toolkit.html#academic-integrity",
    "title": "Meet the toolkit",
    "section": "Academic integrity",
    "text": "Academic integrity\n\nTo uphold the Duke Community Standard:\n\nI will not lie, cheat, or steal in my academic endeavors;\nI will conduct myself honorably in all my endeavors; and\nI will act if the Standard is compromised."
  },
  {
    "objectID": "slides/01-meet-the-toolkit.html#most-importantly",
    "href": "slides/01-meet-the-toolkit.html#most-importantly",
    "title": "Meet the toolkit",
    "section": "Most importantly!",
    "text": "Most importantly!\nAsk if you’re not sure if something violates a policy!"
  },
  {
    "objectID": "slides/01-meet-the-toolkit.html#five-tips-for-success",
    "href": "slides/01-meet-the-toolkit.html#five-tips-for-success",
    "title": "Meet the toolkit",
    "section": "Five tips for success",
    "text": "Five tips for success\n\nComplete all the preparation work before class.\nAsk questions.\nDo the readings.\nDo the lab.\nDon’t procrastinate – at least on a weekly basis!"
  },
  {
    "objectID": "slides/01-meet-the-toolkit.html#course-toolkit-1",
    "href": "slides/01-meet-the-toolkit.html#course-toolkit-1",
    "title": "Meet the toolkit",
    "section": "Course toolkit",
    "text": "Course toolkit\n\n\nCourse operation\n\nMaterials: sta199-s24.github.io\nSubmission: Gradescope\nDiscussion: Ed Discussion\nGradebook: Canvas\n\n\nDoing data science\n\nComputing:\n\nR\nRStudio\ntidyverse\nQuarto\n\nVersion control and collaboration:\n\nGit\nGitHub"
  },
  {
    "objectID": "slides/01-meet-the-toolkit.html#learning-goals",
    "href": "slides/01-meet-the-toolkit.html#learning-goals",
    "title": "Meet the toolkit",
    "section": "Learning goals",
    "text": "Learning goals\nBy the end of the course, you will be able to…\n\n\ngain insight from data\ngain insight from data, reproducibly\ngain insight from data, reproducibly, using modern programming tools and techniques\ngain insight from data, reproducibly and collaboratively, using modern programming tools and techniques\ngain insight from data, reproducibly (with literate programming and version control) and collaboratively, using modern programming tools and techniques"
  },
  {
    "objectID": "slides/01-meet-the-toolkit.html#reproducibility-checklist",
    "href": "slides/01-meet-the-toolkit.html#reproducibility-checklist",
    "title": "Meet the toolkit",
    "section": "Reproducibility checklist",
    "text": "Reproducibility checklist\n\nWhat does it mean for a data analysis to be “reproducible”?\n\n\nShort-term goals:\n\nAre the tables and figures reproducible from the code and data?\nDoes the code actually do what you think it does?\nIn addition to what was done, is it clear why it was done?\n\n\n\nLong-term goals:\n\nCan the code be used for other data?\nCan you extend the code to do other things?"
  },
  {
    "objectID": "slides/01-meet-the-toolkit.html#toolkit-for-reproducibility",
    "href": "slides/01-meet-the-toolkit.html#toolkit-for-reproducibility",
    "title": "Meet the toolkit",
    "section": "Toolkit for reproducibility",
    "text": "Toolkit for reproducibility\n\nScriptability \\(\\rightarrow\\) R\nLiterate programming (code, narrative, output in one place) \\(\\rightarrow\\) Quarto\nVersion control \\(\\rightarrow\\) Git / GitHub"
  },
  {
    "objectID": "slides/01-meet-the-toolkit.html#r-and-rstudio-1",
    "href": "slides/01-meet-the-toolkit.html#r-and-rstudio-1",
    "title": "Meet the toolkit",
    "section": "R and RStudio",
    "text": "R and RStudio\n\n\n\n\n\n\n\n\nR is an open-source statistical programming language\nR is also an environment for statistical computing and graphics\nIt’s easily extensible with packages\n\n\n\n\nRStudio is a convenient interface for R called an IDE (integrated development environment), e.g. “I write R code in the RStudio IDE”\nRStudio is not a requirement for programming with R, but it’s very commonly used by R programmers and data scientists"
  },
  {
    "objectID": "slides/01-meet-the-toolkit.html#r-vs.-rstudio",
    "href": "slides/01-meet-the-toolkit.html#r-vs.-rstudio",
    "title": "Meet the toolkit",
    "section": "R vs. RStudio",
    "text": "R vs. RStudio\n\n\n\n\n\n\n\nSource: Modern Dive."
  },
  {
    "objectID": "slides/01-meet-the-toolkit.html#r-packages",
    "href": "slides/01-meet-the-toolkit.html#r-packages",
    "title": "Meet the toolkit",
    "section": "R packages",
    "text": "R packages\n\n\nPackages: Fundamental units of reproducible R code, including reusable R functions, the documentation that describes how to use them, and sample data1\nAs of 15 January 2023, there are 20,252 R packages available on CRAN (the Comprehensive R Archive Network)2\nWe’re going to work with a small (but important) subset of these!\n\n\n\n\n1 Wickham and Bryan, R Packages.\n2 CRAN contributed packages."
  },
  {
    "objectID": "slides/01-meet-the-toolkit.html#tour-r-rstudio",
    "href": "slides/01-meet-the-toolkit.html#tour-r-rstudio",
    "title": "Meet the toolkit",
    "section": "Tour: R + RStudio",
    "text": "Tour: R + RStudio\n\n\n\nOption 1:\nSit back and enjoy the show!\n\n\n\nOption 2:\nClone the corresponding application exercise repo and follow along.\n ae-01-meet-the-penguins\nGo to the course GitHub organization and clone ae-01-meet-the-penguins to your container."
  },
  {
    "objectID": "slides/01-meet-the-toolkit.html#tour-recap-r-rstudio",
    "href": "slides/01-meet-the-toolkit.html#tour-recap-r-rstudio",
    "title": "Meet the toolkit",
    "section": "Tour recap: R + RStudio",
    "text": "Tour recap: R + RStudio"
  },
  {
    "objectID": "slides/01-meet-the-toolkit.html#a-short-list-for-now-of-r-essentials",
    "href": "slides/01-meet-the-toolkit.html#a-short-list-for-now-of-r-essentials",
    "title": "Meet the toolkit",
    "section": "A short list (for now) of R essentials",
    "text": "A short list (for now) of R essentials\n\nFunctions are (most often) verbs, followed by what they will be applied to in parentheses:\n\n\ndo_this(to_this)\ndo_that(to_this, to_that, with_those)\n\n\n\nPackages are installed with the install.packages() function and loaded with the library function, once per session:\n\n\ninstall.packages(\"package_name\")\nlibrary(package_name)"
  },
  {
    "objectID": "slides/01-meet-the-toolkit.html#r-essentials-continued",
    "href": "slides/01-meet-the-toolkit.html#r-essentials-continued",
    "title": "Meet the toolkit",
    "section": "R essentials (continued)",
    "text": "R essentials (continued)\n\nColumns (variables) in data frames are accessed with $:\n\n\ndataframe$var_name\n\n\n\nObject documentation can be accessed with ?\n\n\n?mean"
  },
  {
    "objectID": "slides/01-meet-the-toolkit.html#tidyverse",
    "href": "slides/01-meet-the-toolkit.html#tidyverse",
    "title": "Meet the toolkit",
    "section": "tidyverse",
    "text": "tidyverse\n\n\n\n\ntidyverse.org\n\nThe tidyverse is an opinionated collection of R packages designed for data science\nAll packages share an underlying philosophy and a common grammar"
  },
  {
    "objectID": "slides/01-meet-the-toolkit.html#quarto-1",
    "href": "slides/01-meet-the-toolkit.html#quarto-1",
    "title": "Meet the toolkit",
    "section": "Quarto",
    "text": "Quarto\n\n\nFully reproducible reports – each time you render the analysis is ran from the beginning\nCode goes in chunks narrative goes outside of chunks\nA visual editor for a familiar / Google docs-like editing experience"
  },
  {
    "objectID": "slides/01-meet-the-toolkit.html#tour-quarto",
    "href": "slides/01-meet-the-toolkit.html#tour-quarto",
    "title": "Meet the toolkit",
    "section": "Tour: Quarto",
    "text": "Tour: Quarto\n\n\n\nOption 1:\nSit back and enjoy the show!\n\n\n\nOption 2:\nClone the corresponding application exercise repo (if you haven’t yet done so) and follow along.\n ae-01-meet-the-penguins\nGo to the course GitHub organization and clone ae-01-meet-the-penguins to your container."
  },
  {
    "objectID": "slides/01-meet-the-toolkit.html#tour-recap-quarto",
    "href": "slides/01-meet-the-toolkit.html#tour-recap-quarto",
    "title": "Meet the toolkit",
    "section": "Tour recap: Quarto",
    "text": "Tour recap: Quarto"
  },
  {
    "objectID": "slides/01-meet-the-toolkit.html#environments",
    "href": "slides/01-meet-the-toolkit.html#environments",
    "title": "Meet the toolkit",
    "section": "Environments",
    "text": "Environments\n\n\n\n\n\n\nImportant\n\n\nThe environment of your Quarto document is separate from the Console!\n\n\n\nRemember this, and expect it to bite you a few times as you’re learning to work with Quarto!"
  },
  {
    "objectID": "slides/01-meet-the-toolkit.html#environments-1",
    "href": "slides/01-meet-the-toolkit.html#environments-1",
    "title": "Meet the toolkit",
    "section": "Environments",
    "text": "Environments\n\n\nFirst, run the following in the console:\n\nx &lt;- 2\nx * 3\n\n\n\nAll looks good, eh?\n\n\nThen, add the following in an R chunk in your Quarto document\n\nx * 3\n\n\n\nWhat happens? Why the error?"
  },
  {
    "objectID": "slides/01-meet-the-toolkit.html#how-will-we-use-quarto",
    "href": "slides/01-meet-the-toolkit.html#how-will-we-use-quarto",
    "title": "Meet the toolkit",
    "section": "How will we use Quarto?",
    "text": "How will we use Quarto?\n\nEvery application exercise, lab, project, etc. is an Quarto document\nYou’ll always have a template Quarto document to start with\nThe amount of scaffolding in the template will decrease over the semester"
  },
  {
    "objectID": "slides/01-meet-the-toolkit.html#whats-with-all-the-hexes",
    "href": "slides/01-meet-the-toolkit.html#whats-with-all-the-hexes",
    "title": "Meet the toolkit",
    "section": "What’s with all the hexes?",
    "text": "What’s with all the hexes?\n\n\n\n\n\n\n\n\n\n🔗 sta199-s24.github.io"
  },
  {
    "objectID": "slides/17-linear-model-multiple-predictors-II.html#while-you-wait-for-class-to-begin",
    "href": "slides/17-linear-model-multiple-predictors-II.html#while-you-wait-for-class-to-begin",
    "title": "Linear regression with a multiple predictors II",
    "section": "While you wait for class to begin…",
    "text": "While you wait for class to begin…\n\nAny questions from prepare materials?"
  },
  {
    "objectID": "slides/17-linear-model-multiple-predictors-II.html#project-proposals",
    "href": "slides/17-linear-model-multiple-predictors-II.html#project-proposals",
    "title": "Linear regression with a multiple predictors II",
    "section": "Project proposals",
    "text": "Project proposals\n\nAny questions?"
  },
  {
    "objectID": "slides/17-linear-model-multiple-predictors-II.html#application-exercise-ae-12-modeling-penguins-multi",
    "href": "slides/17-linear-model-multiple-predictors-II.html#application-exercise-ae-12-modeling-penguins-multi",
    "title": "Linear regression with a multiple predictors II",
    "section": "Application exercise: ae-12-modeling-penguins-multi",
    "text": "Application exercise: ae-12-modeling-penguins-multi\n\nContinue work on ae-12-modeling-penguins-multi.qmd.\n\nGoals:\n\nRecap modeling with a single predictor\nFit and interpret models with multiple predictors\nDistinguish between additive and interaction models"
  },
  {
    "objectID": "slides/17-linear-model-multiple-predictors-II.html#goals",
    "href": "slides/17-linear-model-multiple-predictors-II.html#goals",
    "title": "Linear regression with a multiple predictors II",
    "section": "Goals",
    "text": "Goals\n\nReview prediction and interpretation of model results\nReview main and interaction effects models\nDiscuss model selection further"
  },
  {
    "objectID": "slides/17-linear-model-multiple-predictors-II.html#application-exercise-ae-13-modeling-loans",
    "href": "slides/17-linear-model-multiple-predictors-II.html#application-exercise-ae-13-modeling-loans",
    "title": "Linear regression with a multiple predictors II",
    "section": "Application exercise: ae-13-modeling-loans",
    "text": "Application exercise: ae-13-modeling-loans\n\n\nGo to your project called ae.\nIf there are any uncommitted files, commit them, and push.\nWork on ae-13-modeling-loans.qmd.\n\n\n\n\n\n\n🔗 sta199-s24.github.io  ·  ❓ Ask on Ed"
  },
  {
    "objectID": "slides/04-dataviz-overview.html#while-you-wait",
    "href": "slides/04-dataviz-overview.html#while-you-wait",
    "title": "Data visualization overview",
    "section": "While you wait…",
    "text": "While you wait…\nQuestions from the prepare materials?"
  },
  {
    "objectID": "slides/04-dataviz-overview.html#announcements",
    "href": "slides/04-dataviz-overview.html#announcements",
    "title": "Data visualization overview",
    "section": "Announcements",
    "text": "Announcements\n\nLab 1 due Monday morning at 8 am.\n\nMy office hours today after class + 2-3 pm in Old Chem 213\nLots of TA office hours, including over the weekend\nSubmitting late and want to use your one-time waiver? Email our course coordinator Dr. Mary Knox.\n\nAEs this week should be submitted by midnight on Sunday. To “submit”, commit and push at least once to your ae repo for each application exercise this week.\nPilot: Ed Discussion threads for lecture, linked at the bottom of each slide."
  },
  {
    "objectID": "slides/04-dataviz-overview.html#questions-from-last-time",
    "href": "slides/04-dataviz-overview.html#questions-from-last-time",
    "title": "Data visualization overview",
    "section": "Questions from last time",
    "text": "Questions from last time\nMany of the questions in Lab 1 are subjective. How does that work?\n\nidentify at least one outlier"
  },
  {
    "objectID": "slides/04-dataviz-overview.html#questions-from-last-time-1",
    "href": "slides/04-dataviz-overview.html#questions-from-last-time-1",
    "title": "Data visualization overview",
    "section": "Questions from last time",
    "text": "Questions from last time\nMany of the questions in Lab 1 are subjective. How does that work?\n\nidentify at least one outlier ✅"
  },
  {
    "objectID": "slides/04-dataviz-overview.html#questions-from-last-time-2",
    "href": "slides/04-dataviz-overview.html#questions-from-last-time-2",
    "title": "Data visualization overview",
    "section": "Questions from last time",
    "text": "Questions from last time\nMany of the questions in Lab 1 are subjective. How does that work?\n\nidentify at least one outlier ❌"
  },
  {
    "objectID": "slides/04-dataviz-overview.html#questions-from-last-time-3",
    "href": "slides/04-dataviz-overview.html#questions-from-last-time-3",
    "title": "Data visualization overview",
    "section": "Questions from last time",
    "text": "Questions from last time\nWhat are some situations where waffle plots are better than pie charts?\nLet’s take a look at an example…"
  },
  {
    "objectID": "slides/04-dataviz-overview.html#or",
    "href": "slides/04-dataviz-overview.html#or",
    "title": "Data visualization overview",
    "section": "🥧 or 🧇?",
    "text": "🥧 or 🧇?\n\nQuestionVote\n\n\nWhich of the following is a better representation for the number of counties in each midwestern state?"
  },
  {
    "objectID": "slides/04-dataviz-overview.html#or-or",
    "href": "slides/04-dataviz-overview.html#or-or",
    "title": "Data visualization overview",
    "section": "🥧 or 🧇 or ?",
    "text": "🥧 or 🧇 or ?\n\nQuestionVote\n\n\nWhich of the following is a better representation for the number of counties in each midwestern state?\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nmidwest |&gt; \n  count(state, sort = TRUE)\n\n# A tibble: 5 × 2\n  state     n\n  &lt;chr&gt; &lt;int&gt;\n1 IL      102\n2 IN       92\n3 OH       88\n4 MI       83\n5 WI       72"
  },
  {
    "objectID": "slides/04-dataviz-overview.html#packages",
    "href": "slides/04-dataviz-overview.html#packages",
    "title": "Data visualization overview",
    "section": "Packages",
    "text": "Packages\n\nlibrary(palmerpenguins)\nlibrary(tidyverse)\nlibrary(ggthemes)"
  },
  {
    "objectID": "slides/04-dataviz-overview.html#bivariate-analysis",
    "href": "slides/04-dataviz-overview.html#bivariate-analysis",
    "title": "Data visualization overview",
    "section": "Bivariate analysis",
    "text": "Bivariate analysis\n\nPlotCode\n\n\n\n\n\n\nWarning: Removed 2 rows containing non-finite values (`stat_boxplot()`).\n\n\n\n\n\n\n\n\n\n\n\n\nWarning: Removed 2 rows containing non-finite values (`stat_density()`).\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n# Side-by-side box plots\nggplot(penguins, aes(x = body_mass_g, y = species, fill = species)) +\n  geom_boxplot(alpha = 0.5, show.legend = FALSE) +\n  scale_fill_colorblind() +\n  labs(\n    x = \"Body mass (grams)\", y = \"Species\",\n    title = \"Side-by-side box plots\"\n  )\n\nWarning: Removed 2 rows containing non-finite values (`stat_boxplot()`).\n\n\n\n# Density plots\nggplot(penguins, aes(x = body_mass_g, fill = species)) +\n  geom_density(alpha = 0.5) +\n  theme(legend.position = \"bottom\") +\n  scale_fill_colorblind() +\n  labs(\n    x = \"Body mass (grams)\", y = \"Density\",\n    fill = \"Species\", title = \"Density plots\"\n  )\n\nWarning: Removed 2 rows containing non-finite values (`stat_density()`)."
  },
  {
    "objectID": "slides/04-dataviz-overview.html#violin-plots",
    "href": "slides/04-dataviz-overview.html#violin-plots",
    "title": "Data visualization overview",
    "section": "Violin plots",
    "text": "Violin plots\n\n\n\nggplot(\n  penguins,\n  aes(\n    x = species,\n    y = body_mass_g\n    )\n  ) +\n  geom_violin()\n\nWarning: Removed 2 rows containing non-finite values (`stat_ydensity()`).\n\n\n\n\n\nWarning: Removed 2 rows containing non-finite values (`stat_ydensity()`)."
  },
  {
    "objectID": "slides/04-dataviz-overview.html#multiple-geoms",
    "href": "slides/04-dataviz-overview.html#multiple-geoms",
    "title": "Data visualization overview",
    "section": "Multiple geoms",
    "text": "Multiple geoms\n\n\n\nggplot(\n  penguins,\n  aes(\n    x = species,\n    y = body_mass_g\n    )\n  ) +\n  geom_violin() +\n  geom_point()\n\nWarning: Removed 2 rows containing non-finite values (`stat_ydensity()`).\n\n\nWarning: Removed 2 rows containing missing values (`geom_point()`).\n\n\n\n\n\nWarning: Removed 2 rows containing non-finite values (`stat_ydensity()`).\n\n\nWarning: Removed 2 rows containing missing values (`geom_point()`)."
  },
  {
    "objectID": "slides/04-dataviz-overview.html#multiple-geoms-1",
    "href": "slides/04-dataviz-overview.html#multiple-geoms-1",
    "title": "Data visualization overview",
    "section": "Multiple geoms",
    "text": "Multiple geoms\n\n\n\nggplot(\n  penguins,\n  aes(\n    x = species,\n    y = body_mass_g\n    )\n  ) +\n  geom_violin() +\n  geom_jitter()\n\nWarning: Removed 2 rows containing non-finite values (`stat_ydensity()`).\n\n\nWarning: Removed 2 rows containing missing values (`geom_point()`).\n\n\n\n\n\nWarning: Removed 2 rows containing non-finite values (`stat_ydensity()`).\n\n\nWarning: Removed 2 rows containing missing values (`geom_point()`)."
  },
  {
    "objectID": "slides/04-dataviz-overview.html#multiple-geoms-aesthetics",
    "href": "slides/04-dataviz-overview.html#multiple-geoms-aesthetics",
    "title": "Data visualization overview",
    "section": "Multiple geoms + aesthetics",
    "text": "Multiple geoms + aesthetics\n\n\n\nggplot(\n  penguins,\n  aes(\n    x = species,\n    y = body_mass_g,\n    color = species\n    )\n  ) +\n  geom_violin() +\n  geom_jitter()\n\nWarning: Removed 2 rows containing non-finite values (`stat_ydensity()`).\n\n\nWarning: Removed 2 rows containing missing values (`geom_point()`).\n\n\n\n\n\nWarning: Removed 2 rows containing non-finite values (`stat_ydensity()`).\n\n\nWarning: Removed 2 rows containing missing values (`geom_point()`)."
  },
  {
    "objectID": "slides/04-dataviz-overview.html#multiple-geoms-aesthetics-1",
    "href": "slides/04-dataviz-overview.html#multiple-geoms-aesthetics-1",
    "title": "Data visualization overview",
    "section": "Multiple geoms + aesthetics",
    "text": "Multiple geoms + aesthetics\n\n\n\nggplot(\n  penguins,\n  aes(\n    x = species,\n    y = body_mass_g,\n    color = species\n    )\n  ) +\n  geom_violin() +\n  geom_jitter() +\n  theme(\n    legend.position = \"none\"\n  )\n\nWarning: Removed 2 rows containing non-finite values (`stat_ydensity()`).\n\n\nWarning: Removed 2 rows containing missing values (`geom_point()`).\n\n\n\n\n\nWarning: Removed 2 rows containing non-finite values (`stat_ydensity()`).\n\n\nWarning: Removed 2 rows containing missing values (`geom_point()`)."
  },
  {
    "objectID": "slides/04-dataviz-overview.html#multiple-geoms-aesthetics-2",
    "href": "slides/04-dataviz-overview.html#multiple-geoms-aesthetics-2",
    "title": "Data visualization overview",
    "section": "Multiple geoms + aesthetics",
    "text": "Multiple geoms + aesthetics\n\n\n\nggplot(\n  penguins,\n  aes(\n    x = species,\n    y = body_mass_g,\n    color = species\n    )\n  ) +\n  geom_violin() +\n  geom_jitter() +\n  theme(\n    legend.position = \"none\"\n  ) +\n  scale_color_colorblind()\n\nWarning: Removed 2 rows containing non-finite values (`stat_ydensity()`).\n\n\nWarning: Removed 2 rows containing missing values (`geom_point()`).\n\n\n\n\n\nWarning: Removed 2 rows containing non-finite values (`stat_ydensity()`).\n\n\nWarning: Removed 2 rows containing missing values (`geom_point()`)."
  },
  {
    "objectID": "slides/04-dataviz-overview.html#bechdel",
    "href": "slides/04-dataviz-overview.html#bechdel",
    "title": "Data visualization overview",
    "section": "Bechdel",
    "text": "Bechdel\nLoad the Bechdel test data with read_csv():\n\nbechdel &lt;- read_csv(\"https://sta199-s24.github.io/data/bechdel.csv\")\n\n\n\nView the column names() of the bechdel data:\n\nnames(bechdel)\n\n[1] \"title\"       \"year\"        \"gross_2013\"  \"budget_2013\" \"roi\"         \"binary\"     \n[7] \"clean_test\""
  },
  {
    "objectID": "slides/04-dataviz-overview.html#roi-by-test-result",
    "href": "slides/04-dataviz-overview.html#roi-by-test-result",
    "title": "Data visualization overview",
    "section": "ROI by test result",
    "text": "ROI by test result\n\nWhat about this plot makes it difficult to evaluate how ROI varies by Bechdel test result?\n\n\nggplot(bechdel, aes(x = roi, y = clean_test, color = binary)) +\n  geom_boxplot()\n\nWarning: Removed 15 rows containing non-finite values (`stat_boxplot()`)."
  },
  {
    "objectID": "slides/04-dataviz-overview.html#movies-with-high-roi",
    "href": "slides/04-dataviz-overview.html#movies-with-high-roi",
    "title": "Data visualization overview",
    "section": "Movies with high ROI",
    "text": "Movies with high ROI\n\nWhat are the movies with highest ROI?\n\n\nbechdel |&gt;\n  filter(roi &gt; 400) |&gt;\n  select(title, roi, budget_2013, gross_2013, year, clean_test)\n\n# A tibble: 3 × 6\n  title                     roi budget_2013 gross_2013  year clean_test\n  &lt;chr&gt;                   &lt;dbl&gt;       &lt;dbl&gt;      &lt;dbl&gt; &lt;dbl&gt; &lt;chr&gt;     \n1 Paranormal Activity      671.      505595  339424558  2007 dubious   \n2 The Blair Witch Project  648.      839077  543776715  1999 ok        \n3 El Mariachi              583.       11622    6778946  1992 nowomen"
  },
  {
    "objectID": "slides/04-dataviz-overview.html#roi-by-test-result-1",
    "href": "slides/04-dataviz-overview.html#roi-by-test-result-1",
    "title": "Data visualization overview",
    "section": "ROI by test result",
    "text": "ROI by test result\n\nZoom in: What about this plot makes it difficult to evaluate how ROI varies by Bechdel test result?\n\n\nggplot(bechdel, aes(x = roi, y = clean_test, color = binary)) +\n  geom_boxplot() +\n  coord_cartesian(xlim = c(0, 15))\n\nWarning: Removed 15 rows containing non-finite values (`stat_boxplot()`)."
  },
  {
    "objectID": "slides/04-dataviz-overview.html#sneak-preview",
    "href": "slides/04-dataviz-overview.html#sneak-preview",
    "title": "Data visualization overview",
    "section": "Sneak preview…",
    "text": "Sneak preview…\n \n\nto next week’s data wrangling pipelines…"
  },
  {
    "objectID": "slides/04-dataviz-overview.html#median-roi",
    "href": "slides/04-dataviz-overview.html#median-roi",
    "title": "Data visualization overview",
    "section": "Median ROI",
    "text": "Median ROI\n\nbechdel |&gt;\n  summarize(median_roi = median(roi, na.rm = TRUE))\n\n# A tibble: 1 × 1\n  median_roi\n       &lt;dbl&gt;\n1       3.91"
  },
  {
    "objectID": "slides/04-dataviz-overview.html#median-roi-by-test-result",
    "href": "slides/04-dataviz-overview.html#median-roi-by-test-result",
    "title": "Data visualization overview",
    "section": "Median ROI by test result",
    "text": "Median ROI by test result\n\nbechdel |&gt;\n  group_by(clean_test) |&gt;\n  summarize(median_roi = median(roi, na.rm = TRUE))\n\n# A tibble: 5 × 2\n  clean_test median_roi\n  &lt;chr&gt;           &lt;dbl&gt;\n1 dubious          3.80\n2 men              3.96\n3 notalk           3.69\n4 nowomen          3.27\n5 ok               4.21"
  },
  {
    "objectID": "slides/04-dataviz-overview.html#roi-by-test-result-zoom-in",
    "href": "slides/04-dataviz-overview.html#roi-by-test-result-zoom-in",
    "title": "Data visualization overview",
    "section": "ROI by test result – zoom in",
    "text": "ROI by test result – zoom in\n\nWhat does this plot say about return-on-investment on movies that pass the Bechdel test?\n\n\nggplot(bechdel, aes(x = roi, y = clean_test, color = binary)) +\n  geom_boxplot() +\n  coord_cartesian(xlim = c(0, 15)) +\n  geom_vline(xintercept = 4.21, linetype = \"dashed\")\n\nWarning: Removed 15 rows containing non-finite values (`stat_boxplot()`)."
  },
  {
    "objectID": "slides/04-dataviz-overview.html#ae-03-duke-forest",
    "href": "slides/04-dataviz-overview.html#ae-03-duke-forest",
    "title": "Data visualization overview",
    "section": "ae-03-duke-forest",
    "text": "ae-03-duke-forest\n\n\nIf you’ve been here for a while:\nand following along with the application exercises…\nGo to the project navigator in RStudio (top right corner of your RStudio window) and open the project called ae. If there are any uncommitted files, commit them, and then click Pull.\n\nIf you’ve new:\nor haven’t been following along with the application exercises…\nGo to the course GitHub org and find your ae repo. Clone the repo in your container, open the Quarto document called ae-03-duke-forest.\n\n\n\n\n\n\n🔗 sta199-s24.github.io  ·  ❓ Ask on Ed"
  },
  {
    "objectID": "slides/13-ethics.html#while-you-wait-for-class-to-begin",
    "href": "slides/13-ethics.html#while-you-wait-for-class-to-begin",
    "title": "Data science ethics",
    "section": "While you wait for class to begin…",
    "text": "While you wait for class to begin…\n\nAny questions from prepare materials?"
  },
  {
    "objectID": "slides/13-ethics.html#announcements",
    "href": "slides/13-ethics.html#announcements",
    "title": "Data science ethics",
    "section": "Announcements",
    "text": "Announcements\n\nFill out TEAMMATES survey to provide feedback to your teammates bu Sunday night (and to let us know how things are going)\nSubmit AE 09 (the R script and the Quarto document) by Sunday night\nSubmit Lab 4 by Monday morning"
  },
  {
    "objectID": "slides/13-ethics.html#questions-from-last-time",
    "href": "slides/13-ethics.html#questions-from-last-time",
    "title": "Data science ethics",
    "section": "Questions from last time",
    "text": "Questions from last time\n\nHow do you do that keyboard shortcut where you like drag down text selecting?\n\n\n\nHow do you know when to clean extra space after text if you cannot specifically see the spaces?\n\n\n\n\nWill there be a curve for the test?"
  },
  {
    "objectID": "slides/13-ethics.html#guidelines-and-best-practices-for-using-chat-gpt",
    "href": "slides/13-ethics.html#guidelines-and-best-practices-for-using-chat-gpt",
    "title": "Data science ethics",
    "section": "Guidelines and best practices for using Chat GPT",
    "text": "Guidelines and best practices for using Chat GPT\n\nDo not just copy-paste the prompt – for appropriate academic conduct, for your own learning, and for getting to better results faster\nEngineer the prompt until the response starts to look like code you’re learning in the course\nIf the response is not correct, ask for a correction\nIf the response doesn’t follow the guidelines, ask for a correction\nDo not just copy-paste code from Chat GPT responses, run it line-by-line and edit as needed\nWatch out for clear mistakes in the response: do not keep loading packages that are already loaded, use the base pipe |&gt;, use tidyverse-based code, etc."
  },
  {
    "objectID": "slides/13-ethics.html#today",
    "href": "slides/13-ethics.html#today",
    "title": "Data science ethics",
    "section": "Today",
    "text": "Today\nData science ethics:\n\nMisrepresentation\nData privacy\nAlgorithmic bias"
  },
  {
    "objectID": "slides/13-ethics.html#stand-your-ground",
    "href": "slides/13-ethics.html#stand-your-ground",
    "title": "Data science ethics",
    "section": "Stand your ground",
    "text": "Stand your ground\n\nIn 2005, the Florida legislature passed the controversial “Stand Your Ground” law that broadened the situations in which citizens can use lethal force to protect themselves against perceived threats. Advocates believed that the new law would ultimately reduce crime; opponents feared an increase in the use of lethal force."
  },
  {
    "objectID": "slides/13-ethics.html#stand-your-ground-1",
    "href": "slides/13-ethics.html#stand-your-ground-1",
    "title": "Data science ethics",
    "section": "Stand your ground",
    "text": "Stand your ground\n\nQuestionSubmit\n\n\n\nWhat does the visualization, published by Reuters on February 16, 2014, say about the number of firearm murders in Florida over the years?\n\n\n\n\n\n\n\n\n\n−+\n03:00"
  },
  {
    "objectID": "slides/13-ethics.html#your-data",
    "href": "slides/13-ethics.html#your-data",
    "title": "Data science ethics",
    "section": "“Your” data",
    "text": "“Your” data\n\nEvery time we use apps, websites, and devices, our data is being collected and used or sold to others.\nMore importantly, decisions are made by law enforcement, financial institutions, and governments based on data that directly affect the lives of people."
  },
  {
    "objectID": "slides/13-ethics.html#privacy-of-your-data",
    "href": "slides/13-ethics.html#privacy-of-your-data",
    "title": "Data science ethics",
    "section": "Privacy of your data",
    "text": "Privacy of your data\n\nWhat pieces of data have you left on the internet today? Think through everything you’ve logged into, clicked on, checked in, either actively or automatically, that might be tracking you. Do you know where that data is stored? Who it can be accessed by? Whether it’s shared with others?"
  },
  {
    "objectID": "slides/13-ethics.html#sharing-your-data",
    "href": "slides/13-ethics.html#sharing-your-data",
    "title": "Data science ethics",
    "section": "Sharing your data",
    "text": "Sharing your data\n\nWhat are you OK with sharing?\n\n\n\n\n\nName\nAge\nEmail\nPhone Number\nList of every video you watch\nList of every video you comment on\n\n\n\n\n\nHow you type: speed, accuracy\nHow long you spend on different content\nList of all your private messages (date, time, person sent to)\nInfo about your photos (how it was taken, where it was taken (GPS), when it was taken)"
  },
  {
    "objectID": "slides/13-ethics.html#what-does-google-thinkknow-about-you",
    "href": "slides/13-ethics.html#what-does-google-thinkknow-about-you",
    "title": "Data science ethics",
    "section": "What does Google think/know about you?",
    "text": "What does Google think/know about you?\n\nHave you ever thought about why you’re seeing an ad on Google? Google it! Try to figure out if you have ad personalization on and how your ads are personalized.\n\n\n\n\n−+\n03:00"
  },
  {
    "objectID": "slides/13-ethics.html#your-browing-history",
    "href": "slides/13-ethics.html#your-browing-history",
    "title": "Data science ethics",
    "section": "Your browing history",
    "text": "Your browing history\n\nWhich of the following are you OK with your browsing history to be used towards?\n\n\n\nFor serving you targeted ads\nTo score you as a candidate for a job\nTo predict your race/ethnicity for voting purposes"
  },
  {
    "objectID": "slides/13-ethics.html#who-else-gets-to-use-your-data",
    "href": "slides/13-ethics.html#who-else-gets-to-use-your-data",
    "title": "Data science ethics",
    "section": "Who else gets to use your data?",
    "text": "Who else gets to use your data?\n\nSuppose you create a profile on a social media site and share your personal information on your profile. Who else gets to use that data?\n\n\n\nCompanies the social media company has a connection to?\nCompanies the social media company sells your data to?\nResearchers?"
  },
  {
    "objectID": "slides/13-ethics.html#ok-cupid-data-breach",
    "href": "slides/13-ethics.html#ok-cupid-data-breach",
    "title": "Data science ethics",
    "section": "OK Cupid data breach",
    "text": "OK Cupid data breach\n\nIn 2016, researchers published data of 70,000 OkCupid users—including usernames, political leanings, drug usage, and intimate sexual details\nResearchers didn’t release the real names and pictures of OKCupid users, but their identities could easily be uncovered from the details provided, e.g. usernames\n\n\n\n\n\nSome may object to the ethics of gathering and releasing this data. However, all the data found in the dataset are or were already publicly available, so releasing this dataset merely presents it in a more useful form.\nResearchers Emil Kirkegaard and Julius Daugbjerg Bjerrekær"
  },
  {
    "objectID": "slides/13-ethics.html#gettysburg-address",
    "href": "slides/13-ethics.html#gettysburg-address",
    "title": "Data science ethics",
    "section": "Gettysburg address",
    "text": "Gettysburg address\n\n\n\nRandomly select 10 words from the Gettysburg Address and calculate the mean number of letters in these 10 words. Submit your answer at bit.ly/bit.ly/gburg-s24.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n−+\n03:00"
  },
  {
    "objectID": "slides/13-ethics.html#your-responses",
    "href": "slides/13-ethics.html#your-responses",
    "title": "Data science ethics",
    "section": "Your responses",
    "text": "Your responses\n\n\n✔ Reading from \"Gettysburg address - Spring 2024 (Responses)\".\n\n\n✔ Range 'Form Responses 1'.\n\n\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`."
  },
  {
    "objectID": "slides/13-ethics.html#comparison-to-truth",
    "href": "slides/13-ethics.html#comparison-to-truth",
    "title": "Data science ethics",
    "section": "Comparison to “truth”",
    "text": "Comparison to “truth”\n\n\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`."
  },
  {
    "objectID": "slides/13-ethics.html#garbage-in-garbage-out",
    "href": "slides/13-ethics.html#garbage-in-garbage-out",
    "title": "Data science ethics",
    "section": "Garbage in, garbage out",
    "text": "Garbage in, garbage out\n\nIn statistical modeling and inference we talk about “garbage in, garbage out” – if you don’t have good (random, representative) data, results of your analysis will not be reliable or generalizable.\nCorollary: Bias in, bias out."
  },
  {
    "objectID": "slides/13-ethics.html#google-translate",
    "href": "slides/13-ethics.html#google-translate",
    "title": "Data science ethics",
    "section": "Google translate",
    "text": "Google translate\n\nWhat might be the reason for Google’s gendered translation? How do ethics play into this situation?\n\n\n\n\n\n\n\n\nSource: Engadget - Google is working to remove gender bias in its translations"
  },
  {
    "objectID": "slides/13-ethics.html#stochastic-parrots",
    "href": "slides/13-ethics.html#stochastic-parrots",
    "title": "Data science ethics",
    "section": "Stochastic parrots",
    "text": "Stochastic parrots\n\nExcerptQuestion\n\n\nOn the Dangers of Stochastic Parrots: Can Language Models Be Too Big? 🦜 (Bender et. al., 2021)\n\nThe past 3 years of work in NLP have been characterized by the development and deployment of ever larger language models, especially for English. BERT, its variants, GPT-2/3, and others, most recently Switch-C, have pushed the boundaries of the possible both through architectural innovations and through sheer size. Using these pretrained models and the methodology of fine-tuning them for specific tasks, researchers have extended the state of the art on a wide array of tasks as measured by leaderboards on specific benchmarks for English. In this paper, we take a step back and ask: How big is too big? What are the possible risks associated with this technology and what paths are available for mitigating those risks? We provide recommendations including weighing the environmental and financial costs first, investing resources into curating and carefully documenting datasets rather than ingesting everything on the web, carrying out pre-development exercises evaluating how the planned approach fits into research and development goals and supports stakeholder values, and encouraging research directions beyond ever larger language models.\n\n\n\n\n−+\n05:00\n\n\n\n\n\n\nWhat is meant by “stochastic parrots” in the paper title?"
  },
  {
    "objectID": "slides/13-ethics.html#machine-bias",
    "href": "slides/13-ethics.html#machine-bias",
    "title": "Data science ethics",
    "section": "Machine Bias",
    "text": "Machine Bias\n2016 ProPublica article on algorithm used for rating a defendant’s risk of future crime:\n\n\n\nIn forecasting who would re-offend, the algorithm made mistakes with black and white defendants at roughly the same rate but in very different ways.\n\nThe formula was particularly likely to falsely flag black defendants as future criminals, wrongly labeling them this way at almost twice the rate as white defendants.\nWhite defendants were mislabeled as low risk more often than black defendants.\n\n\n\n\n\n\n\n\n\n\n\n\nSource: ProPublica"
  },
  {
    "objectID": "slides/13-ethics.html#risk-score-errors",
    "href": "slides/13-ethics.html#risk-score-errors",
    "title": "Data science ethics",
    "section": "Risk score errors",
    "text": "Risk score errors\n\n\n\nWhat is common among the defendants who were assigned a high/low risk score for reoffending?"
  },
  {
    "objectID": "slides/13-ethics.html#risk-scores",
    "href": "slides/13-ethics.html#risk-scores",
    "title": "Data science ethics",
    "section": "Risk scores",
    "text": "Risk scores\n\n\n\nHow can an algorithm that doesn’t use race as input data be racist?"
  },
  {
    "objectID": "slides/13-ethics.html#predicting-ethnicity",
    "href": "slides/13-ethics.html#predicting-ethnicity",
    "title": "Data science ethics",
    "section": "Predicting ethnicity",
    "text": "Predicting ethnicity\nImproving Ecological Inference by Predicting Individual Ethnicity from Voter Registration Record (Imran and Khan, 2016)\n\nIn both political behavior research and voting rights litigation, turnout and vote choice for different racial groups are often inferred using aggregate election results and racial composition. Over the past several decades, many statistical methods have been proposed to address this ecological inference problem. We propose an alternative method to reduce aggregation bias by predicting individual-level ethnicity from voter registration records. Building on the existing methodological literature, we use Bayes’s rule to combine the Census Bureau’s Surname List with various information from geocoded voter registration records. We evaluate the performance of the proposed methodology using approximately nine million voter registration records from Florida, where self-reported ethnicity is available. We find that it is possible to reduce the false positive rate among Black and Latino voters to 6% and 3%, respectively, while maintaining the true positive rate above 80%. Moreover, we use our predictions to estimate turnout by race and find that our estimates yields substantially less amounts of bias and root mean squared error than standard ecological inference estimates. We provide open-source software to implement the proposed methodology. The open-source software is available for implementing the proposed methodology."
  },
  {
    "objectID": "slides/13-ethics.html#wru-package",
    "href": "slides/13-ethics.html#wru-package",
    "title": "Data science ethics",
    "section": "wru package",
    "text": "wru package\nThe said “source software” is the wru package: https://github.com/kosukeimai/wru.\n\nDo you have any ethical concerns about installing this package?"
  },
  {
    "objectID": "slides/13-ethics.html#wru-package-1",
    "href": "slides/13-ethics.html#wru-package-1",
    "title": "Data science ethics",
    "section": "wru package",
    "text": "wru package\n\nWas the publication of this model ethical? Does the open-source nature of the code affect your answer? Is it ethical to use this software? Does your answer change depending on the intended use?\n\n\nlibrary(wru)\npredict_race(voter.file = voters, surname.only = TRUE) |&gt;\n  select(surname, contains(\"pred\"))\n\n      surname    pred.whi    pred.bla     pred.his    pred.asi    pred.oth\n1      Khanna 0.045110474 0.003067623 0.0068522723 0.860411906 0.084557725\n2        Imai 0.052645440 0.001334812 0.0558160072 0.719376581 0.170827160\n3      Rivera 0.043285692 0.008204605 0.9136195794 0.024316883 0.010573240\n4     Fifield 0.895405704 0.001911388 0.0337464844 0.011079323 0.057857101\n5        Zhou 0.006572555 0.001298962 0.0005388581 0.982365594 0.009224032\n6    Ratkovic 0.861236727 0.008212824 0.0095395642 0.011334635 0.109676251\n7     Johnson 0.543815322 0.344128607 0.0272403940 0.007405765 0.077409913\n8       Lopez 0.038939877 0.004920643 0.9318797791 0.012154125 0.012105576\n10 Wantchekon 0.330697188 0.194700665 0.4042849478 0.021379541 0.048937658\n9       Morse 0.866360147 0.044429853 0.0246568086 0.010219712 0.054333479"
  },
  {
    "objectID": "slides/13-ethics.html#wru-package-2",
    "href": "slides/13-ethics.html#wru-package-2",
    "title": "Data science ethics",
    "section": "wru package",
    "text": "wru package\n\nme &lt;- tibble(surname = \"Rundel\")\n\npredict_race(voter.file = me, surname.only = TRUE)\n\nPredicting race for 2020\n\n\nWarning: Unknown or uninitialised column: `state`.\n\n\nProceeding with last name predictions...\n\n\nℹ All local files already up-to-date!\n\n\n  surname  pred.whi pred.bla pred.his pred.asi   pred.oth\n1  Rundel 0.9177967        0        0        0 0.08220329\n\n\n\n\n\n\n🔗 sta199-s24.github.io  ·  ❓ Ask on Ed"
  },
  {
    "objectID": "slides/21-randomization.html#while-you-wait-for-class-to-begin",
    "href": "slides/21-randomization.html#while-you-wait-for-class-to-begin",
    "title": "Making decisions with randomization tests",
    "section": "While you wait for class to begin…",
    "text": "While you wait for class to begin…\n\n\nGo back to your project called ae.\nIf there are any uncommitted files, commit them, and push.\nFinish working on ae-15-duke-forest-bootstrap.qmd."
  },
  {
    "objectID": "slides/21-randomization.html#trivia",
    "href": "slides/21-randomization.html#trivia",
    "title": "Making decisions with randomization tests",
    "section": "Trivia",
    "text": "Trivia\n\nWhat is this visualization about?"
  },
  {
    "objectID": "slides/21-randomization.html#announcements",
    "href": "slides/21-randomization.html#announcements",
    "title": "Making decisions with randomization tests",
    "section": "Announcements",
    "text": "Announcements\n\nHave at least one team meeting this week to review feedback and make some progress on your lab for peer review after exam on Monday 4/15"
  },
  {
    "objectID": "slides/21-randomization.html#from-last-time-ae-15-duke-forest-bootstrap",
    "href": "slides/21-randomization.html#from-last-time-ae-15-duke-forest-bootstrap",
    "title": "Making decisions with randomization tests",
    "section": "From last time: ae-15-duke-forest-bootstrap",
    "text": "From last time: ae-15-duke-forest-bootstrap\n\nReview last part of ae-15-duke-forest-bootstrap.qmd."
  },
  {
    "objectID": "slides/21-randomization.html#goals",
    "href": "slides/21-randomization.html#goals",
    "title": "Making decisions with randomization tests",
    "section": "Goals",
    "text": "Goals\n\nReview constructing confidence intervals via bootstrapping\nHypothesis testing, p-values, and making conclusions\n\nTest a claim about a population parameter\nUse simulation-based methods to generate the null distribution\nCalculate and interpret the p-value\nUse the p-value to draw conclusions in the context of the data and the research question"
  },
  {
    "objectID": "slides/21-randomization.html#bootstrap-intervals",
    "href": "slides/21-randomization.html#bootstrap-intervals",
    "title": "Making decisions with randomization tests",
    "section": "Bootstrap intervals",
    "text": "Bootstrap intervals\n\n\nWhy do we construct confidence intervals?\nWhat is bootstrapping?\nWhat does each dot on the plot represent? Note: The plot is of a bootstrap distribution of a sample mean."
  },
  {
    "objectID": "slides/21-randomization.html#why-do-we-construct-confidence-intervals",
    "href": "slides/21-randomization.html#why-do-we-construct-confidence-intervals",
    "title": "Making decisions with randomization tests",
    "section": "Why do we construct confidence intervals?",
    "text": "Why do we construct confidence intervals?\nTo estimate plausible values of a parameter of interest, e.g., a slope (\\(\\beta_1\\)), a mean (\\(\\mu\\)), a proportion (\\(p\\))."
  },
  {
    "objectID": "slides/21-randomization.html#what-is-bootstrapping",
    "href": "slides/21-randomization.html#what-is-bootstrapping",
    "title": "Making decisions with randomization tests",
    "section": "What is bootstrapping?",
    "text": "What is bootstrapping?\n\nBootstrapping is a statistical procedure that resamples(with replacement) a single data set to create many simulated samples.\nWe then use these simulated samples to quantify the uncertainty around the sample statistic we’re interested in, e.g., a slope (\\(b_1\\)), a mean (\\(\\bar{x}\\)), a proportion (\\(\\hat{p}\\))."
  },
  {
    "objectID": "slides/21-randomization.html#what-does-each-dot-on-the-plot-represent",
    "href": "slides/21-randomization.html#what-does-each-dot-on-the-plot-represent",
    "title": "Making decisions with randomization tests",
    "section": "What does each dot on the plot represent?",
    "text": "What does each dot on the plot represent?\nNote: The plot is of a bootstrap distribution of a sample mean.\n\nResample, with replacement, from the original data\nDo this 20 times (since there are 20 dots on the plot)\nCalculate the summary statistic of interest in each of these samples"
  },
  {
    "objectID": "slides/21-randomization.html#bootstrapping-for-categorical-data",
    "href": "slides/21-randomization.html#bootstrapping-for-categorical-data",
    "title": "Making decisions with randomization tests",
    "section": "Bootstrapping for categorical data",
    "text": "Bootstrapping for categorical data\n\nspecify(response = x, success = \"success level\")\ncalculate(stat = \"prop\")"
  },
  {
    "objectID": "slides/21-randomization.html#bootstrapping-for-other-stats",
    "href": "slides/21-randomization.html#bootstrapping-for-other-stats",
    "title": "Making decisions with randomization tests",
    "section": "Bootstrapping for other stats",
    "text": "Bootstrapping for other stats\n\ncalculate() documentation: infer.tidymodels.org/reference/calculate.html\ninfer pipelines: infer.tidymodels.org/articles/observed_stat_examples.html"
  },
  {
    "objectID": "slides/21-randomization.html#hypothesis-testing-1",
    "href": "slides/21-randomization.html#hypothesis-testing-1",
    "title": "Making decisions with randomization tests",
    "section": "Hypothesis testing",
    "text": "Hypothesis testing\nA hypothesis test is a statistical technique used to evaluate competing claims using data\n\n\nNull hypothesism \\(H_0\\): An assumption about the population. “There is nothing going on.”\nAlternative hypothesis, \\(H_A\\): A research question about the population. “There is something going on”.\n\n\n\nNote: Hypotheses are always at the population level!"
  },
  {
    "objectID": "slides/21-randomization.html#writing-hypotheses",
    "href": "slides/21-randomization.html#writing-hypotheses",
    "title": "Making decisions with randomization tests",
    "section": "Writing hypotheses",
    "text": "Writing hypotheses\n\nAs a researcher, you are interested in the average number of cups of coffee Duke students drink in a day. An article on The Chronicle suggests that the Duke students drink, on average, 1.2 cups of coffee. You are interested in evaluating if The Chronicle’s claim is too high. What are your hypotheses?"
  },
  {
    "objectID": "slides/21-randomization.html#writing-hypotheses-1",
    "href": "slides/21-randomization.html#writing-hypotheses-1",
    "title": "Making decisions with randomization tests",
    "section": "Writing hypotheses",
    "text": "Writing hypotheses\n\nAs a researcher, you are interested in the average number of cups of coffee Duke students drink in a day.\n\nAn article on The Chronicle suggests that the Duke students drink, on average, 1.2 cups of coffee. \\(\\rightarrow H_0: \\mu = 1.2\\)\nYou are interested in evaluating if The Chronicle’s too high. \\(\\rightarrow H_A: \\mu &lt; 1.2\\)"
  },
  {
    "objectID": "slides/21-randomization.html#collecting-data",
    "href": "slides/21-randomization.html#collecting-data",
    "title": "Making decisions with randomization tests",
    "section": "Collecting data",
    "text": "Collecting data\nLet’s suppose you manage to take a random sample of 100 Duke students and ask them how many cups of coffee they drink and calculate the sample average to be \\(\\bar{x} = 1\\)."
  },
  {
    "objectID": "slides/21-randomization.html#hypothesis-testing-mindset",
    "href": "slides/21-randomization.html#hypothesis-testing-mindset",
    "title": "Making decisions with randomization tests",
    "section": "Hypothesis testing “mindset”",
    "text": "Hypothesis testing “mindset”\n\nAssume yoi live in a world where null hypothesis is true: \\(\\mu = 1.2\\).\nAsk yourself how likely you are to observe the sample statistic, or something even more extreme, in this world: \\(P(\\bar{x} &lt; 1 | \\mu = 1.2)\\) = ?\n\nRead: Probability that the sample mean is smaller than 1 given that the population mean is 1.2."
  },
  {
    "objectID": "slides/21-randomization.html#application-exercise-ae-16-equality-randomization",
    "href": "slides/21-randomization.html#application-exercise-ae-16-equality-randomization",
    "title": "Making decisions with randomization tests",
    "section": "Application exercise: ae-16-equality-randomization",
    "text": "Application exercise: ae-16-equality-randomization\n\n\nGo back to your project called ae.\nIf there are any uncommitted files, commit them, and push.\nThen pull and work on ae-16-equality-randomization.qmd."
  },
  {
    "objectID": "slides/21-randomization.html#recap-of-ae",
    "href": "slides/21-randomization.html#recap-of-ae",
    "title": "Making decisions with randomization tests",
    "section": "Recap of AE",
    "text": "Recap of AE\n\nA hypothesis test is a statistical technique used to evaluate competing claims (null and alternative hypotheses) using data.\nWe simulate a null distribution using our original data.\nWe use our sample statistic and direction of the alternative hypothesis to calculate the p-value.\nWe use the p-value to determine conclusions about the alternative hypotheses.\n\n\n\n\n\n🔗 sta199-s24.github.io  ·  ❓ Ask on Ed"
  },
  {
    "objectID": "slides/06-tidying-data.html#while-you-wait-for-class-to-begin",
    "href": "slides/06-tidying-data.html#while-you-wait-for-class-to-begin",
    "title": "Tidying data",
    "section": "While you wait for class to begin…",
    "text": "While you wait for class to begin…\n\nGo to your ae repo, click Pull to get today’s application exercise to get ready for later.\nQuestions from the prepare materials?"
  },
  {
    "objectID": "slides/06-tidying-data.html#announcements",
    "href": "slides/06-tidying-data.html#announcements",
    "title": "Tidying data",
    "section": "Announcements",
    "text": "Announcements\n\nLab 2 due Monday, 8 am"
  },
  {
    "objectID": "slides/06-tidying-data.html#ae-04-flights-wrangling",
    "href": "slides/06-tidying-data.html#ae-04-flights-wrangling",
    "title": "Tidying data",
    "section": "ae-04-flights-wrangling",
    "text": "ae-04-flights-wrangling\n\n\nGo to the project navigator in RStudio (top right corner of your RStudio window) and open the project called ae.\nOpen the file called ae-04-flights-wrangling.qmd and render it."
  },
  {
    "objectID": "slides/06-tidying-data.html#recap-pipe",
    "href": "slides/06-tidying-data.html#recap-pipe",
    "title": "Tidying data",
    "section": "Recap: pipe",
    "text": "Recap: pipe\n\nThe pipe operator passes what comes before it into the function that comes after it as the first argument in that function.\n\n\nsum(1, 2)\n\n[1] 3\n\n1 |&gt; \n  sum(2)\n\n[1] 3\n\n\n\nAlways use a line break after the pipe, and indent the next line of code.\n\nJust like always use a line break between layers of ggplots, after +, and indent the next line."
  },
  {
    "objectID": "slides/06-tidying-data.html#recap-logical-operators",
    "href": "slides/06-tidying-data.html#recap-logical-operators",
    "title": "Tidying data",
    "section": "Recap: logical operators",
    "text": "Recap: logical operators\n\n\n\noperator\ndefinition\n\n\n\n\n&lt;\nis less than?\n\n\n&lt;=\nis less than or equal to?\n\n\n&gt;\nis greater than?\n\n\n&gt;=\nis greater than or equal to?\n\n\n==\nis exactly equal to?\n\n\n!=\nis not equal to?"
  },
  {
    "objectID": "slides/06-tidying-data.html#recap-logical-operators-1",
    "href": "slides/06-tidying-data.html#recap-logical-operators-1",
    "title": "Tidying data",
    "section": "Recap: logical operators",
    "text": "Recap: logical operators\n\n\n\n\n\n\n\noperator\ndefinition\n\n\n\n\nx & y\nis x AND y?\n\n\nx \\| y\nis x OR y?\n\n\nis.na(x)\nis x NA?\n\n\n!is.na(x)\nis x not NA?\n\n\nx %in% y\nis x in y?\n\n\n!(x %in% y)\nis x not in y?\n\n\n!x\nis not x? (only makes sense if x is TRUE or FALSE)"
  },
  {
    "objectID": "slides/06-tidying-data.html#recap-assignment",
    "href": "slides/06-tidying-data.html#recap-assignment",
    "title": "Tidying data",
    "section": "Recap: assignment",
    "text": "Recap: assignment\nLet’s make a tiny data frame to use as an example:\n\nlibrary(tidyverse)\ndf &lt;- tibble(x = c(1, 2, 3, 4, 5), y = c(\"a\", \"a\", \"b\", \"c\", \"c\"))\ndf\n\n# A tibble: 5 × 2\n      x y    \n  &lt;dbl&gt; &lt;chr&gt;\n1     1 a    \n2     2 a    \n3     3 b    \n4     4 c    \n5     5 c"
  },
  {
    "objectID": "slides/06-tidying-data.html#recap-assignment-1",
    "href": "slides/06-tidying-data.html#recap-assignment-1",
    "title": "Tidying data",
    "section": "Recap: assignment",
    "text": "Recap: assignment\n\n\n\nDo something and show me\n\n\ndf |&gt;\n  mutate(x = x * 2)\n\n# A tibble: 5 × 2\n      x y    \n  &lt;dbl&gt; &lt;chr&gt;\n1     2 a    \n2     4 a    \n3     6 b    \n4     8 c    \n5    10 c    \n\ndf\n\n# A tibble: 5 × 2\n      x y    \n  &lt;dbl&gt; &lt;chr&gt;\n1     1 a    \n2     2 a    \n3     3 b    \n4     4 c    \n5     5 c    \n\n\n\n\nDo something and save result\n\n\ndf &lt;- df |&gt;\n  mutate(x = x * 2)\ndf\n\n# A tibble: 5 × 2\n      x y    \n  &lt;dbl&gt; &lt;chr&gt;\n1     2 a    \n2     4 a    \n3     6 b    \n4     8 c    \n5    10 c"
  },
  {
    "objectID": "slides/06-tidying-data.html#recap-assignment-2",
    "href": "slides/06-tidying-data.html#recap-assignment-2",
    "title": "Tidying data",
    "section": "Recap: assignment",
    "text": "Recap: assignment\n\n\n\nDo something, save result, overwriting original\n\n\ndf &lt;- tibble(\n  x = c(1, 2, 3, 4, 5), \n  y = c(\"a\", \"a\", \"b\", \"c\", \"c\")\n)\ndf &lt;- df |&gt;\n  mutate(x = x * 2)\ndf\n\n# A tibble: 5 × 2\n      x y    \n  &lt;dbl&gt; &lt;chr&gt;\n1     2 a    \n2     4 a    \n3     6 b    \n4     8 c    \n5    10 c    \n\n\n\n\nDo something, save result, not overwriting original\n\n\ndf &lt;- tibble(\n  x = c(1, 2, 3, 4, 5), \n  y = c(\"a\", \"a\", \"b\", \"c\", \"c\")\n)\ndf_new &lt;- df |&gt;\n  mutate(x = x * 2)\ndf_new\n\n# A tibble: 5 × 2\n      x y    \n  &lt;dbl&gt; &lt;chr&gt;\n1     2 a    \n2     4 a    \n3     6 b    \n4     8 c    \n5    10 c"
  },
  {
    "objectID": "slides/06-tidying-data.html#recap-assignment-3",
    "href": "slides/06-tidying-data.html#recap-assignment-3",
    "title": "Tidying data",
    "section": "Recap: assignment",
    "text": "Recap: assignment\n\n\n\nDo something, save result, overwriting original when you shouldn’t\n\n\ndf &lt;- tibble(\n  x = c(1, 2, 3, 4, 5), \n  y = c(\"a\", \"a\", \"b\", \"c\", \"c\")\n)\ndf &lt;- df |&gt;\n  group_by(y) |&gt;\n  summarize(mean_x = mean(x))\ndf\n\n# A tibble: 3 × 2\n  y     mean_x\n  &lt;chr&gt;  &lt;dbl&gt;\n1 a        1.5\n2 b        3  \n3 c        4.5\n\n\n\n\nDo something, save result, not overwriting original when you shouldn’t\n\n\ndf &lt;- tibble(\n  x = c(1, 2, 3, 4, 5), \n  y = c(\"a\", \"a\", \"b\", \"c\", \"c\")\n)\ndf_summary &lt;- df |&gt;\n  group_by(y) |&gt;\n  summarize(mean_x = mean(x))\ndf_summary\n\n# A tibble: 3 × 2\n  y     mean_x\n  &lt;chr&gt;  &lt;dbl&gt;\n1 a        1.5\n2 b        3  \n3 c        4.5"
  },
  {
    "objectID": "slides/06-tidying-data.html#recap-assignment-4",
    "href": "slides/06-tidying-data.html#recap-assignment-4",
    "title": "Tidying data",
    "section": "Recap: assignment",
    "text": "Recap: assignment\n\n\n\nDo something, save result, overwriting original\ndata frame\n\n\ndf &lt;- tibble(\n  x = c(1, 2, 3, 4, 5), \n  y = c(\"a\", \"a\", \"b\", \"c\", \"c\")\n)\ndf &lt;- df |&gt;\n  mutate(z = x + 2)\ndf\n\n# A tibble: 5 × 3\n      x y         z\n  &lt;dbl&gt; &lt;chr&gt; &lt;dbl&gt;\n1     1 a         3\n2     2 a         4\n3     3 b         5\n4     4 c         6\n5     5 c         7\n\n\n\n\nDo something, save result, overwriting original\ncolumn\n\n\ndf &lt;- tibble(\n  x = c(1, 2, 3, 4, 5), \n  y = c(\"a\", \"a\", \"b\", \"c\", \"c\")\n)\ndf &lt;- df |&gt;\n  mutate(x = x + 2)\ndf\n\n# A tibble: 5 × 2\n      x y    \n  &lt;dbl&gt; &lt;chr&gt;\n1     3 a    \n2     4 a    \n3     5 b    \n4     6 c    \n5     7 c"
  },
  {
    "objectID": "slides/06-tidying-data.html#tidy-data",
    "href": "slides/06-tidying-data.html#tidy-data",
    "title": "Tidying data",
    "section": "Tidy data",
    "text": "Tidy data\n\n“Tidy datasets are easy to manipulate, model and visualise, and have a specific structure: each variable is a column, each observation is a row, and each type of observational unit is a table.”\nTidy Data, https://vita.had.co.nz/papers/tidy-data.pdf\n\n\nNote: “easy to manipulate” = “straightforward to manipulate”"
  },
  {
    "objectID": "slides/06-tidying-data.html#goal",
    "href": "slides/06-tidying-data.html#goal",
    "title": "Tidying data",
    "section": "Goal",
    "text": "Goal\nVisualize StatSci majors over the years!"
  },
  {
    "objectID": "slides/06-tidying-data.html#data",
    "href": "slides/06-tidying-data.html#data",
    "title": "Tidying data",
    "section": "Data",
    "text": "Data\n\nstatsci &lt;- read_csv(\"https://sta199-s24.github.io/data/statsci.csv\")\nstatsci\n\n# A tibble: 4 × 14\n  degree      `2011` `2012` `2013` `2014` `2015` `2016` `2017` `2018` `2019` `2020` `2021`\n  &lt;chr&gt;        &lt;dbl&gt;  &lt;dbl&gt;  &lt;dbl&gt;  &lt;dbl&gt;  &lt;dbl&gt;  &lt;dbl&gt;  &lt;dbl&gt;  &lt;dbl&gt;  &lt;dbl&gt;  &lt;dbl&gt;  &lt;dbl&gt;\n1 Statistica…     NA      1     NA     NA      4      4      1     NA     NA      1      2\n2 Statistica…      2      2      4      1      3      6      3      4      4      1     NA\n3 Statistica…      2      6      1     NA      5      6      6      8      8     17     16\n4 Statistica…      5      9      4     13     10     17     24     21     26     27     35\n# ℹ 2 more variables: `2022` &lt;dbl&gt;, `2023` &lt;dbl&gt;\n\n\n\n\nThe first column (variable) is the degree, and there are 4 possible degrees: BS (Bachelor of Science), BS2 (Bachelor of Science, 2nd major), AB (Bachelor of Arts), AB2 (Bachelor of Arts, 2nd major).\nThe remaining columns show the number of students graduating with that major in a given academic year from 2011 to 2023."
  },
  {
    "objectID": "slides/06-tidying-data.html#lets-plan",
    "href": "slides/06-tidying-data.html#lets-plan",
    "title": "Tidying data",
    "section": "Let’s plan!",
    "text": "Let’s plan!\n\nTake a look at the plot we aim to make and sketch the data frame we need to make the plot. Determine what each row and each column of the data frame should be. Hint: We need data to be in columns to map to aesthetic elements of the plot."
  },
  {
    "objectID": "slides/06-tidying-data.html#ae-05-majors-tidying",
    "href": "slides/06-tidying-data.html#ae-05-majors-tidying",
    "title": "Tidying data",
    "section": "ae-05-majors-tidying",
    "text": "ae-05-majors-tidying\n\n\nGo to the project navigator in RStudio (top right corner of your RStudio window) and open the project called ae.\nIf there are any uncommitted files, commit them, and then click Pull.\nOpen the file called ae-05-majors-tidying.qmd and render it."
  },
  {
    "objectID": "slides/06-tidying-data.html#recap-pivoting",
    "href": "slides/06-tidying-data.html#recap-pivoting",
    "title": "Tidying data",
    "section": "Recap: pivoting",
    "text": "Recap: pivoting\n\n\nData sets can’t be labeled as wide or long but they can be made wider or longer for a certain analysis that requires a certain format\nWhen pivoting longer, variable names that turn into values are characters by default. If you need them to be in another format, you need to explicitly make that transformation, which you can do so within the pivot_longer() function.\nYou can tweak a plot forever, but at some point the tweaks are likely not very productive. However, you should always be critical of defaults (however pretty they might be) and see if you can improve the plot to better portray your data / results / what you want to communicate.\n\n\n\n\n\n\n🔗 sta199-s24.github.io  ·  ❓ Ask on Ed"
  },
  {
    "objectID": "slides/09-exam-1-review.html#while-you-wait-for-class-to-begin",
    "href": "slides/09-exam-1-review.html#while-you-wait-for-class-to-begin",
    "title": "Exam 1 review",
    "section": "While you wait for class to begin…",
    "text": "While you wait for class to begin…\nQuestions for/about the exam?"
  },
  {
    "objectID": "slides/09-exam-1-review.html#packages",
    "href": "slides/09-exam-1-review.html#packages",
    "title": "Exam 1 review",
    "section": "Packages",
    "text": "Packages\n\nlibrary(tidyverse)\nlibrary(openintro)"
  },
  {
    "objectID": "slides/09-exam-1-review.html#announcements",
    "href": "slides/09-exam-1-review.html#announcements",
    "title": "Exam 1 review",
    "section": "Announcements",
    "text": "Announcements\n\nExam format / flow\nAcademic dishonesty / Duke Community Standard"
  },
  {
    "objectID": "slides/09-exam-1-review.html#explicit-vs.-implicit-type-coercion",
    "href": "slides/09-exam-1-review.html#explicit-vs.-implicit-type-coercion",
    "title": "Exam 1 review",
    "section": "Explicit vs. implicit type coercion",
    "text": "Explicit vs. implicit type coercion\n\nExplicit type coercion: You ask R to change the type of a variable\nImplicit type coercion: R changes / makes assumptions for you about the type of a variable without you asking for it\n\nThis happens because in a vector, you can’t have multiple types of values"
  },
  {
    "objectID": "slides/09-exam-1-review.html#vectors",
    "href": "slides/09-exam-1-review.html#vectors",
    "title": "Exam 1 review",
    "section": "Vectors",
    "text": "Vectors\n\n\nA vector is a collection of values\n\nAtomic vectors can only contain values of the same type\nLists can contain values of different types\n\nWhy do we care? Because each column of a data frame is a vector.\n\n\n\n\ndf &lt;- tibble(\n  x = c(1, 2, 3),          # numeric (double)\n  y = c(\"a\", \"b\", \"c\"),    # character\n  z = c(TRUE, FALSE, TRUE) # logical\n)\ndf\n\n# A tibble: 3 × 3\n      x y     z    \n  &lt;dbl&gt; &lt;chr&gt; &lt;lgl&gt;\n1     1 a     TRUE \n2     2 b     FALSE\n3     3 c     TRUE"
  },
  {
    "objectID": "slides/09-exam-1-review.html#explicit-coercion",
    "href": "slides/09-exam-1-review.html#explicit-coercion",
    "title": "Exam 1 review",
    "section": "Explicit coercion",
    "text": "Explicit coercion\n✅ From numeric to character\n\ndf |&gt;\n  mutate(x_new = as.character(x))\n\n# A tibble: 3 × 4\n      x y     z     x_new\n  &lt;dbl&gt; &lt;chr&gt; &lt;lgl&gt; &lt;chr&gt;\n1     1 a     TRUE  1    \n2     2 b     FALSE 2    \n3     3 c     TRUE  3"
  },
  {
    "objectID": "slides/09-exam-1-review.html#explicit-coercion-1",
    "href": "slides/09-exam-1-review.html#explicit-coercion-1",
    "title": "Exam 1 review",
    "section": "Explicit coercion",
    "text": "Explicit coercion\n❌ From character to numeric\n\ndf |&gt;\n  mutate(y_new = as.numeric(y))\n\nWarning: There was 1 warning in `mutate()`.\nℹ In argument: `y_new = as.numeric(y)`.\nCaused by warning:\n! NAs introduced by coercion\n\n\n# A tibble: 3 × 4\n      x y     z     y_new\n  &lt;dbl&gt; &lt;chr&gt; &lt;lgl&gt; &lt;dbl&gt;\n1     1 a     TRUE     NA\n2     2 b     FALSE    NA\n3     3 c     TRUE     NA"
  },
  {
    "objectID": "slides/09-exam-1-review.html#implicit-coercion",
    "href": "slides/09-exam-1-review.html#implicit-coercion",
    "title": "Exam 1 review",
    "section": "Implicit coercion",
    "text": "Implicit coercion\n\nWhich of the column types were implicitly coerced?\n\n\ndf &lt;- tibble(\n  w = c(1, 2, 3),\n  x = c(\"a\", \"b\", 4),\n  y = c(\"c\", \"d\", NA),\n  z = c(5, 6, NA),\n)\ndf\n\n# A tibble: 3 × 4\n      w x     y         z\n  &lt;dbl&gt; &lt;chr&gt; &lt;chr&gt; &lt;dbl&gt;\n1     1 a     c         5\n2     2 b     d         6\n3     3 4     &lt;NA&gt;     NA"
  },
  {
    "objectID": "slides/09-exam-1-review.html#collecting-data",
    "href": "slides/09-exam-1-review.html#collecting-data",
    "title": "Exam 1 review",
    "section": "Collecting data",
    "text": "Collecting data\n\nSuppose you conduct a survey and ask students their student ID number and number of credits they’re taking this semester. What is the type of each variable?\n\n\n\nsurvey_raw &lt;- tibble(\n  student_id = c(273674, 298765, 287129, \"I don't remember\"),\n  n_credits = c(4, 4.5, \"I'm not sure yet\", \"2 - underloading\")\n)\nsurvey_raw\n\n# A tibble: 4 × 2\n  student_id       n_credits       \n  &lt;chr&gt;            &lt;chr&gt;           \n1 273674           4               \n2 298765           4.5             \n3 287129           I'm not sure yet\n4 I don't remember 2 - underloading"
  },
  {
    "objectID": "slides/09-exam-1-review.html#cleaning-data",
    "href": "slides/09-exam-1-review.html#cleaning-data",
    "title": "Exam 1 review",
    "section": "Cleaning data",
    "text": "Cleaning data\n\nsurvey &lt;- survey_raw |&gt;\n  mutate(\n    student_id = if_else(student_id == \"I don't remember\", NA, student_id),\n    n_credits = case_when(\n      n_credits == \"I'm not sure yet\" ~ NA,\n      n_credits == \"2 - underloading\" ~ \"2\",\n      .default = n_credits\n    ),\n    n_credits = as.numeric(n_credits)\n  )\nsurvey\n\n# A tibble: 4 × 2\n  student_id n_credits\n  &lt;chr&gt;          &lt;dbl&gt;\n1 273674           4  \n2 298765           4.5\n3 287129          NA  \n4 &lt;NA&gt;             2"
  },
  {
    "objectID": "slides/09-exam-1-review.html#cleaning-data-alternative",
    "href": "slides/09-exam-1-review.html#cleaning-data-alternative",
    "title": "Exam 1 review",
    "section": "Cleaning data – alternative",
    "text": "Cleaning data – alternative\n\nsurvey &lt;- survey_raw |&gt;\n  mutate(\n    student_id = parse_number(student_id),\n    n_credits = parse_number(n_credits)\n  )\n\nWarning: There were 2 warnings in `mutate()`.\nThe first warning was:\nℹ In argument: `student_id = parse_number(student_id)`.\nCaused by warning:\n! 1 parsing failure.\nrow col expected           actual\n  4  -- a number I don't remember\nℹ Run `dplyr::last_dplyr_warnings()` to see the 1 remaining warning.\n\nsurvey\n\n# A tibble: 4 × 2\n  student_id n_credits\n       &lt;dbl&gt;     &lt;dbl&gt;\n1     273674       4  \n2     298765       4.5\n3     287129      NA  \n4         NA       2"
  },
  {
    "objectID": "slides/09-exam-1-review.html#recap-type-coercion",
    "href": "slides/09-exam-1-review.html#recap-type-coercion",
    "title": "Exam 1 review",
    "section": "Recap: Type coercion",
    "text": "Recap: Type coercion\n\n\nIf variables in a data frame have multiple types of values, R will coerce them into a single type, which may or may not be what you want.\nIf what R does by default is not what you want, you can use explicit coercion functions like as.numeric(), as.character(), etc. to turn them into the types you want them to be, which will generally also involve cleaning up the features of the data that caused the unwanted implicit coercion in the first place."
  },
  {
    "objectID": "slides/09-exam-1-review.html#openintroloan50",
    "href": "slides/09-exam-1-review.html#openintroloan50",
    "title": "Exam 1 review",
    "section": "openintro::loan50",
    "text": "openintro::loan50\n\nloan50 |&gt;\n  select(annual_income, interest_rate, homeownership)\n\n# A tibble: 50 × 3\n   annual_income interest_rate homeownership\n           &lt;dbl&gt;         &lt;dbl&gt; &lt;fct&gt;        \n 1         59000         10.9  rent         \n 2         60000          9.92 rent         \n 3         75000         26.3  mortgage     \n 4         75000          9.92 rent         \n 5        254000          9.43 mortgage     \n 6         67000          9.92 mortgage     \n 7         28800         17.1  rent         \n 8         80000          6.08 mortgage     \n 9         34000          7.97 rent         \n10         80000         12.6  mortgage     \n# ℹ 40 more rows"
  },
  {
    "objectID": "slides/09-exam-1-review.html#aesthetic-mappings-1",
    "href": "slides/09-exam-1-review.html#aesthetic-mappings-1",
    "title": "Exam 1 review",
    "section": "Aesthetic mappings",
    "text": "Aesthetic mappings\n\nWhat will the following code result in?\n\n\nggplot(\n  loan50,\n  aes(x = annual_income, y = interest_rate, color = homeownership, shape = homeownership)\n) +\n  geom_point() +\n  scale_color_colorblind()"
  },
  {
    "objectID": "slides/09-exam-1-review.html#aesthetic-mappings-2",
    "href": "slides/09-exam-1-review.html#aesthetic-mappings-2",
    "title": "Exam 1 review",
    "section": "Aesthetic mappings",
    "text": "Aesthetic mappings\n\nggplot(\n  loan50,\n  aes(x = annual_income, y = interest_rate, color = homeownership, shape = homeownership)\n) +\n  geom_point() +\n  scale_color_colorblind()"
  },
  {
    "objectID": "slides/09-exam-1-review.html#global-mappings",
    "href": "slides/09-exam-1-review.html#global-mappings",
    "title": "Exam 1 review",
    "section": "Global mappings",
    "text": "Global mappings\n\nWhat will the following code result in?\n\n\nggplot(\n  loan50,\n  aes(x = annual_income, y = interest_rate, color = homeownership, shape = homeownership)\n) +\n  geom_point() +\n  geom_smooth(se = FALSE) +\n  scale_color_colorblind()"
  },
  {
    "objectID": "slides/09-exam-1-review.html#global-mappings-1",
    "href": "slides/09-exam-1-review.html#global-mappings-1",
    "title": "Exam 1 review",
    "section": "Global mappings",
    "text": "Global mappings\n\nggplot(\n  loan50,\n  aes(x = annual_income, y = interest_rate, color = homeownership, shape = homeownership)\n) +\n  geom_point() +\n  geom_smooth(se = FALSE) +\n  scale_color_colorblind()"
  },
  {
    "objectID": "slides/09-exam-1-review.html#local-mappings",
    "href": "slides/09-exam-1-review.html#local-mappings",
    "title": "Exam 1 review",
    "section": "Local mappings",
    "text": "Local mappings\n\nWhat will the following code result in?\n\n\nggplot(\n  loan50,\n  aes(x = annual_income, y = interest_rate)\n) +\n  geom_point(aes(color = homeownership)) +\n  geom_smooth(se = FALSE) +\n  scale_color_colorblind()"
  },
  {
    "objectID": "slides/09-exam-1-review.html#local-mappings-1",
    "href": "slides/09-exam-1-review.html#local-mappings-1",
    "title": "Exam 1 review",
    "section": "Local mappings",
    "text": "Local mappings\n\nggplot(\n  loan50,\n  aes(x = annual_income, y = interest_rate)\n) +\n  geom_point(aes(color = homeownership)) +\n  geom_smooth(se = FALSE) +\n  scale_color_colorblind()"
  },
  {
    "objectID": "slides/09-exam-1-review.html#mapping-vs.-setting",
    "href": "slides/09-exam-1-review.html#mapping-vs.-setting",
    "title": "Exam 1 review",
    "section": "Mapping vs. setting",
    "text": "Mapping vs. setting\n\nWhat will the following code result in?\n\n\nggplot(\n  loan50,\n  aes(x = annual_income, y = interest_rate)\n) +\n  geom_point(aes(color = homeownership)) +\n  geom_smooth(color = \"red\", se = FALSE) +\n  scale_color_colorblind()"
  },
  {
    "objectID": "slides/09-exam-1-review.html#mapping-vs.-setting-1",
    "href": "slides/09-exam-1-review.html#mapping-vs.-setting-1",
    "title": "Exam 1 review",
    "section": "Mapping vs. setting",
    "text": "Mapping vs. setting\n\nggplot(\n  loan50,\n  aes(x = annual_income, y = interest_rate)\n) +\n  geom_point(aes(color = homeownership)) +\n  geom_smooth(color = \"red\", se = FALSE) +\n  scale_color_colorblind()"
  },
  {
    "objectID": "slides/09-exam-1-review.html#recap-aesthetic-mappings",
    "href": "slides/09-exam-1-review.html#recap-aesthetic-mappings",
    "title": "Exam 1 review",
    "section": "Recap: Aesthetic mappings",
    "text": "Recap: Aesthetic mappings\n\n\nAesthetic mapping defined at the global level will be used by all geoms for which the aesthetic is defined.\nAesthetic mapping defined at the local level will be used only by the geoms they’re defined for."
  },
  {
    "objectID": "slides/09-exam-1-review.html#aside-legends",
    "href": "slides/09-exam-1-review.html#aside-legends",
    "title": "Exam 1 review",
    "section": "Aside: Legends",
    "text": "Aside: Legends\n\nggplot(\n  loan50,\n  aes(x = annual_income, y = interest_rate, color = homeownership, shape = homeownership)\n) +\n  geom_point() +\n  scale_color_colorblind()"
  },
  {
    "objectID": "slides/09-exam-1-review.html#aside-legends-1",
    "href": "slides/09-exam-1-review.html#aside-legends-1",
    "title": "Exam 1 review",
    "section": "Aside: Legends",
    "text": "Aside: Legends\n\nggplot(\n  loan50,\n  aes(x = annual_income, y = interest_rate, color = homeownership, shape = homeownership)\n) +\n  geom_point() +\n  scale_color_colorblind() +\n  labs(color = \"Home ownership\")"
  },
  {
    "objectID": "slides/09-exam-1-review.html#aside-legends-2",
    "href": "slides/09-exam-1-review.html#aside-legends-2",
    "title": "Exam 1 review",
    "section": "Aside: Legends",
    "text": "Aside: Legends\n\nggplot(\n  loan50,\n  aes(x = annual_income, y = interest_rate, color = homeownership, shape = homeownership)\n) +\n  geom_point() +\n  scale_color_colorblind() +\n  labs(\n    color = \"Home ownership\",\n    shape = \"Home ownership\"\n  )"
  },
  {
    "objectID": "slides/09-exam-1-review.html#factors-1",
    "href": "slides/09-exam-1-review.html#factors-1",
    "title": "Exam 1 review",
    "section": "Factors",
    "text": "Factors\n\nFactors are used for categorical variables – variables that have a fixed and known set of possible values.\nThey are also useful when you want to display character vectors in a non-alphabetical order.\n\n\n\nR4DS: https://r4ds.hadley.nz/factors."
  },
  {
    "objectID": "slides/09-exam-1-review.html#bar-plot",
    "href": "slides/09-exam-1-review.html#bar-plot",
    "title": "Exam 1 review",
    "section": "Bar plot",
    "text": "Bar plot\n\nggplot(loan50, aes(x = homeownership)) +\n  geom_bar()"
  },
  {
    "objectID": "slides/09-exam-1-review.html#bar-plot---reordered",
    "href": "slides/09-exam-1-review.html#bar-plot---reordered",
    "title": "Exam 1 review",
    "section": "Bar plot - reordered",
    "text": "Bar plot - reordered\n\nloan50 |&gt;\n  mutate(homeownership = fct_relevel(homeownership, \"mortgage\", \"rent\", \"own\")) |&gt;\n  ggplot(aes(x = homeownership)) +\n  geom_bar()"
  },
  {
    "objectID": "slides/09-exam-1-review.html#frequency-table",
    "href": "slides/09-exam-1-review.html#frequency-table",
    "title": "Exam 1 review",
    "section": "Frequency table",
    "text": "Frequency table\n\nloan50 |&gt;\n  count(homeownership)\n\n# A tibble: 3 × 2\n  homeownership     n\n  &lt;fct&gt;         &lt;int&gt;\n1 rent             21\n2 mortgage         26\n3 own               3"
  },
  {
    "objectID": "slides/09-exam-1-review.html#bar-plot---reordered-1",
    "href": "slides/09-exam-1-review.html#bar-plot---reordered-1",
    "title": "Exam 1 review",
    "section": "Bar plot - reordered",
    "text": "Bar plot - reordered\n\nloan50 |&gt;\n  mutate(homeownership = fct_relevel(homeownership, \"own\", \"rent\", \"mortgage\")) |&gt;\n  count(homeownership)\n\n# A tibble: 3 × 2\n  homeownership     n\n  &lt;fct&gt;         &lt;int&gt;\n1 own               3\n2 rent             21\n3 mortgage         26"
  },
  {
    "objectID": "slides/09-exam-1-review.html#under-the-hood",
    "href": "slides/09-exam-1-review.html#under-the-hood",
    "title": "Exam 1 review",
    "section": "Under the hood",
    "text": "Under the hood\n\nclass(loan50$homeownership)\n\n[1] \"factor\"\n\n\n\n\ntypeof(loan50$homeownership)\n\n[1] \"integer\"\n\n\n\n\n\nlevels(loan50$homeownership)\n\n[1] \"rent\"     \"mortgage\" \"own\"     \n\n\n\n\n\nstr(loan50$homeownership)\n\n Factor w/ 3 levels \"rent\",\"mortgage\",..: 1 1 2 1 2 2 1 2 1 2 ..."
  },
  {
    "objectID": "slides/09-exam-1-review.html#recap-factors",
    "href": "slides/09-exam-1-review.html#recap-factors",
    "title": "Exam 1 review",
    "section": "Recap: Factors",
    "text": "Recap: Factors\n\n\nThe forcats package has a bunch of functions (that start with fct_*()) for dealing with factors and their levels: https://forcats.tidyverse.org/reference/index.html\nFactors and the order of their levels are relevant for displays (tables, plots) and they’ll be relevant for modeling (later in the course)\nfactor is a data class"
  },
  {
    "objectID": "slides/09-exam-1-review.html#aside",
    "href": "slides/09-exam-1-review.html#aside",
    "title": "Exam 1 review",
    "section": "Aside: ==",
    "text": "Aside: ==\n\nloan50 |&gt;\n  mutate(homeownership_new = if_else(homeownership == \"rent\", \"don't own\", homeownership)) |&gt;\n  distinct(homeownership, homeownership_new)\n\n# A tibble: 3 × 2\n  homeownership homeownership_new\n  &lt;fct&gt;         &lt;chr&gt;            \n1 rent          don't own        \n2 mortgage      mortgage         \n3 own           own"
  },
  {
    "objectID": "slides/09-exam-1-review.html#aside-1",
    "href": "slides/09-exam-1-review.html#aside-1",
    "title": "Exam 1 review",
    "section": "Aside: |",
    "text": "Aside: |\n\nloan50 |&gt;\n  mutate(homeownership_new = if_else(homeownership == \"rent\" | homeownership == \"mortgage\", \"don't own\", homeownership)) |&gt;\n  distinct(homeownership, homeownership_new)\n\n# A tibble: 3 × 2\n  homeownership homeownership_new\n  &lt;fct&gt;         &lt;chr&gt;            \n1 rent          don't own        \n2 mortgage      don't own        \n3 own           own"
  },
  {
    "objectID": "slides/09-exam-1-review.html#aside-2",
    "href": "slides/09-exam-1-review.html#aside-2",
    "title": "Exam 1 review",
    "section": "Aside: |",
    "text": "Aside: |\n\nloan50 |&gt;\n  mutate(homeownership_new = if_else(homeownership %in% c(\"rent\", \"mortgage\"), \"don't own\", homeownership)) |&gt;\n  distinct(homeownership, homeownership_new)\n\n# A tibble: 3 × 2\n  homeownership homeownership_new\n  &lt;fct&gt;         &lt;chr&gt;            \n1 rent          don't own        \n2 mortgage      don't own        \n3 own           own"
  },
  {
    "objectID": "slides/07-joining-data.html#while-you-wait-for-class-to-begin",
    "href": "slides/07-joining-data.html#while-you-wait-for-class-to-begin",
    "title": "Joining data",
    "section": "While you wait for class to begin…",
    "text": "While you wait for class to begin…\n\nGo to your ae repo, click Pull to get today’s application exercise to get ready for later.\nQuestions from the prepare materials?"
  },
  {
    "objectID": "slides/07-joining-data.html#announcements",
    "href": "slides/07-joining-data.html#announcements",
    "title": "Joining data",
    "section": "Announcements",
    "text": "Announcements\n\nExam 1 in class next week on Thursday – cheat sheet (1 page, both sides, hand-written or typed, must be prepared by you)\nExam 1 take home starts after class on Thursday, due at 8 am on Monday (open resources, internet, etc., closed to other humans)\nNext week in lab: Exam 1 review – come with questions!\nNo new lab assigned next week during exam"
  },
  {
    "objectID": "slides/07-joining-data.html#study-tips-for-the-exam",
    "href": "slides/07-joining-data.html#study-tips-for-the-exam",
    "title": "Joining data",
    "section": "Study tips for the exam",
    "text": "Study tips for the exam\n\nGo over lecture materials and application exercises\nReview labs and feedback you’ve received so far\nDo the exercises at the end of readings from both books\nDo the exam review over (to be posted on Friday)\nGo to lab on Monday with questions"
  },
  {
    "objectID": "slides/07-joining-data.html#questions-from-last-time",
    "href": "slides/07-joining-data.html#questions-from-last-time",
    "title": "Joining data",
    "section": "Questions from last time",
    "text": "Questions from last time\nIs there a limit to a tibble size?\nNo, a tibble (i.e., a data frame) can be any number of rows or columns. However when you print it, it will only print the first 10 rows and the columns that fit across the screen, document, etc.\nIf you want to see more rows and columns, you can\n\nopen it in the data viewer with view(df)\nexplicitly print more rows with, e.g., df |&gt; print(n = 25)\nexplicitly select() or relocate() columns"
  },
  {
    "objectID": "slides/07-joining-data.html#options-for-a-tibble",
    "href": "slides/07-joining-data.html#options-for-a-tibble",
    "title": "Joining data",
    "section": "Options for a tibble",
    "text": "Options for a tibble\n\nDefaultprint()select()relocate()\n\n\n\nlibrary(tidyverse)\nmidwest\n\n# A tibble: 437 × 28\n     PID county   state  area poptotal popdensity popwhite popblack popamerindian popasian\n   &lt;int&gt; &lt;chr&gt;    &lt;chr&gt; &lt;dbl&gt;    &lt;int&gt;      &lt;dbl&gt;    &lt;int&gt;    &lt;int&gt;         &lt;int&gt;    &lt;int&gt;\n 1   561 ADAMS    IL    0.052    66090      1271.    63917     1702            98      249\n 2   562 ALEXAND… IL    0.014    10626       759      7054     3496            19       48\n 3   563 BOND     IL    0.022    14991       681.    14477      429            35       16\n 4   564 BOONE    IL    0.017    30806      1812.    29344      127            46      150\n 5   565 BROWN    IL    0.018     5836       324.     5264      547            14        5\n 6   566 BUREAU   IL    0.05     35688       714.    35157       50            65      195\n 7   567 CALHOUN  IL    0.017     5322       313.     5298        1             8       15\n 8   568 CARROLL  IL    0.027    16805       622.    16519      111            30       61\n 9   569 CASS     IL    0.024    13437       560.    13384       16             8       23\n10   570 CHAMPAI… IL    0.058   173025      2983.   146506    16559           331     8033\n# ℹ 427 more rows\n# ℹ 18 more variables: popother &lt;int&gt;, percwhite &lt;dbl&gt;, percblack &lt;dbl&gt;,\n#   percamerindan &lt;dbl&gt;, percasian &lt;dbl&gt;, percother &lt;dbl&gt;, popadults &lt;int&gt;,\n#   perchsd &lt;dbl&gt;, percollege &lt;dbl&gt;, percprof &lt;dbl&gt;, poppovertyknown &lt;int&gt;,\n#   percpovertyknown &lt;dbl&gt;, percbelowpoverty &lt;dbl&gt;, percchildbelowpovert &lt;dbl&gt;,\n#   percadultpoverty &lt;dbl&gt;, percelderlypoverty &lt;dbl&gt;, inmetro &lt;int&gt;, category &lt;chr&gt;\n\n\n\n\n\nmidwest |&gt;\n  print(n = 13)\n\n# A tibble: 437 × 28\n     PID county   state  area poptotal popdensity popwhite popblack popamerindian popasian\n   &lt;int&gt; &lt;chr&gt;    &lt;chr&gt; &lt;dbl&gt;    &lt;int&gt;      &lt;dbl&gt;    &lt;int&gt;    &lt;int&gt;         &lt;int&gt;    &lt;int&gt;\n 1   561 ADAMS    IL    0.052    66090      1271.    63917     1702            98      249\n 2   562 ALEXAND… IL    0.014    10626       759      7054     3496            19       48\n 3   563 BOND     IL    0.022    14991       681.    14477      429            35       16\n 4   564 BOONE    IL    0.017    30806      1812.    29344      127            46      150\n 5   565 BROWN    IL    0.018     5836       324.     5264      547            14        5\n 6   566 BUREAU   IL    0.05     35688       714.    35157       50            65      195\n 7   567 CALHOUN  IL    0.017     5322       313.     5298        1             8       15\n 8   568 CARROLL  IL    0.027    16805       622.    16519      111            30       61\n 9   569 CASS     IL    0.024    13437       560.    13384       16             8       23\n10   570 CHAMPAI… IL    0.058   173025      2983.   146506    16559           331     8033\n11   571 CHRISTI… IL    0.042    34418       819.    34176       82            51       89\n12   572 CLARK    IL    0.03     15921       531.    15842       10            26       36\n13   573 CLAY     IL    0.028    14460       516.    14403        4            17       29\n# ℹ 424 more rows\n# ℹ 18 more variables: popother &lt;int&gt;, percwhite &lt;dbl&gt;, percblack &lt;dbl&gt;,\n#   percamerindan &lt;dbl&gt;, percasian &lt;dbl&gt;, percother &lt;dbl&gt;, popadults &lt;int&gt;,\n#   perchsd &lt;dbl&gt;, percollege &lt;dbl&gt;, percprof &lt;dbl&gt;, poppovertyknown &lt;int&gt;,\n#   percpovertyknown &lt;dbl&gt;, percbelowpoverty &lt;dbl&gt;, percchildbelowpovert &lt;dbl&gt;,\n#   percadultpoverty &lt;dbl&gt;, percelderlypoverty &lt;dbl&gt;, inmetro &lt;int&gt;, category &lt;chr&gt;\n\n\n\n\n\nmidwest |&gt;\n  select(county, state, percbelowpoverty, percollege)\n\n# A tibble: 437 × 4\n   county    state percbelowpoverty percollege\n   &lt;chr&gt;     &lt;chr&gt;            &lt;dbl&gt;      &lt;dbl&gt;\n 1 ADAMS     IL               13.2        19.6\n 2 ALEXANDER IL               32.2        11.2\n 3 BOND      IL               12.1        17.0\n 4 BOONE     IL                7.21       17.3\n 5 BROWN     IL               13.5        14.5\n 6 BUREAU    IL               10.4        18.9\n 7 CALHOUN   IL               15.1        11.9\n 8 CARROLL   IL               11.7        16.2\n 9 CASS      IL               13.9        14.1\n10 CHAMPAIGN IL               15.6        41.3\n# ℹ 427 more rows\n\n\n\n\n\nmidwest |&gt;\n  relocate(county, state, percbelowpoverty, percollege)\n\n# A tibble: 437 × 28\n   county    state percbelowpoverty percollege   PID  area poptotal popdensity popwhite\n   &lt;chr&gt;     &lt;chr&gt;            &lt;dbl&gt;      &lt;dbl&gt; &lt;int&gt; &lt;dbl&gt;    &lt;int&gt;      &lt;dbl&gt;    &lt;int&gt;\n 1 ADAMS     IL               13.2        19.6   561 0.052    66090      1271.    63917\n 2 ALEXANDER IL               32.2        11.2   562 0.014    10626       759      7054\n 3 BOND      IL               12.1        17.0   563 0.022    14991       681.    14477\n 4 BOONE     IL                7.21       17.3   564 0.017    30806      1812.    29344\n 5 BROWN     IL               13.5        14.5   565 0.018     5836       324.     5264\n 6 BUREAU    IL               10.4        18.9   566 0.05     35688       714.    35157\n 7 CALHOUN   IL               15.1        11.9   567 0.017     5322       313.     5298\n 8 CARROLL   IL               11.7        16.2   568 0.027    16805       622.    16519\n 9 CASS      IL               13.9        14.1   569 0.024    13437       560.    13384\n10 CHAMPAIGN IL               15.6        41.3   570 0.058   173025      2983.   146506\n# ℹ 427 more rows\n# ℹ 19 more variables: popblack &lt;int&gt;, popamerindian &lt;int&gt;, popasian &lt;int&gt;,\n#   popother &lt;int&gt;, percwhite &lt;dbl&gt;, percblack &lt;dbl&gt;, percamerindan &lt;dbl&gt;,\n#   percasian &lt;dbl&gt;, percother &lt;dbl&gt;, popadults &lt;int&gt;, perchsd &lt;dbl&gt;, percprof &lt;dbl&gt;,\n#   poppovertyknown &lt;int&gt;, percpovertyknown &lt;dbl&gt;, percchildbelowpovert &lt;dbl&gt;,\n#   percadultpoverty &lt;dbl&gt;, percelderlypoverty &lt;dbl&gt;, inmetro &lt;int&gt;, category &lt;chr&gt;"
  },
  {
    "objectID": "slides/07-joining-data.html#from-last-time-pivoting",
    "href": "slides/07-joining-data.html#from-last-time-pivoting",
    "title": "Joining data",
    "section": "From last time: pivoting",
    "text": "From last time: pivoting\n\n\nData sets can’t be labeled as wide or long but they can be made wider or longer for a certain analysis that requires a certain format\nWhen pivoting longer, variable names that turn into values are characters by default. If you need them to be in another format, you need to explicitly make that transformation, which you can do so within the pivot_longer() function.\nYou can tweak a plot forever, but at some point the tweaks are likely not very productive. However, you should always be critical of defaults (however pretty they might be) and see if you can improve the plot to better portray your data / results / what you want to communicate."
  },
  {
    "objectID": "slides/07-joining-data.html#why-join",
    "href": "slides/07-joining-data.html#why-join",
    "title": "Joining data",
    "section": "Why join?",
    "text": "Why join?\nSuppose we want to answer questions like:\n\nIs there a relationship between\n- number of QS courses taken\n- having scored a 4 or 5 on the AP stats exam\n- motivation for taking course\n- …\nand performance in this course?”\n\n\nEach of these would require joining class performance data with an outside data source so we can have all relevant information (columns) in a single data frame."
  },
  {
    "objectID": "slides/07-joining-data.html#setup",
    "href": "slides/07-joining-data.html#setup",
    "title": "Joining data",
    "section": "Setup",
    "text": "Setup\nFor the next few slides…\n\n\n\nx &lt;- tibble(\n  id = c(1, 2, 3),\n  value_x = c(\"x1\", \"x2\", \"x3\")\n  )\n\nx\n\n# A tibble: 3 × 2\n     id value_x\n  &lt;dbl&gt; &lt;chr&gt;  \n1     1 x1     \n2     2 x2     \n3     3 x3     \n\n\n\n\ny &lt;- tibble(\n  id = c(1, 2, 4),\n  value_y = c(\"y1\", \"y2\", \"y4\")\n  )\n\ny\n\n# A tibble: 3 × 2\n     id value_y\n  &lt;dbl&gt; &lt;chr&gt;  \n1     1 y1     \n2     2 y2     \n3     4 y4"
  },
  {
    "objectID": "slides/07-joining-data.html#left_join",
    "href": "slides/07-joining-data.html#left_join",
    "title": "Joining data",
    "section": "left_join()",
    "text": "left_join()\n\n\n\n\n\nleft_join(x, y)\n\nJoining with `by = join_by(id)`\n\n\n# A tibble: 3 × 3\n     id value_x value_y\n  &lt;dbl&gt; &lt;chr&gt;   &lt;chr&gt;  \n1     1 x1      y1     \n2     2 x2      y2     \n3     3 x3      &lt;NA&gt;"
  },
  {
    "objectID": "slides/07-joining-data.html#right_join",
    "href": "slides/07-joining-data.html#right_join",
    "title": "Joining data",
    "section": "right_join()",
    "text": "right_join()\n\n\n\n\n\nright_join(x, y)\n\nJoining with `by = join_by(id)`\n\n\n# A tibble: 3 × 3\n     id value_x value_y\n  &lt;dbl&gt; &lt;chr&gt;   &lt;chr&gt;  \n1     1 x1      y1     \n2     2 x2      y2     \n3     4 &lt;NA&gt;    y4"
  },
  {
    "objectID": "slides/07-joining-data.html#full_join",
    "href": "slides/07-joining-data.html#full_join",
    "title": "Joining data",
    "section": "full_join()",
    "text": "full_join()\n\n\n\n\n\nfull_join(x, y)\n\nJoining with `by = join_by(id)`\n\n\n# A tibble: 4 × 3\n     id value_x value_y\n  &lt;dbl&gt; &lt;chr&gt;   &lt;chr&gt;  \n1     1 x1      y1     \n2     2 x2      y2     \n3     3 x3      &lt;NA&gt;   \n4     4 &lt;NA&gt;    y4"
  },
  {
    "objectID": "slides/07-joining-data.html#inner_join",
    "href": "slides/07-joining-data.html#inner_join",
    "title": "Joining data",
    "section": "inner_join()",
    "text": "inner_join()\n\n\n\n\n\ninner_join(x, y)\n\nJoining with `by = join_by(id)`\n\n\n# A tibble: 2 × 3\n     id value_x value_y\n  &lt;dbl&gt; &lt;chr&gt;   &lt;chr&gt;  \n1     1 x1      y1     \n2     2 x2      y2"
  },
  {
    "objectID": "slides/07-joining-data.html#semi_join",
    "href": "slides/07-joining-data.html#semi_join",
    "title": "Joining data",
    "section": "semi_join()",
    "text": "semi_join()\n\n\n\n\n\nsemi_join(x, y)\n\nJoining with `by = join_by(id)`\n\n\n# A tibble: 2 × 2\n     id value_x\n  &lt;dbl&gt; &lt;chr&gt;  \n1     1 x1     \n2     2 x2"
  },
  {
    "objectID": "slides/07-joining-data.html#anti_join",
    "href": "slides/07-joining-data.html#anti_join",
    "title": "Joining data",
    "section": "anti_join()",
    "text": "anti_join()\n\n\n\n\n\nanti_join(x, y)\n\nJoining with `by = join_by(id)`\n\n\n# A tibble: 1 × 2\n     id value_x\n  &lt;dbl&gt; &lt;chr&gt;  \n1     3 x3"
  },
  {
    "objectID": "slides/07-joining-data.html#nycflights13-airport-capacity",
    "href": "slides/07-joining-data.html#nycflights13-airport-capacity",
    "title": "Joining data",
    "section": "nycflights13 & airport capacity",
    "text": "nycflights13 & airport capacity\nYou’ve previously seen the flights data available in the nycflights13 package which details all flights from one of the 3 major NYC airports in 2013.\nToday we would like to answer a specific question:\n\nWhat was the passenger capacity (i.e., maximum number of passengers) that could have flown out of the three airports in 2013?\n\n\nTo answer this we will need to know how many passenger seats each plane had available - each flight record has a tailnum which is a unique identifier for the plane, this can be linked to the planes data set which has the number of available seats for each plane."
  },
  {
    "objectID": "slides/07-joining-data.html#attempt-1",
    "href": "slides/07-joining-data.html#attempt-1",
    "title": "Joining data",
    "section": "Attempt 1",
    "text": "Attempt 1\n\nlibrary(nycflights13)\n\nleft_join(flights, planes) |&gt;\n  group_by(origin) |&gt;\n  summarize(capacity = sum(seats))\n\n\n\nJoining with `by = join_by(year, tailnum)`\n\n\n# A tibble: 3 × 2\n  origin capacity\n  &lt;chr&gt;     &lt;int&gt;\n1 EWR          NA\n2 JFK          NA\n3 LGA          NA"
  },
  {
    "objectID": "slides/07-joining-data.html#attempt-2",
    "href": "slides/07-joining-data.html#attempt-2",
    "title": "Joining data",
    "section": "Attempt 2",
    "text": "Attempt 2\n\nleft_join(flights, planes) |&gt;\n  group_by(origin) |&gt;\n  summarize(capacity = sum(seats, na.rm = TRUE))\n\n\n\nJoining with `by = join_by(year, tailnum)`\n\n\n# A tibble: 3 × 2\n  origin capacity\n  &lt;chr&gt;     &lt;int&gt;\n1 EWR      345268\n2 JFK      179412\n3 LGA       89686"
  },
  {
    "objectID": "slides/07-joining-data.html#attempt-3",
    "href": "slides/07-joining-data.html#attempt-3",
    "title": "Joining data",
    "section": "Attempt 3",
    "text": "Attempt 3\n\nleft_join(\n  flights, planes,\n  by = c(\"tailnum\" = \"tailnum\")\n) |&gt;\n  group_by(origin) |&gt;\n  summarize(capacity = sum(seats, na.rm = TRUE))\n\n\n\n# A tibble: 3 × 2\n  origin capacity\n  &lt;chr&gt;     &lt;int&gt;\n1 EWR    14454251\n2 JFK    13874081\n3 LGA    10522985"
  },
  {
    "objectID": "slides/07-joining-data.html#goal",
    "href": "slides/07-joining-data.html#goal",
    "title": "Joining data",
    "section": "Goal",
    "text": "Goal\nMake a bar plot of total populations of continents, where the input data are:\n\nCountries and populations\nCountries and continents"
  },
  {
    "objectID": "slides/07-joining-data.html#ae-06-population-joining",
    "href": "slides/07-joining-data.html#ae-06-population-joining",
    "title": "Joining data",
    "section": "ae-06-population-joining",
    "text": "ae-06-population-joining\n\n\nGo to the project navigator in RStudio (top right corner of your RStudio window) and open the project called ae.\nIf there are any uncommitted files, commit them, and then click Pull.\nOpen the file called ae-06-population-joining.qmd and render it.\n\n\n\n\n\n\n🔗 sta199-s24.github.io  ·  ❓ Ask on Ed"
  },
  {
    "objectID": "slides/19-logistic-regression.html#while-you-wait-for-class-to-begin",
    "href": "slides/19-logistic-regression.html#while-you-wait-for-class-to-begin",
    "title": "Logistic regression",
    "section": "While you wait for class to begin…",
    "text": "While you wait for class to begin…\n\nAny questions from prepare materials?"
  },
  {
    "objectID": "slides/19-logistic-regression.html#duke-community-standard",
    "href": "slides/19-logistic-regression.html#duke-community-standard",
    "title": "Logistic regression",
    "section": "Duke Community Standard",
    "text": "Duke Community Standard\nDuke University is a community dedicated to scholarship, leadership, and service and to the principles of honesty, fairness, respect, and accountability. Citizens of this community commit to reflect upon and uphold these principles in all academic and nonacademic endeavors, and to protect and promote a culture of integrity.\nTo uphold the Duke Community Standard:\n\n I will not lie, cheat, or steal in my academic endeavors;\n I will conduct myself honorably in all my endeavors; and\n I will act if the Standard is compromised.\n\nhttps://trinity.duke.edu/undergraduate/academic-policies/community-standard-student-conduct"
  },
  {
    "objectID": "slides/19-logistic-regression.html#duke-community-standard-1",
    "href": "slides/19-logistic-regression.html#duke-community-standard-1",
    "title": "Logistic regression",
    "section": "Duke Community Standard",
    "text": "Duke Community Standard\n“Duke University has high expectations for students’ scholarship and conduct. In accepting admission, students indicate their willingness to subscribe to and be governed by the rules and regulations of the university, which flow from the Duke Community Standard. These policies reflect the Duke Community Standard’s fundamental values—honesty, fairness, respect, and accountability. Undergraduates acknowledge the right of the university to take disciplinary action, including suspension or expulsion, for failure to abide by the regulations or for other conduct adjudged unsatisfactory or detrimental to the university community.  Students and groups may be held accountable for any violation of university policy that may or may not be included in this guide, whether on or off campus.”\nhttps://trinity.duke.edu/undergraduate/academic-policies/community-standard-student-conduct"
  },
  {
    "objectID": "slides/19-logistic-regression.html#basic-guidelines",
    "href": "slides/19-logistic-regression.html#basic-guidelines",
    "title": "Logistic regression",
    "section": "Basic guidelines",
    "text": "Basic guidelines\n\nBe a Good Human\n\n\n\nUse electronic devices for things related to coursework only and in a way that does not distract your classmates\n\nNo videos on cell phones\nNo phone calls!\n\nTake off your headphones\n\nIf you need an accommodation for wearing headphones in class, reach out to SDAO to get this offcially approved\n\nKeep chatter to “your turn” portions or limited to clarification questions\nIf you have a guest in class, make sure they are aware of the DCS and take responsibility for their behaviour"
  },
  {
    "objectID": "slides/19-logistic-regression.html#announcements",
    "href": "slides/19-logistic-regression.html#announcements",
    "title": "Logistic regression",
    "section": "Announcements",
    "text": "Announcements\n\nPeer eval 2 is due Sunday night, results will be published on Monday\nLab 6 is due on Monday:\n\nRender your document. If your code is running off the page so we can’t see your entire code, we will not evaluate any of it. The question will automatically receive a 0. This is something you can and should verify before you turn in your work.\nIf you’re using functions that are not introduced in the course materials, you must cite your sources. Failure to do so is a violation of the Duke Community Standard and will be treated as such.\n\nLab 7 will cover material from this week and next week. Start to working through prepare materials between now and Monday."
  },
  {
    "objectID": "slides/19-logistic-regression.html#recap-ae-13-modeling-loans",
    "href": "slides/19-logistic-regression.html#recap-ae-13-modeling-loans",
    "title": "Logistic regression",
    "section": "Recap: ae-13-modeling-loans",
    "text": "Recap: ae-13-modeling-loans\n\nWhat is the practical difference between a model with parallel and non-parallel lines?\nWhat is the definition of R-squared?\nWhy do we choose models based on adjusted R-squared and not R-squared?"
  },
  {
    "objectID": "slides/19-logistic-regression.html#predict-interest-rate",
    "href": "slides/19-logistic-regression.html#predict-interest-rate",
    "title": "Logistic regression",
    "section": "Predict interest rate…",
    "text": "Predict interest rate…\nfrom credit utilization and homeownership\n\nrate_util_home_fit &lt;- linear_reg() |&gt;\n  fit(interest_rate ~ credit_util + homeownership, data = loans)\n\n\ntidy(rate_util_home_fit)\n\n# A tibble: 4 × 5\n  term                  estimate std.error statistic   p.value\n  &lt;chr&gt;                    &lt;dbl&gt;     &lt;dbl&gt;     &lt;dbl&gt;     &lt;dbl&gt;\n1 (Intercept)              9.93      0.140    70.8   0        \n2 credit_util              5.34      0.207    25.7   2.20e-141\n3 homeownershipMortgage    0.696     0.121     5.76  8.71e-  9\n4 homeownershipOwn         0.128     0.155     0.827 4.08e-  1"
  },
  {
    "objectID": "slides/19-logistic-regression.html#intercept",
    "href": "slides/19-logistic-regression.html#intercept",
    "title": "Logistic regression",
    "section": "Intercept",
    "text": "Intercept\n\n\n# A tibble: 4 × 5\n  term                  estimate std.error statistic   p.value\n  &lt;chr&gt;                    &lt;dbl&gt;     &lt;dbl&gt;     &lt;dbl&gt;     &lt;dbl&gt;\n1 (Intercept)              9.93      0.140    70.8   0        \n2 credit_util              5.34      0.207    25.7   2.20e-141\n3 homeownershipMortgage    0.696     0.121     5.76  8.71e-  9\n4 homeownershipOwn         0.128     0.155     0.827 4.08e-  1\n\n\n\nIntercept: Loan applicants who rent and have 0 credit utilization are predicted to receive an interest rate of 9.93%, on average."
  },
  {
    "objectID": "slides/19-logistic-regression.html#slopes",
    "href": "slides/19-logistic-regression.html#slopes",
    "title": "Logistic regression",
    "section": "Slopes",
    "text": "Slopes\n\n\n# A tibble: 4 × 5\n  term                  estimate std.error statistic   p.value\n  &lt;chr&gt;                    &lt;dbl&gt;     &lt;dbl&gt;     &lt;dbl&gt;     &lt;dbl&gt;\n1 (Intercept)              9.93      0.140    70.8   0        \n2 credit_util              5.34      0.207    25.7   2.20e-141\n3 homeownershipMortgage    0.696     0.121     5.76  8.71e-  9\n4 homeownershipOwn         0.128     0.155     0.827 4.08e-  1\n\n\n\n\nAll else held constant, for each additional percent credit utilization is higher, interest rate is predicted to be higher, on average, by 0.0534%.\nAll else held constant, the model predicts that loan applicants who have a mortgage for their home receive 0.696% higher interest rate than those who rent their home, on average.\nAll else held constant, the model predicts that loan applicants who own their home receive 0.128% higher interest rate than those who rent their home, on average."
  },
  {
    "objectID": "slides/19-logistic-regression.html#predict-loginterest-rate",
    "href": "slides/19-logistic-regression.html#predict-loginterest-rate",
    "title": "Logistic regression",
    "section": "Predict log(interest rate)",
    "text": "Predict log(interest rate)\n\nrate_log_cc_fit &lt;- linear_reg() |&gt;\n  fit(log(interest_rate) ~ credit_checks, data = loans)\n\ntidy(rate_log_cc_fit)\n\n# A tibble: 2 × 5\n  term          estimate std.error statistic  p.value\n  &lt;chr&gt;            &lt;dbl&gt;     &lt;dbl&gt;     &lt;dbl&gt;    &lt;dbl&gt;\n1 (Intercept)     2.39     0.00512     468.  0       \n2 credit_checks   0.0236   0.00166      14.2 2.39e-45"
  },
  {
    "objectID": "slides/19-logistic-regression.html#model",
    "href": "slides/19-logistic-regression.html#model",
    "title": "Logistic regression",
    "section": "Model",
    "text": "Model\n\n\n# A tibble: 2 × 5\n  term          estimate std.error statistic  p.value\n  &lt;chr&gt;            &lt;dbl&gt;     &lt;dbl&gt;     &lt;dbl&gt;    &lt;dbl&gt;\n1 (Intercept)     2.39     0.00512     468.  0       \n2 credit_checks   0.0236   0.00166      14.2 2.39e-45\n\n\n\n\\[\n\\widehat{log(interest~rate)} = 2.39 + 0.0236 \\times credit~checks\n\\]"
  },
  {
    "objectID": "slides/19-logistic-regression.html#slope",
    "href": "slides/19-logistic-regression.html#slope",
    "title": "Logistic regression",
    "section": "Slope",
    "text": "Slope\n\n\n# A tibble: 2 × 5\n  term          estimate std.error statistic  p.value\n  &lt;chr&gt;            &lt;dbl&gt;     &lt;dbl&gt;     &lt;dbl&gt;    &lt;dbl&gt;\n1 (Intercept)     2.39     0.00512     468.  0       \n2 credit_checks   0.0236   0.00166      14.2 2.39e-45\n\n\n\nFor each additional credit check, log of interest rate is predicted to be higher, on average, by 0.0236%."
  },
  {
    "objectID": "slides/19-logistic-regression.html#slope-1",
    "href": "slides/19-logistic-regression.html#slope-1",
    "title": "Logistic regression",
    "section": "Slope",
    "text": "Slope\n\\[\nlog(interest~rate_{x+1}) - log(interest~rate_{x}) =  0.0236\n\\]\n\n\\[\nlog(\\frac{interest~rate_{x+1}}{interest~rate_{x}}) = 0.0236\n\\]\n\n\n\\[\ne^{log(\\frac{interest~rate_{x+1}}{interest~rate_{x}})} = e^{0.0236}\n\\]\n\n\n\\[\n\\frac{interest~rate_{x+1}}{interest~rate_{x}} = 1.024\n\\]\n\n\nFor each additional credit check, interest rate is predicted to be higher, on average, by a factor of 1.024."
  },
  {
    "objectID": "slides/19-logistic-regression.html#what-is-logistic-regression",
    "href": "slides/19-logistic-regression.html#what-is-logistic-regression",
    "title": "Logistic regression",
    "section": "What is logistic regression?",
    "text": "What is logistic regression?\n\n\n\nSimilar to linear regression…. but\nModeling tool when our response is categorical"
  },
  {
    "objectID": "slides/19-logistic-regression.html#modelling-binary-outcomes",
    "href": "slides/19-logistic-regression.html#modelling-binary-outcomes",
    "title": "Logistic regression",
    "section": "Modelling binary outcomes",
    "text": "Modelling binary outcomes\n\nVariables with binary outcomes follow the Bernouilli distribution:\n\n\\(y_i \\sim Bern(p)\\)\n\\(p\\): Probability of success\n\\(1-p\\): Probability of failure\n\nWe can’t model \\(y\\) directly, so instead we model \\(p\\)"
  },
  {
    "objectID": "slides/19-logistic-regression.html#linear-model",
    "href": "slides/19-logistic-regression.html#linear-model",
    "title": "Logistic regression",
    "section": "Linear model",
    "text": "Linear model\n\\[\np_i = \\beta_o + \\beta_1 \\times X_1 + \\cdots + \\epsilon\n\\]\n\nBut remember that \\(p\\) must be between 0 and 1\nWe need a link function that transforms the linear model to have an appropriate range"
  },
  {
    "objectID": "slides/19-logistic-regression.html#logit-link-function",
    "href": "slides/19-logistic-regression.html#logit-link-function",
    "title": "Logistic regression",
    "section": "Logit link function",
    "text": "Logit link function\nThe logit function take values between 0 and 1 (probabilities) and maps them to values in the range negative infinity to positive infinity:\n\\[\nlogit(p) = log \\bigg( \\frac{p}{1 - p} \\bigg)\n\\]"
  },
  {
    "objectID": "slides/19-logistic-regression.html#this-isnt-exactly-what-we-need-though..",
    "href": "slides/19-logistic-regression.html#this-isnt-exactly-what-we-need-though..",
    "title": "Logistic regression",
    "section": "This isn’t exactly what we need though…..",
    "text": "This isn’t exactly what we need though…..\n\nRecall, the goal is to take values between -\\(\\infty\\) and \\(\\infty\\) and map them to probabilities.\nWe need the opposite of the link function… or the inverse\nTaking the inverse of the logit function will map arbitrary real values back to the range [0, 1]"
  },
  {
    "objectID": "slides/19-logistic-regression.html#generalized-linear-model",
    "href": "slides/19-logistic-regression.html#generalized-linear-model",
    "title": "Logistic regression",
    "section": "Generalized linear model",
    "text": "Generalized linear model\n\nWe model the logit (log-odds) of \\(p\\) :\n\n\\[\nlogit(p) = log \\bigg( \\frac{p}{1 - p} \\bigg) = \\beta_o + \\beta_1 \\times X1_i + \\cdots + \\epsilon\n\\]\n\nThen take the inverse to obtain the predicted \\(p\\):\n\n\\[\np_i = \\frac{e^{\\beta_o + \\beta_1 \\times X1_i + \\cdots + \\epsilon}}{1 + e^{\\beta_o + \\beta_1 \\times X1_i + \\cdots + \\epsilon}}\n\\]"
  },
  {
    "objectID": "slides/19-logistic-regression.html#a-logistic-model-visualized",
    "href": "slides/19-logistic-regression.html#a-logistic-model-visualized",
    "title": "Logistic regression",
    "section": "A logistic model visualized",
    "text": "A logistic model visualized"
  },
  {
    "objectID": "slides/19-logistic-regression.html#takeaways",
    "href": "slides/19-logistic-regression.html#takeaways",
    "title": "Logistic regression",
    "section": "Takeaways",
    "text": "Takeaways\n\nGeneralized linear models allow us to fit models to predict non-continuous outcomes\nPredicting binary outcomes requires modeling the log-odds of success, where p = probability of success\n\n\n\n\n\n🔗 sta199-s24.github.io  ·  ❓ Ask on Ed"
  },
  {
    "objectID": "slides/16-linear-model-multiple-predictors-I.html#announcements",
    "href": "slides/16-linear-model-multiple-predictors-I.html#announcements",
    "title": "Linear regression with a multiple predictors I",
    "section": "Announcements",
    "text": "Announcements\n\nProject milestone 2 - proposals due Mon, Mar 25\nExam 2:\n\nIn class: April 11\nTake home: April 11-15"
  },
  {
    "objectID": "slides/16-linear-model-multiple-predictors-I.html#pace---course",
    "href": "slides/16-linear-model-multiple-predictors-I.html#pace---course",
    "title": "Linear regression with a multiple predictors I",
    "section": "Pace - course",
    "text": "Pace - course"
  },
  {
    "objectID": "slides/16-linear-model-multiple-predictors-I.html#pace---lecture",
    "href": "slides/16-linear-model-multiple-predictors-I.html#pace---lecture",
    "title": "Linear regression with a multiple predictors I",
    "section": "Pace - lecture",
    "text": "Pace - lecture"
  },
  {
    "objectID": "slides/16-linear-model-multiple-predictors-I.html#engagement",
    "href": "slides/16-linear-model-multiple-predictors-I.html#engagement",
    "title": "Linear regression with a multiple predictors I",
    "section": "Engagement",
    "text": "Engagement"
  },
  {
    "objectID": "slides/16-linear-model-multiple-predictors-I.html#resources",
    "href": "slides/16-linear-model-multiple-predictors-I.html#resources",
    "title": "Linear regression with a multiple predictors I",
    "section": "Resources",
    "text": "Resources"
  },
  {
    "objectID": "slides/16-linear-model-multiple-predictors-I.html#learning",
    "href": "slides/16-linear-model-multiple-predictors-I.html#learning",
    "title": "Linear regression with a multiple predictors I",
    "section": "Learning",
    "text": "Learning"
  },
  {
    "objectID": "slides/16-linear-model-multiple-predictors-I.html#class-time",
    "href": "slides/16-linear-model-multiple-predictors-I.html#class-time",
    "title": "Linear regression with a multiple predictors I",
    "section": "Class time",
    "text": "Class time"
  },
  {
    "objectID": "slides/16-linear-model-multiple-predictors-I.html#difficulty",
    "href": "slides/16-linear-model-multiple-predictors-I.html#difficulty",
    "title": "Linear regression with a multiple predictors I",
    "section": "Difficulty",
    "text": "Difficulty"
  },
  {
    "objectID": "slides/16-linear-model-multiple-predictors-I.html#feedback",
    "href": "slides/16-linear-model-multiple-predictors-I.html#feedback",
    "title": "Linear regression with a multiple predictors I",
    "section": "Feedback",
    "text": "Feedback\n\nGenerally very positive feedback about TAs!\nEnjoy interactive lectures, want more time on AEs / live coding\nRubric for assessments / grading\nChallenging topic list"
  },
  {
    "objectID": "slides/16-linear-model-multiple-predictors-I.html#goals",
    "href": "slides/16-linear-model-multiple-predictors-I.html#goals",
    "title": "Linear regression with a multiple predictors I",
    "section": "Goals",
    "text": "Goals\n\nRecap modeling with a single predictor\nFit and interpret models with multiple predictors\nDistinguish between additive and interaction models"
  },
  {
    "objectID": "slides/16-linear-model-multiple-predictors-I.html#application-exercise-ae-12-modeling-penguins-multi",
    "href": "slides/16-linear-model-multiple-predictors-I.html#application-exercise-ae-12-modeling-penguins-multi",
    "title": "Linear regression with a multiple predictors I",
    "section": "Application exercise: ae-12-modeling-penguins-multi",
    "text": "Application exercise: ae-12-modeling-penguins-multi\n\n\nGo back to your project called ae.\nIf there are any uncommitted files, commit them, and push.\nWork on ae-12-modeling-penguins-multi.qmd.\n\n\n\n\n\n\n🔗 sta199-s24.github.io  ·  ❓ Ask on Ed"
  },
  {
    "objectID": "slides/12-chat-gpt.html#while-you-wait-for-class-to-begin",
    "href": "slides/12-chat-gpt.html#while-you-wait-for-class-to-begin",
    "title": "Web scraping wrap-up + Chat GPT",
    "section": "While you wait for class to begin…",
    "text": "While you wait for class to begin…\n\n\nOpen your lab-4 project, save and commit any pending changes, and push them to GitHub\nAny questions from prepare materials?"
  },
  {
    "objectID": "slides/12-chat-gpt.html#announcements",
    "href": "slides/12-chat-gpt.html#announcements",
    "title": "Web scraping wrap-up + Chat GPT",
    "section": "Announcements",
    "text": "Announcements\n\nFill out TEAMMATES survey to provide feedback to your teammates (and to let us know how things are going)\nFill out the (optional) midterm course evaluation\nA note on AE scores – they will continue to be updated!\nYet another survey: The Campus Culture Survey – UG participation is very low, help lift it up!"
  },
  {
    "objectID": "slides/12-chat-gpt.html#lab-4-update",
    "href": "slides/12-chat-gpt.html#lab-4-update",
    "title": "Web scraping wrap-up + Chat GPT",
    "section": "Lab 4 update",
    "text": "Lab 4 update\nPull changes, see that Question 1 in lab-4.qmd is updated with the following code chunk:\n```{r}\n#| file: lab-4-clubs-scrape.R\n#| eval: false\n```\nRender lab-4.qmd and commit and push your changes."
  },
  {
    "objectID": "slides/12-chat-gpt.html#goal",
    "href": "slides/12-chat-gpt.html#goal",
    "title": "Web scraping wrap-up + Chat GPT",
    "section": "Goal",
    "text": "Goal\n\n\n\nScrape data and organize it in a tidy format in R\nPerform light text parsing to clean data\nSummarize and visualize the data"
  },
  {
    "objectID": "slides/12-chat-gpt.html#ae-09",
    "href": "slides/12-chat-gpt.html#ae-09",
    "title": "Web scraping wrap-up + Chat GPT",
    "section": "ae-09",
    "text": "ae-09\n\n\nGo to the project navigator in RStudio (top right corner of your RStudio window) and open the project called ae.\nIf there are any uncommitted files, commit them, and then click Pull.\nOpen the file called chronicle-scrape.R and follow along."
  },
  {
    "objectID": "slides/12-chat-gpt.html#recap",
    "href": "slides/12-chat-gpt.html#recap",
    "title": "Web scraping wrap-up + Chat GPT",
    "section": "Recap",
    "text": "Recap\n\nUse the SelectorGadget identify tags for elements you want to grab\nUse rvest to first read the whole page (into R) and then parse the object you’ve read in to the elements you’re interested in\nPut the components together in a data frame (a tibble) and analyze it like you analyze any other data"
  },
  {
    "objectID": "slides/12-chat-gpt.html#a-new-r-workflow",
    "href": "slides/12-chat-gpt.html#a-new-r-workflow",
    "title": "Web scraping wrap-up + Chat GPT",
    "section": "A new R workflow",
    "text": "A new R workflow\n\nWhen working in a Quarto document, your analysis is re-run each time you knit\nIf web scraping in a Quarto document, you’d be re-scraping the data each time you knit, which is undesirable (and not nice)!\nAn alternative workflow:\n\nUse an R script to save your code\nSaving interim data scraped using the code in the script as CSV or RDS files\nUse the saved data in your analysis in your Quarto document"
  },
  {
    "objectID": "slides/12-chat-gpt.html#ethics-can-you-vs-should-you",
    "href": "slides/12-chat-gpt.html#ethics-can-you-vs-should-you",
    "title": "Web scraping wrap-up + Chat GPT",
    "section": "Ethics: “Can you?” vs “Should you?”",
    "text": "Ethics: “Can you?” vs “Should you?”\n\n\n\n\n\n\n\nSource: Brian Resnick, Researchers just released profile data on 70,000 OkCupid users without permission, Vox."
  },
  {
    "objectID": "slides/12-chat-gpt.html#can-you-vs-should-you",
    "href": "slides/12-chat-gpt.html#can-you-vs-should-you",
    "title": "Web scraping wrap-up + Chat GPT",
    "section": "“Can you?” vs “Should you?”",
    "text": "“Can you?” vs “Should you?”"
  },
  {
    "objectID": "slides/12-chat-gpt.html#challenges-unreliable-formatting",
    "href": "slides/12-chat-gpt.html#challenges-unreliable-formatting",
    "title": "Web scraping wrap-up + Chat GPT",
    "section": "Challenges: Unreliable formatting",
    "text": "Challenges: Unreliable formatting\n\n\n\n\n\n\n\nalumni.duke.edu/news/notable-alumni"
  },
  {
    "objectID": "slides/12-chat-gpt.html#challenges-data-broken-into-many-pages",
    "href": "slides/12-chat-gpt.html#challenges-data-broken-into-many-pages",
    "title": "Web scraping wrap-up + Chat GPT",
    "section": "Challenges: Data broken into many pages",
    "text": "Challenges: Data broken into many pages"
  },
  {
    "objectID": "slides/12-chat-gpt.html#workflow-screen-scraping-vs.-apis",
    "href": "slides/12-chat-gpt.html#workflow-screen-scraping-vs.-apis",
    "title": "Web scraping wrap-up + Chat GPT",
    "section": "Workflow: Screen scraping vs. APIs",
    "text": "Workflow: Screen scraping vs. APIs\nTwo different scenarios for web scraping:\n\nScreen scraping: extract data from source code of website, with html parser (easy) or regular expression matching (less easy)\nWeb APIs (application programming interface): website offers a set of structured http requests that return JSON or XML files"
  },
  {
    "objectID": "slides/12-chat-gpt.html#workflow-scraping-from-many-pages",
    "href": "slides/12-chat-gpt.html#workflow-scraping-from-many-pages",
    "title": "Web scraping wrap-up + Chat GPT",
    "section": "Workflow: Scraping from many pages",
    "text": "Workflow: Scraping from many pages\n\nSo far you’ve learned to scrape data from a single page\nIf you wanted to scrape data from multiple, similarly structured web pages (e.g., scrape the text and other metadata for each opinion article on The Chronicle):\n\nWrite the code to scrape one page\nTurn it into a function that takes the webpage URL as an argument and returns the scraped, structured data\nMap the function over the list of URLs of interest"
  },
  {
    "objectID": "slides/12-chat-gpt.html#using-chat-gpt",
    "href": "slides/12-chat-gpt.html#using-chat-gpt",
    "title": "Web scraping wrap-up + Chat GPT",
    "section": "Using Chat GPT",
    "text": "Using Chat GPT\n\nHow are you using Chat GPT for this class?"
  },
  {
    "objectID": "slides/12-chat-gpt.html#example-1---from-lab-4",
    "href": "slides/12-chat-gpt.html#example-1---from-lab-4",
    "title": "Web scraping wrap-up + Chat GPT",
    "section": "Example 1 - From Lab 4",
    "text": "Example 1 - From Lab 4\n\nAnother variable that needs some cleaning up is membership_status. Currently it should either be NA or contain some text that says \"Select ... to register for this group\". Recode this variable to say \"Closed\" if the current value is NA or \"Open\" otherwise. Save the resulting dataset with these two new variables as clubs, i.e., overwrite the data frame.\nThen, display the first 10 rows of the dataset, relocate()ing membership_status to the beginning of the dataset to make sure it appears in the output in your rendered document."
  },
  {
    "objectID": "slides/12-chat-gpt.html#sample-data",
    "href": "slides/12-chat-gpt.html#sample-data",
    "title": "Web scraping wrap-up + Chat GPT",
    "section": "Sample data",
    "text": "Sample data\n\ndf &lt;- tribble(\n  ~club, ~membership_status,\n  1, \"Select AI Competition Club's group. Select the group and click on the Join button at the bottom of the page to register for this group\",\n  2, NA,\n  3, \"Select Black Pre-Law Society at Duke's group. Select the group and click on the Join button at the bottom of the page to register for this group\",\n  4, NA,\n  5, NA,\n  6, \"Select Duke Women's Flag Football Team's group. Select the group and click on the Join button at the bottom of the page to register for this group\",\n  7, NA,\n  8, NA,\n  9, NA,\n  10, \"Select Latino Medical Student Association's group. Select the group and click on the Join button at the bottom of the page to register for this group\",\n  11, NA,\n  12, \"Select Native American/Indigenous Student Alliance's group. Select the group and click on the Join button at the bottom of the page to register for this group\",\n  13, NA,\n  14, NA,\n  15, NA,\n  16, NA,\n  17, NA,\n  18, NA,\n  19, \"Select Society of Women Engineers's group. Select the group and click on the Join button at the bottom of the page to register for this group\",\n  20, NA,\n  21, NA\n)\n\ndf"
  },
  {
    "objectID": "slides/12-chat-gpt.html#sample-data-output",
    "href": "slides/12-chat-gpt.html#sample-data-output",
    "title": "Web scraping wrap-up + Chat GPT",
    "section": "Sample data",
    "text": "Sample data\n\n# A tibble: 21 × 2\n    club membership_status                                                                \n   &lt;dbl&gt; &lt;chr&gt;                                                                            \n 1     1 Select AI Competition Club's group. Select the group and click on the Join butto…\n 2     2 &lt;NA&gt;                                                                             \n 3     3 Select Black Pre-Law Society at Duke's group. Select the group and click on the …\n 4     4 &lt;NA&gt;                                                                             \n 5     5 &lt;NA&gt;                                                                             \n 6     6 Select Duke Women's Flag Football Team's group. Select the group and click on th…\n 7     7 &lt;NA&gt;                                                                             \n 8     8 &lt;NA&gt;                                                                             \n 9     9 &lt;NA&gt;                                                                             \n10    10 Select Latino Medical Student Association's group. Select the group and click on…\n# ℹ 11 more rows"
  },
  {
    "objectID": "slides/12-chat-gpt.html#chat-gpt---take-1-prompt",
    "href": "slides/12-chat-gpt.html#chat-gpt---take-1-prompt",
    "title": "Web scraping wrap-up + Chat GPT",
    "section": "Chat GPT - Take 1 prompt",
    "text": "Chat GPT - Take 1 prompt\n\nWhat is wrong with this promopt?\n\n\nAnother variable that needs some cleaning up is membership_status. Currently it should either be NA or contain some text that says \"Select ... to register for this group\". Recode this variable to say \"Closed\" if the current value is NA or \"Open\" otherwise. Save the resulting dataset with these two new variables as clubs, i.e., overwrite the data frame.\nThen, display the first 10 rows of the dataset, relocate()ing membership_status to the beginning of the dataset to make sure it appears in the output in your rendered document."
  },
  {
    "objectID": "slides/12-chat-gpt.html#chat-gpt---take-1-response",
    "href": "slides/12-chat-gpt.html#chat-gpt---take-1-response",
    "title": "Web scraping wrap-up + Chat GPT",
    "section": "Chat GPT - Take 1 response",
    "text": "Chat GPT - Take 1 response\n\nExplain what the following code does.\n\n\nCertainly! To achieve this in R, you can follow these steps:\n# Assuming your dataset is named 'clubs'\n# Recode membership_status variable\nclubs$membership_status &lt;- ifelse(is.na(clubs$membership_status), \"Closed\", \"Open\")\n\n# Relocate membership_status to the beginning of the dataset\nclubs &lt;- clubs[c(\"membership_status\", setdiff(names(clubs), \"membership_status\"))]\n\n# Display the first 10 rows of the dataset\nhead(clubs, 10)\nMake sure to replace ‘clubs’ with the actual name of your dataset. This code will recode the membership_status variable as per your instructions, then move it to the beginning of the dataset and display the first 10 rows."
  },
  {
    "objectID": "slides/12-chat-gpt.html#chat-gpt---take-1-code",
    "href": "slides/12-chat-gpt.html#chat-gpt---take-1-code",
    "title": "Web scraping wrap-up + Chat GPT",
    "section": "Chat GPT - Take 1 code",
    "text": "Chat GPT - Take 1 code\n\n# Assuming your dataset is named 'clubs'\n# Recode membership_status variable\nclubs$membership_status &lt;- ifelse(is.na(clubs$membership_status), \"Closed\", \"Open\")\n\nError in eval(expr, envir, enclos): object 'clubs' not found\n\n# Relocate membership_status to the beginning of the dataset\nclubs &lt;- clubs[c(\"membership_status\", setdiff(names(clubs), \"membership_status\"))]\n\nError in eval(expr, envir, enclos): object 'clubs' not found\n\n# Display the first 10 rows of the dataset\nhead(clubs, 10)\n\nError in eval(expr, envir, enclos): object 'clubs' not found"
  },
  {
    "objectID": "slides/12-chat-gpt.html#chat-gpt---take-1-code-edit",
    "href": "slides/12-chat-gpt.html#chat-gpt---take-1-code-edit",
    "title": "Web scraping wrap-up + Chat GPT",
    "section": "Chat GPT - Take 1 code + edit",
    "text": "Chat GPT - Take 1 code + edit\n\nclubs &lt;- df\n\n# Assuming your dataset is named 'clubs'\n# Recode membership_status variable\nclubs$membership_status &lt;- ifelse(is.na(clubs$membership_status), \"Closed\", \"Open\")\n\n# Relocate membership_status to the beginning of the dataset\nclubs &lt;- clubs[c(\"membership_status\", setdiff(names(clubs), \"membership_status\"))]\n\n# Display the first 10 rows of the dataset\nhead(clubs, 10)\n\n# A tibble: 10 × 2\n   membership_status  club\n   &lt;chr&gt;             &lt;dbl&gt;\n 1 Open                  1\n 2 Closed                2\n 3 Open                  3\n 4 Closed                4\n 5 Closed                5\n 6 Open                  6\n 7 Closed                7\n 8 Closed                8\n 9 Closed                9\n10 Open                 10"
  },
  {
    "objectID": "slides/12-chat-gpt.html#chat-gpt---take-2-prompt",
    "href": "slides/12-chat-gpt.html#chat-gpt---take-2-prompt",
    "title": "Web scraping wrap-up + Chat GPT",
    "section": "Chat GPT - Take 2 prompt",
    "text": "Chat GPT - Take 2 prompt\n\nCan you suggest an alternate solution in R?"
  },
  {
    "objectID": "slides/12-chat-gpt.html#chat-gpt---take-2-response",
    "href": "slides/12-chat-gpt.html#chat-gpt---take-2-response",
    "title": "Web scraping wrap-up + Chat GPT",
    "section": "Chat GPT - Take 2 response",
    "text": "Chat GPT - Take 2 response\n\nExplain what the following code does.\n\n\nCertainly! An alternate solution can use the mutate and relocate functions from the dplyr package. Here’s an alternative code:\nlibrary(dplyr)\n\n# Assuming your dataset is named 'clubs'\nclubs &lt;- clubs %&gt;%\n  mutate(membership_status = ifelse(is.na(membership_status), \"Closed\", \"Open\")) %&gt;%\n  relocate(membership_status, .before = 1)\n\n# Display the first 10 rows of the dataset\nhead(clubs, 10)\nThis code achieves the same result but uses the mutate function from the dplyr package for variable recoding and the relocate function to move the membership_status variable to the beginning of the dataset. Make sure to replace ‘clubs’ with the actual name of your dataset."
  },
  {
    "objectID": "slides/12-chat-gpt.html#chat-gpt---take-2-code",
    "href": "slides/12-chat-gpt.html#chat-gpt---take-2-code",
    "title": "Web scraping wrap-up + Chat GPT",
    "section": "Chat GPT - Take 2 code",
    "text": "Chat GPT - Take 2 code\n\nlibrary(dplyr)\n\n# Assuming your dataset is named 'clubs'\nclubs &lt;- clubs %&gt;%\n  mutate(membership_status = ifelse(is.na(membership_status), \"Closed\", \"Open\")) %&gt;%\n  relocate(membership_status, .before = 1)\n\n# Display the first 10 rows of the dataset\nhead(clubs, 10)\n\n# A tibble: 10 × 2\n   membership_status  club\n   &lt;chr&gt;             &lt;dbl&gt;\n 1 Open                  1\n 2 Closed                2\n 3 Open                  3\n 4 Closed                4\n 5 Closed                5\n 6 Open                  6\n 7 Closed                7\n 8 Closed                8\n 9 Closed                9\n10 Open                 10"
  },
  {
    "objectID": "slides/12-chat-gpt.html#chat-gpt---take-3-prompt",
    "href": "slides/12-chat-gpt.html#chat-gpt---take-3-prompt",
    "title": "Web scraping wrap-up + Chat GPT",
    "section": "Chat GPT - Take 3 prompt",
    "text": "Chat GPT - Take 3 prompt\n\nCan you suggest a tidyverse-based solution?"
  },
  {
    "objectID": "slides/12-chat-gpt.html#chat-gpt---take-3-response",
    "href": "slides/12-chat-gpt.html#chat-gpt---take-3-response",
    "title": "Web scraping wrap-up + Chat GPT",
    "section": "Chat GPT - Take 3 response",
    "text": "Chat GPT - Take 3 response\n\nCertainly! If you want to stick to the tidyverse, you can use the mutate and slice_head functions from the dplyr package along with the forcats package for factor manipulation. Here’s a tidyverse-based solution:\nlibrary(dplyr)\nlibrary(forcats)\n\n# Assuming your dataset is named 'clubs'\nclubs &lt;- clubs %&gt;%\n  mutate(membership_status = fct_recode(membership_status, Closed = \"NA\", Open = \"Select ... to register for this group\")) %&gt;%\n  slice_head(n = 10) %&gt;%\n  relocate(membership_status, .before = 1)\n\n# Display the first 10 rows of the dataset\nclubs\nThis code uses fct_recode from the forcats package to recode the levels of the membership_status variable. The slice_head function is then used to select the first 10 rows, and relocate is used to move the membership_status variable to the beginning of the dataset. Make sure to replace ‘clubs’ with the actual name of your dataset."
  },
  {
    "objectID": "slides/12-chat-gpt.html#chat-gpt---take-3-code",
    "href": "slides/12-chat-gpt.html#chat-gpt---take-3-code",
    "title": "Web scraping wrap-up + Chat GPT",
    "section": "Chat GPT - Take 3 code",
    "text": "Chat GPT - Take 3 code\n\nlibrary(dplyr)\nlibrary(forcats)\n\n# Assuming your dataset is named 'clubs'\nclubs &lt;- clubs %&gt;%\n  mutate(membership_status = fct_recode(membership_status, Closed = \"NA\", Open = \"Select ... to register for this group\")) %&gt;%\n  slice_head(n = 10) %&gt;%\n  relocate(membership_status, .before = 1)\n\nWarning: There was 1 warning in `mutate()`.\nℹ In argument: `membership_status = fct_recode(membership_status, Closed = \"NA\", Open =\n  \"Select ... to register for this group\")`.\nCaused by warning:\n! Unknown levels in `f`: NA, Select ... to register for this group\n\n# Display the first 10 rows of the dataset\nclubs\n\n# A tibble: 10 × 2\n   membership_status                                                                  club\n   &lt;fct&gt;                                                                             &lt;dbl&gt;\n 1 Select AI Competition Club's group. Select the group and click on the Join butto…     1\n 2 &lt;NA&gt;                                                                                  2\n 3 Select Black Pre-Law Society at Duke's group. Select the group and click on the …     3\n 4 &lt;NA&gt;                                                                                  4\n 5 &lt;NA&gt;                                                                                  5\n 6 Select Duke Women's Flag Football Team's group. Select the group and click on th…     6\n 7 &lt;NA&gt;                                                                                  7\n 8 &lt;NA&gt;                                                                                  8\n 9 &lt;NA&gt;                                                                                  9\n10 Select Latino Medical Student Association's group. Select the group and click on…    10"
  },
  {
    "objectID": "slides/12-chat-gpt.html#chat-gpt---take-4-prompt",
    "href": "slides/12-chat-gpt.html#chat-gpt---take-4-prompt",
    "title": "Web scraping wrap-up + Chat GPT",
    "section": "Chat GPT - Take 4 prompt",
    "text": "Chat GPT - Take 4 prompt\n\nThe text “Select … to register for this group” can vary for each group. For example, it can be ““Select blah blah to register for this group” or it can be “Select la di da to register for this group”. Can you suggest a tidyverse-based solution that would capture all of possible options for the … in this text?"
  },
  {
    "objectID": "slides/12-chat-gpt.html#chat-gpt---take-4-response",
    "href": "slides/12-chat-gpt.html#chat-gpt---take-4-response",
    "title": "Web scraping wrap-up + Chat GPT",
    "section": "Chat GPT - Take 4 response",
    "text": "Chat GPT - Take 4 response\n\nExplain what the following code does.\n\n\nCertainly! If the text “Select … to register for this group” varies for each group, you can use the str_detect function from the stringr package to identify those cases. Here’s a tidyverse-based solution:\nlibrary(dplyr)\nlibrary(stringr)\n\n# Assuming your dataset is named 'clubs'\nclubs &lt;- clubs %&gt;%\n  mutate(membership_status = ifelse(str_detect(membership_status, \"Select .* to register for this group\"), \"Open\", \"Closed\")) %&gt;%\n  relocate(membership_status, .before = 1)\n\n# Display the first 10 rows of the dataset\nhead(clubs, 10)\nThis code uses str_detect to check if the membership_status contains the pattern “Select … to register for this group”. If it does, it sets the status to “Open”; otherwise, it sets it to “Closed”. Make sure to replace ‘clubs’ with the actual name of your dataset."
  },
  {
    "objectID": "slides/12-chat-gpt.html#chat-gpt---take-4-code",
    "href": "slides/12-chat-gpt.html#chat-gpt---take-4-code",
    "title": "Web scraping wrap-up + Chat GPT",
    "section": "Chat GPT - Take 4 code",
    "text": "Chat GPT - Take 4 code\n\nlibrary(dplyr)\nlibrary(stringr)\n\n# Assuming your dataset is named 'clubs'\nclubs &lt;- clubs %&gt;%\n  mutate(membership_status = ifelse(str_detect(membership_status, \"Select .* to register for this group\"), \"Open\", \"Closed\")) %&gt;%\n  relocate(membership_status, .before = 1)\n\n# Display the first 10 rows of the dataset\nhead(clubs, 10)\n\n# A tibble: 10 × 2\n   membership_status  club\n   &lt;chr&gt;             &lt;dbl&gt;\n 1 Open                  1\n 2 &lt;NA&gt;                  2\n 3 Open                  3\n 4 &lt;NA&gt;                  4\n 5 &lt;NA&gt;                  5\n 6 Open                  6\n 7 &lt;NA&gt;                  7\n 8 &lt;NA&gt;                  8\n 9 &lt;NA&gt;                  9\n10 Open                 10"
  },
  {
    "objectID": "slides/12-chat-gpt.html#chat-gpt---take-5-prompt",
    "href": "slides/12-chat-gpt.html#chat-gpt---take-5-prompt",
    "title": "Web scraping wrap-up + Chat GPT",
    "section": "Chat GPT - Take 5 prompt",
    "text": "Chat GPT - Take 5 prompt\n\nWhat is different about this prompt?\n\n\nLet’s try again. Can you write a tidyverse-based solution where membership status is recoded as Closed if the current value is NA and Open if the current value is anything else. Then, using the relocate() function, the membership status is moved to be the first column in the output."
  },
  {
    "objectID": "slides/12-chat-gpt.html#chat-gpt---take-5-response",
    "href": "slides/12-chat-gpt.html#chat-gpt---take-5-response",
    "title": "Web scraping wrap-up + Chat GPT",
    "section": "Chat GPT - Take 5 response",
    "text": "Chat GPT - Take 5 response\n\nExplain what the following code does.\n\n\nCertainly! My apologies for the confusion. Here’s a tidyverse-based solution that recodes the membership status and moves it to be the first column using the dplyr package:\nlibrary(dplyr)\n\n# Assuming your dataset is named 'clubs'\nclubs &lt;- clubs %&gt;%\n  mutate(membership_status = if_else(is.na(membership_status), \"Closed\", \"Open\")) %&gt;%\n  relocate(membership_status, .before = 1)\n\n# Display the first 10 rows of the dataset\nhead(clubs, 10)\nThis code uses the mutate function to recode membership_status as “Closed” if it’s NA and “Open” otherwise. Then, the relocate function is used to move membership_status to be the first column in the dataset. Make sure to replace ‘clubs’ with the actual name of your dataset."
  },
  {
    "objectID": "slides/12-chat-gpt.html#chat-gpt---take-5-code",
    "href": "slides/12-chat-gpt.html#chat-gpt---take-5-code",
    "title": "Web scraping wrap-up + Chat GPT",
    "section": "Chat GPT - Take 5 code",
    "text": "Chat GPT - Take 5 code\n\nlibrary(dplyr)\n\n# Assuming your dataset is named 'clubs'\nclubs &lt;- clubs %&gt;%\n  mutate(membership_status = if_else(is.na(membership_status), \"Closed\", \"Open\")) %&gt;%\n  relocate(membership_status, .before = 1)\n\n# Display the first 10 rows of the dataset\nhead(clubs, 10)\n\n# A tibble: 10 × 2\n   membership_status  club\n   &lt;chr&gt;             &lt;dbl&gt;\n 1 Open                  1\n 2 Closed                2\n 3 Open                  3\n 4 Closed                4\n 5 Closed                5\n 6 Open                  6\n 7 Closed                7\n 8 Closed                8\n 9 Closed                9\n10 Open                 10"
  },
  {
    "objectID": "slides/12-chat-gpt.html#chat-gpt---take-5-code-edit",
    "href": "slides/12-chat-gpt.html#chat-gpt---take-5-code-edit",
    "title": "Web scraping wrap-up + Chat GPT",
    "section": "Chat GPT - Take 5 code + edit",
    "text": "Chat GPT - Take 5 code + edit\n\nclubs |&gt;\n  mutate(membership_status = if_else(is.na(membership_status), \"Closed\", \"Open\"))\n\n# A tibble: 21 × 2\n    club membership_status\n   &lt;dbl&gt; &lt;chr&gt;            \n 1     1 Open             \n 2     2 Closed           \n 3     3 Open             \n 4     4 Closed           \n 5     5 Closed           \n 6     6 Open             \n 7     7 Closed           \n 8     8 Closed           \n 9     9 Closed           \n10    10 Open             \n# ℹ 11 more rows"
  },
  {
    "objectID": "slides/12-chat-gpt.html#chat-gpt---take-5-code-edit-1",
    "href": "slides/12-chat-gpt.html#chat-gpt---take-5-code-edit-1",
    "title": "Web scraping wrap-up + Chat GPT",
    "section": "Chat GPT - Take 5 code + edit",
    "text": "Chat GPT - Take 5 code + edit\n\nclubs |&gt;\n  mutate(membership_status = if_else(is.na(membership_status), \"Closed\", \"Open\")) |&gt;\n  relocate(membership_status)\n\n# A tibble: 21 × 2\n   membership_status  club\n   &lt;chr&gt;             &lt;dbl&gt;\n 1 Open                  1\n 2 Closed                2\n 3 Open                  3\n 4 Closed                4\n 5 Closed                5\n 6 Open                  6\n 7 Closed                7\n 8 Closed                8\n 9 Closed                9\n10 Open                 10\n# ℹ 11 more rows"
  },
  {
    "objectID": "slides/12-chat-gpt.html#chat-gpt---take-5-code-edit-2",
    "href": "slides/12-chat-gpt.html#chat-gpt---take-5-code-edit-2",
    "title": "Web scraping wrap-up + Chat GPT",
    "section": "Chat GPT - Take 5 code + edit",
    "text": "Chat GPT - Take 5 code + edit\n\nclubs &lt;- clubs |&gt;\n  mutate(membership_status = if_else(is.na(membership_status), \"Closed\", \"Open\")) |&gt;\n  relocate(membership_status)\n\nclubs\n\n# A tibble: 21 × 2\n   membership_status  club\n   &lt;chr&gt;             &lt;dbl&gt;\n 1 Open                  1\n 2 Closed                2\n 3 Open                  3\n 4 Closed                4\n 5 Closed                5\n 6 Open                  6\n 7 Closed                7\n 8 Closed                8\n 9 Closed                9\n10 Open                 10\n# ℹ 11 more rows"
  },
  {
    "objectID": "slides/12-chat-gpt.html#example-2",
    "href": "slides/12-chat-gpt.html#example-2",
    "title": "Web scraping wrap-up + Chat GPT",
    "section": "Example 2",
    "text": "Example 2\n\nEach CSI franchise includes a number of series, each with the character string \"CSI\" (in capital letters) in their title. Using this information, create a new data frame called csi that only has titles from the CSI-verse and all of the columns from tv for these titles. Then, display the first 10 rows of csi. Note: The titles and seasons included in the dataset may not be all CSI titles and titles that have ever aired."
  },
  {
    "objectID": "slides/12-chat-gpt.html#chat-gpt---take-1-prompt-1",
    "href": "slides/12-chat-gpt.html#chat-gpt---take-1-prompt-1",
    "title": "Web scraping wrap-up + Chat GPT",
    "section": "Chat GPT - Take 1 prompt",
    "text": "Chat GPT - Take 1 prompt\n\nEach CSI franchise includes a number of series, each with the character string \"CSI\" (in capital letters) in their title. Using this information, create a new data frame called csi that only has titles from the CSI-verse and all of the columns from tv for these titles. Then, display the first 10 rows of csi. Note: The titles and seasons included in the dataset may not be all CSI titles and titles that have ever aired."
  },
  {
    "objectID": "slides/12-chat-gpt.html#chat-gpt---take-1-response-1",
    "href": "slides/12-chat-gpt.html#chat-gpt---take-1-response-1",
    "title": "Web scraping wrap-up + Chat GPT",
    "section": "Chat GPT - Take 1 response",
    "text": "Chat GPT - Take 1 response\n\nCertainly! To filter the tv data frame to include only titles from the CSI-verse, you can use the filter function from the dplyr package. Here’s the code:\nlibrary(dplyr)\n\n# Assuming your dataset is named 'tv'\ncsi &lt;- tv %&gt;%\n  filter(str_detect(title, \"CSI\", case_insensitive = TRUE))\n\n# Display the first 10 rows of the 'csi' data frame\nhead(csi, 10)\nThis code uses the filter function to select rows where the title column contains the string “CSI” (case-insensitive). The resulting data frame, csi, will include only titles from the CSI-verse along with all the columns from the original tv data frame. Make sure to replace ‘tv’ with the actual name of your dataset."
  },
  {
    "objectID": "slides/12-chat-gpt.html#chat-gpt---take-1-code-1",
    "href": "slides/12-chat-gpt.html#chat-gpt---take-1-code-1",
    "title": "Web scraping wrap-up + Chat GPT",
    "section": "Chat GPT - Take 1 code",
    "text": "Chat GPT - Take 1 code\n\nWhat is wrong with the following code?\n\n\ntv &lt;- read_csv(\"data/tv.csv\")\n\n\nlibrary(dplyr)\n\n# Assuming your dataset is named 'tv'\ncsi &lt;- tv %&gt;%\n  filter(str_detect(title, \"CSI\", case_insensitive = TRUE))\n\nError in `filter()`:\nℹ In argument: `str_detect(title, \"CSI\", case_insensitive = TRUE)`.\nCaused by error in `str_detect()`:\n! unused argument (case_insensitive = TRUE)\n\n# Display the first 10 rows of the 'csi' data frame\nhead(csi, 10)\n\nError in eval(expr, envir, enclos): object 'csi' not found"
  },
  {
    "objectID": "slides/12-chat-gpt.html#chat-gpt---take-2-prompt-1",
    "href": "slides/12-chat-gpt.html#chat-gpt---take-2-prompt-1",
    "title": "Web scraping wrap-up + Chat GPT",
    "section": "Chat GPT - Take 2 prompt",
    "text": "Chat GPT - Take 2 prompt\n\nstr_detect doesn’t have a case_insensitive argument, can you try again?"
  },
  {
    "objectID": "slides/12-chat-gpt.html#chat-gpt---take-2-response-1",
    "href": "slides/12-chat-gpt.html#chat-gpt---take-2-response-1",
    "title": "Web scraping wrap-up + Chat GPT",
    "section": "Chat GPT - Take 2 response",
    "text": "Chat GPT - Take 2 response\n\nYou are correct, and I appreciate your understanding. The str_detect function itself doesn’t have a case_insensitive argument. Instead, you can use the str_which function along with the case_insensitive argument in the filter function. Here’s the corrected code:\nlibrary(dplyr)\n\n# Assuming your dataset is named 'tv'\ncsi &lt;- tv %&gt;%\n  filter(str_detect(title, \"CSI\", ignore_case = TRUE))\n\n# Display the first 10 rows of the 'csi' data frame\nhead(csi, 10)\nThis code uses str_detect within the filter function and includes the ignore_case = TRUE argument to perform a case-insensitive search. The resulting csi data frame will contain only titles from the CSI-verse along with all the columns from the original tv data frame. Make sure to replace ‘tv’ with the actual name of your dataset."
  },
  {
    "objectID": "slides/12-chat-gpt.html#chat-gpt---take-2-code-1",
    "href": "slides/12-chat-gpt.html#chat-gpt---take-2-code-1",
    "title": "Web scraping wrap-up + Chat GPT",
    "section": "Chat GPT - Take 2 code",
    "text": "Chat GPT - Take 2 code\n\nlibrary(dplyr)\n\n# Assuming your dataset is named 'tv'\ncsi &lt;- tv %&gt;%\n  filter(str_detect(title, \"CSI\", ignore_case = TRUE))\n\nError in `filter()`:\nℹ In argument: `str_detect(title, \"CSI\", ignore_case = TRUE)`.\nCaused by error in `str_detect()`:\n! unused argument (ignore_case = TRUE)\n\n# Display the first 10 rows of the 'csi' data frame\nhead(csi, 10)\n\nError in eval(expr, envir, enclos): object 'csi' not found"
  },
  {
    "objectID": "slides/12-chat-gpt.html#chat-gpt---take-3-prompt-1",
    "href": "slides/12-chat-gpt.html#chat-gpt---take-3-prompt-1",
    "title": "Web scraping wrap-up + Chat GPT",
    "section": "Chat GPT - Take 3 prompt",
    "text": "Chat GPT - Take 3 prompt\n\nstr_detect doesn’t have an ignore_case argument either, can you try again?"
  },
  {
    "objectID": "slides/12-chat-gpt.html#chat-gpt---take-3-response-1",
    "href": "slides/12-chat-gpt.html#chat-gpt---take-3-response-1",
    "title": "Web scraping wrap-up + Chat GPT",
    "section": "Chat GPT - Take 3 response",
    "text": "Chat GPT - Take 3 response\n\nI apologize for the oversight. It seems there was a mistake in my responses. To perform a case-insensitive search, you can use the stringi package along with stri_detect_regex. Here’s the corrected code:\nlibrary(dplyr)\nlibrary(stringi)\n\n# Assuming your dataset is named 'tv'\ncsi &lt;- tv %&gt;%\n  filter(stri_detect_regex(title, \"CSI\", case_insensitive = TRUE))\n\n# Display the first 10 rows of the 'csi' data frame\nhead(csi, 10)\nThis code uses stri_detect_regex from the stringi package within the filter function, and it includes the case_insensitive = TRUE argument for a case-insensitive search. The resulting csi data frame will contain only titles from the CSI-verse along with all the columns from the original tv data frame. Make sure to replace ‘tv’ with the actual name of your dataset."
  },
  {
    "objectID": "slides/12-chat-gpt.html#lets-go-back-to-take-1",
    "href": "slides/12-chat-gpt.html#lets-go-back-to-take-1",
    "title": "Web scraping wrap-up + Chat GPT",
    "section": "Let’s go back to Take 1",
    "text": "Let’s go back to Take 1\nand edit it a bit:\n\ntv |&gt;\n  filter(str_detect(title, \"CSI\"))\n\n# A tibble: 36 × 9\n   season title                         year month   day av_rating genre_1 genre_2 genre_3\n    &lt;dbl&gt; &lt;chr&gt;                        &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt;     &lt;dbl&gt; &lt;chr&gt;   &lt;chr&gt;   &lt;chr&gt;  \n 1      1 CSI: Crime Scene Investigat…  2001     1    20      8.32 Crime   Drama   Mystery\n 2      2 CSI: Crime Scene Investigat…  2002     1    10      8.26 Crime   Drama   Mystery\n 3      3 CSI: Crime Scene Investigat…  2003     1    15      8.30 Crime   Drama   Mystery\n 4      4 CSI: Crime Scene Investigat…  2004     1    18      8.33 Crime   Drama   Mystery\n 5      5 CSI: Crime Scene Investigat…  2005     1    24      8.38 Crime   Drama   Mystery\n 6      6 CSI: Crime Scene Investigat…  2006     1    16      8.21 Crime   Drama   Mystery\n 7      7 CSI: Crime Scene Investigat…  2007     1    14      8.43 Crime   Drama   Mystery\n 8      8 CSI: Crime Scene Investigat…  2008     1     7      8.07 Crime   Drama   Mystery\n 9      9 CSI: Crime Scene Investigat…  2009     1    27      7.80 Crime   Drama   Mystery\n10     10 CSI: Crime Scene Investigat…  2010     1    23      7.69 Crime   Drama   Mystery\n# ℹ 26 more rows"
  },
  {
    "objectID": "slides/12-chat-gpt.html#lets-go-back-to-take-1-1",
    "href": "slides/12-chat-gpt.html#lets-go-back-to-take-1-1",
    "title": "Web scraping wrap-up + Chat GPT",
    "section": "Let’s go back to Take 1",
    "text": "Let’s go back to Take 1\n\ncsi &lt;- tv |&gt;\n  filter(str_detect(title, \"CSI\"))\n\ncsi\n\n# A tibble: 36 × 9\n   season title                         year month   day av_rating genre_1 genre_2 genre_3\n    &lt;dbl&gt; &lt;chr&gt;                        &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt;     &lt;dbl&gt; &lt;chr&gt;   &lt;chr&gt;   &lt;chr&gt;  \n 1      1 CSI: Crime Scene Investigat…  2001     1    20      8.32 Crime   Drama   Mystery\n 2      2 CSI: Crime Scene Investigat…  2002     1    10      8.26 Crime   Drama   Mystery\n 3      3 CSI: Crime Scene Investigat…  2003     1    15      8.30 Crime   Drama   Mystery\n 4      4 CSI: Crime Scene Investigat…  2004     1    18      8.33 Crime   Drama   Mystery\n 5      5 CSI: Crime Scene Investigat…  2005     1    24      8.38 Crime   Drama   Mystery\n 6      6 CSI: Crime Scene Investigat…  2006     1    16      8.21 Crime   Drama   Mystery\n 7      7 CSI: Crime Scene Investigat…  2007     1    14      8.43 Crime   Drama   Mystery\n 8      8 CSI: Crime Scene Investigat…  2008     1     7      8.07 Crime   Drama   Mystery\n 9      9 CSI: Crime Scene Investigat…  2009     1    27      7.80 Crime   Drama   Mystery\n10     10 CSI: Crime Scene Investigat…  2010     1    23      7.69 Crime   Drama   Mystery\n# ℹ 26 more rows"
  },
  {
    "objectID": "slides/12-chat-gpt.html#guidelines-and-best-practices-for-using-chat-gpt",
    "href": "slides/12-chat-gpt.html#guidelines-and-best-practices-for-using-chat-gpt",
    "title": "Web scraping wrap-up + Chat GPT",
    "section": "Guidelines and best practices for using Chat GPT",
    "text": "Guidelines and best practices for using Chat GPT\n\n\nDo not just copy-paste the prompt – for appropriate academic conduct, for your own learning, and for getting to better results faster\nEngineer the prompt until the response starts to look like code you’re learning in the course\nIf the response is not correct, ask for a correction\nIf the response doesn’t follow the guidelines, ask for a correction\nDo not just copy-paste code from Chat GPT responses, run it line-by-line and edit as needed\nWatch out for clear mistakes in the response: do not keep loading packages that are already loaded, use the base pipe |&gt;, use tidyverse-based code, etc.\n\n\n\n\n\n\n🔗 sta199-s24.github.io  ·  ❓ Ask on Ed"
  },
  {
    "objectID": "slides/11-web-scraping.html#while-you-wait-for-class-to-begin",
    "href": "slides/11-web-scraping.html#while-you-wait-for-class-to-begin",
    "title": "Web scraping",
    "section": "While you wait for class to begin…",
    "text": "While you wait for class to begin…\n\n\nIf you haven’t yet done so: Install a Chrome browser and the SelectorGadget extension:\n\nChrome\nSelectorGadget\n\nGo to your ae repo, commit any remaining changes, push, and then pull for today’s application exercise."
  },
  {
    "objectID": "slides/11-web-scraping.html#announcements",
    "href": "slides/11-web-scraping.html#announcements",
    "title": "Web scraping",
    "section": "Announcements",
    "text": "Announcements\n\nLab 4 on Monday\nChallenge: Resist the urge to ask a GPT before spending some time thinking!"
  },
  {
    "objectID": "slides/11-web-scraping.html#reading-the-chronicle",
    "href": "slides/11-web-scraping.html#reading-the-chronicle",
    "title": "Web scraping",
    "section": "Reading The Chronicle",
    "text": "Reading The Chronicle\n\nHow often do you read The Chronicle?\n\nEvery day\n3-5 times a week\nOnce a week\nRarely"
  },
  {
    "objectID": "slides/11-web-scraping.html#reading-the-chronicle-1",
    "href": "slides/11-web-scraping.html#reading-the-chronicle-1",
    "title": "Web scraping",
    "section": "Reading The Chronicle",
    "text": "Reading The Chronicle\n\nWhat do you think is the most common word in the titles of The Chronicle opinion pieces?"
  },
  {
    "objectID": "slides/11-web-scraping.html#analyzing-the-chronicle",
    "href": "slides/11-web-scraping.html#analyzing-the-chronicle",
    "title": "Web scraping",
    "section": "Analyzing The Chronicle",
    "text": "Analyzing The Chronicle"
  },
  {
    "objectID": "slides/11-web-scraping.html#reading-the-chronicle-2",
    "href": "slides/11-web-scraping.html#reading-the-chronicle-2",
    "title": "Web scraping",
    "section": "Reading The Chronicle",
    "text": "Reading The Chronicle\n\nHow do you think the sentiments in opinion pieces in The Chronicle compare across authors? Roughly the same? Wildly different? Somewhere in between?"
  },
  {
    "objectID": "slides/11-web-scraping.html#analyzing-the-chronicle-1",
    "href": "slides/11-web-scraping.html#analyzing-the-chronicle-1",
    "title": "Web scraping",
    "section": "Analyzing The Chronicle",
    "text": "Analyzing The Chronicle"
  },
  {
    "objectID": "slides/11-web-scraping.html#all-of-this-analysis-is-done-in-r",
    "href": "slides/11-web-scraping.html#all-of-this-analysis-is-done-in-r",
    "title": "Web scraping",
    "section": "All of this analysis is done in R!",
    "text": "All of this analysis is done in R!\n\n(mostly) with tools you already know!"
  },
  {
    "objectID": "slides/11-web-scraping.html#common-words-in-the-chronicle-titles",
    "href": "slides/11-web-scraping.html#common-words-in-the-chronicle-titles",
    "title": "Web scraping",
    "section": "Common words in The Chronicle titles",
    "text": "Common words in The Chronicle titles\nCode for the earlier plot:\n\nchronicle |&gt;\n  tidytext::unnest_tokens(word, title) |&gt;\n  anti_join(tidytext::stop_words) |&gt;\n  count(word, sort = TRUE) |&gt;\n  slice_head(n = 20) |&gt;\n  mutate(word = fct_reorder(word, n)) |&gt;\n  ggplot(aes(y = word, x = n, fill = log(n))) +\n  geom_col(show.legend = FALSE) +\n  theme_minimal(base_size = 16) +\n  labs(\n    x = \"Number of mentions\",\n    y = \"Word\",\n    title = \"The Chronicle - Opinion pieces\",\n    subtitle = \"Common words in the 500 most recent opinion pieces\",\n    caption = \"Source: Data scraped from The Chronicle on Feb 21, 2024\"\n  ) +\n  theme(\n    plot.title.position = \"plot\",\n    plot.caption = element_text(color = \"gray30\")\n  )"
  },
  {
    "objectID": "slides/11-web-scraping.html#avg-sentiment-scores-of-abstracts",
    "href": "slides/11-web-scraping.html#avg-sentiment-scores-of-abstracts",
    "title": "Web scraping",
    "section": "Avg sentiment scores of abstracts",
    "text": "Avg sentiment scores of abstracts\nCode for the earlier plot:\n\nchronicle |&gt;\n  tidytext::unnest_tokens(word, abstract) |&gt;\n  anti_join(tidytext::stop_words) |&gt;\n  left_join(tidytext::get_sentiments(\"afinn\")) |&gt; \n  group_by(author, title) |&gt;\n  summarize(total_sentiment = sum(value, na.rm = TRUE), .groups = \"drop\") |&gt;\n  group_by(author) |&gt;\n  summarize(\n    n_articles = n(),\n    avg_sentiment = mean(total_sentiment, na.rm = TRUE),\n  ) |&gt;\n  filter(n_articles &gt; 1 & !is.na(author)) |&gt;\n  arrange(desc(avg_sentiment)) |&gt;\n  slice(c(1:10, 49:58)) |&gt;\n  mutate(\n    author = fct_reorder(author, avg_sentiment),\n    neg_pos = if_else(avg_sentiment &lt; 0, \"neg\", \"pos\"),\n    label_position = if_else(neg_pos == \"neg\", 0.25, -0.25)\n  ) |&gt;\n  ggplot(aes(y = author, x = avg_sentiment)) +\n  geom_col(aes(fill = neg_pos), show.legend = FALSE) +\n  geom_text(\n    aes(x = label_position, label = author, color = neg_pos),\n    hjust = c(rep(1,10), rep(0, 10)),\n    show.legend = FALSE,\n    fontface = \"bold\"\n  ) +\n  geom_text(\n    aes(label = round(avg_sentiment, 1)),\n    hjust = c(rep(1.25,10), rep(-0.25, 10)),\n    color = \"white\",\n    fontface = \"bold\"\n  ) +\n  scale_fill_manual(values = c(\"neg\" = \"#4d4009\", \"pos\" = \"#FF4B91\")) +\n  scale_color_manual(values = c(\"neg\" = \"#4d4009\", \"pos\" = \"#FF4B91\")) +\n  scale_x_continuous(breaks = -5:5, minor_breaks = NULL) +\n  scale_y_discrete(breaks = NULL) +\n  coord_cartesian(xlim = c(-5, 5)) +\n  labs(\n    x = \"negative  ←     Average sentiment score (AFINN)     →  positive\",\n    y = NULL,\n    title = \"The Chronicle - Opinion pieces\\nAverage sentiment scores of abstracts by author\",\n    subtitle = \"Top 10 average positive and negative scores\",\n    caption = \"Source: Data scraped from The Chronicle on Feb 21, 2024\"\n  ) +\n  theme_void(base_size = 16) +\n  theme(\n    plot.title = element_text(hjust = 0.5),\n    plot.subtitle = element_text(hjust = 0.5, margin = unit(c(0.5, 0, 1, 0), \"lines\")),\n    axis.text.y = element_blank(),\n    plot.caption = element_text(color = \"gray30\")\n  )"
  },
  {
    "objectID": "slides/11-web-scraping.html#where-is-the-data-coming-from",
    "href": "slides/11-web-scraping.html#where-is-the-data-coming-from",
    "title": "Web scraping",
    "section": "Where is the data coming from?",
    "text": "Where is the data coming from?\n\nhttps://www.dukechronicle.com/section/opinion"
  },
  {
    "objectID": "slides/11-web-scraping.html#where-is-the-data-coming-from-1",
    "href": "slides/11-web-scraping.html#where-is-the-data-coming-from-1",
    "title": "Web scraping",
    "section": "Where is the data coming from?",
    "text": "Where is the data coming from?\n\n\n\n\n\n\n\n\n\nchronicle\n\n# A tibble: 500 × 6\n   title                                           author date       abstract column url  \n   &lt;chr&gt;                                           &lt;chr&gt;  &lt;date&gt;     &lt;chr&gt;    &lt;chr&gt;  &lt;chr&gt;\n 1 All the world’s a stage                         Anna … 2024-02-22 If we a… STUDE… http…\n 2 Words that matter: For Alexei Navalny           Carol… 2024-02-22 In some… STUDE… http…\n 3 Which would you save: Friend or romantic partn… Jess … 2024-02-22 Love sh… STUDE… http…\n 4 Happiness is not what you’re looking for        Paul … 2024-02-21 We hing… STUDE… http…\n 5 Closing Duke's Herbarium: A fear of long-term … Matth… 2024-02-21 Without… LETTE… http…\n 6 CS Majors launch 'ambiguous and labelless rela… Monda… 2024-02-20 Unlike … STUDE… http…\n 7 The fear of being single                        Heidi… 2024-02-20 But it … STUDE… http…\n 8 Save the Duke Herbarium                         Henry… 2024-02-17 The Duk… LETTE… http…\n 9 What Duke can learn from retiring ex-president… Rober… 2024-02-17 In Duke… GUEST… http…\n10 Love, love                                      Gabri… 2024-02-16 Somehow… STUDE… http…\n# ℹ 490 more rows"
  },
  {
    "objectID": "slides/11-web-scraping.html#scraping-the-web-what-why",
    "href": "slides/11-web-scraping.html#scraping-the-web-what-why",
    "title": "Web scraping",
    "section": "Scraping the web: what? why?",
    "text": "Scraping the web: what? why?\n\nIncreasing amount of data is available on the web\nThese data are provided in an unstructured format: you can always copy&paste, but it’s time-consuming and prone to errors\nWeb scraping is the process of extracting this information automatically and transform it into a structured dataset\nTwo different scenarios:\n\nScreen scraping: extract data from source code of website, with html parser (easy) or regular expression matching (less easy).\nWeb APIs (application programming interface): website offers a set of structured http requests that return JSON or XML files."
  },
  {
    "objectID": "slides/11-web-scraping.html#hypertext-markup-language",
    "href": "slides/11-web-scraping.html#hypertext-markup-language",
    "title": "Web scraping",
    "section": "Hypertext Markup Language",
    "text": "Hypertext Markup Language\nMost of the data on the web is still largely available as HTML - while it is structured (hierarchical) it often is not available in a form useful for analysis (flat / tidy).\n\n&lt;html&gt;\n  &lt;head&gt;\n    &lt;title&gt;This is a title&lt;/title&gt;\n  &lt;/head&gt;\n  &lt;body&gt;\n    &lt;p align=\"center\"&gt;Hello world!&lt;/p&gt;\n    &lt;br/&gt;\n    &lt;div class=\"name\" id=\"first\"&gt;John&lt;/div&gt;\n    &lt;div class=\"name\" id=\"last\"&gt;Doe&lt;/div&gt;\n    &lt;div class=\"contact\"&gt;\n      &lt;div class=\"home\"&gt;555-555-1234&lt;/div&gt;\n      &lt;div class=\"home\"&gt;555-555-2345&lt;/div&gt;\n      &lt;div class=\"work\"&gt;555-555-9999&lt;/div&gt;\n      &lt;div class=\"fax\"&gt;555-555-8888&lt;/div&gt;\n    &lt;/div&gt;\n  &lt;/body&gt;\n&lt;/html&gt;"
  },
  {
    "objectID": "slides/11-web-scraping.html#rvest",
    "href": "slides/11-web-scraping.html#rvest",
    "title": "Web scraping",
    "section": "rvest",
    "text": "rvest\n\n\n\nThe rvest package makes basic processing and manipulation of HTML data straight forward\nIt’s designed to work with pipelines built with |&gt;\nrvest.tidyverse.org\n\n\nlibrary(rvest)"
  },
  {
    "objectID": "slides/11-web-scraping.html#rvest-1",
    "href": "slides/11-web-scraping.html#rvest-1",
    "title": "Web scraping",
    "section": "rvest",
    "text": "rvest\nCore functions:\n\nread_html() - read HTML data from a url or character string.\nhtml_elements() - select specified elements from the HTML document using CSS selectors (or xpath).\nhtml_element() - select a single element from the HTML document using CSS selectors (or xpath).\nhtml_table() - parse an HTML table into a data frame.\nhtml_text() / html_text2() - extract tag’s text content.\nhtml_name - extract a tag/element’s name(s).\nhtml_attrs - extract all attributes.\nhtml_attr - extract attribute value(s) by name."
  },
  {
    "objectID": "slides/11-web-scraping.html#html-rvest-xml2",
    "href": "slides/11-web-scraping.html#html-rvest-xml2",
    "title": "Web scraping",
    "section": "html, rvest, & xml2",
    "text": "html, rvest, & xml2\n\nhtml &lt;- \n'&lt;html&gt;\n  &lt;head&gt;\n    &lt;title&gt;This is a title&lt;/title&gt;\n  &lt;/head&gt;\n  &lt;body&gt;\n    &lt;p align=\"center\"&gt;Hello world!&lt;/p&gt;\n    &lt;br/&gt;\n    &lt;div class=\"name\" id=\"first\"&gt;John&lt;/div&gt;\n    &lt;div class=\"name\" id=\"last\"&gt;Doe&lt;/div&gt;\n    &lt;div class=\"contact\"&gt;\n      &lt;div class=\"home\"&gt;555-555-1234&lt;/div&gt;\n      &lt;div class=\"home\"&gt;555-555-2345&lt;/div&gt;\n      &lt;div class=\"work\"&gt;555-555-9999&lt;/div&gt;\n      &lt;div class=\"fax\"&gt;555-555-8888&lt;/div&gt;\n    &lt;/div&gt;\n  &lt;/body&gt;\n&lt;/html&gt;'\n\n\n\nread_html(html)\n\n{html_document}\n&lt;html&gt;\n[1] &lt;head&gt;\\n&lt;meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\"&gt;\\n&lt;title ...\n[2] &lt;body&gt;\\n    &lt;p align=\"center\"&gt;Hello world!&lt;/p&gt;\\n    &lt;br&gt;&lt;div class=\"name\" id=\"first ..."
  },
  {
    "objectID": "slides/11-web-scraping.html#selecting-elements",
    "href": "slides/11-web-scraping.html#selecting-elements",
    "title": "Web scraping",
    "section": "Selecting elements",
    "text": "Selecting elements\n\nread_html(html) |&gt; html_elements(\"p\")\n\n{xml_nodeset (1)}\n[1] &lt;p align=\"center\"&gt;Hello world!&lt;/p&gt;\n\n\n\n\nread_html(html) |&gt; html_elements(\"p\") |&gt; html_text()\n\n[1] \"Hello world!\"\n\n\n\n\n\nread_html(html) |&gt; html_elements(\"p\") |&gt; html_name()\n\n[1] \"p\"\n\n\n\n\n\nread_html(html) |&gt; html_elements(\"p\") |&gt; html_attrs()\n\n[[1]]\n   align \n\"center\" \n\n\n\n\n\nread_html(html) |&gt; html_elements(\"p\") |&gt; html_attr(\"align\")\n\n[1] \"center\""
  },
  {
    "objectID": "slides/11-web-scraping.html#more-selecting-tags",
    "href": "slides/11-web-scraping.html#more-selecting-tags",
    "title": "Web scraping",
    "section": "More selecting tags",
    "text": "More selecting tags\n\n\nread_html(html) |&gt; html_elements(\"div\")\n\n{xml_nodeset (7)}\n[1] &lt;div class=\"name\" id=\"first\"&gt;John&lt;/div&gt;\n[2] &lt;div class=\"name\" id=\"last\"&gt;Doe&lt;/div&gt;\n[3] &lt;div class=\"contact\"&gt;\\n      &lt;div class=\"home\"&gt;555-555-1234&lt;/div&gt;\\n      &lt;div class ...\n[4] &lt;div class=\"home\"&gt;555-555-1234&lt;/div&gt;\n[5] &lt;div class=\"home\"&gt;555-555-2345&lt;/div&gt;\n[6] &lt;div class=\"work\"&gt;555-555-9999&lt;/div&gt;\n[7] &lt;div class=\"fax\"&gt;555-555-8888&lt;/div&gt;\n\n\n\n\n\n\nread_html(html) |&gt; html_elements(\"div\") |&gt; html_text()\n\n[1] \"John\"                                                                                  \n[2] \"Doe\"                                                                                   \n[3] \"\\n      555-555-1234\\n      555-555-2345\\n      555-555-9999\\n      555-555-8888\\n    \"\n[4] \"555-555-1234\"                                                                          \n[5] \"555-555-2345\"                                                                          \n[6] \"555-555-9999\"                                                                          \n[7] \"555-555-8888\""
  },
  {
    "objectID": "slides/11-web-scraping.html#css-selectors",
    "href": "slides/11-web-scraping.html#css-selectors",
    "title": "Web scraping",
    "section": "CSS selectors",
    "text": "CSS selectors\n\nWe will use a tool called SelectorGadget to help us identify the HTML elements of interest by constructing a CSS selector which can be used to subset the HTML document.\n\n\n\nSome examples of basic selector syntax is below,\n\n\n\n\n\n\n\n\n\n\nSelector\nExample\nDescription\n\n\n\n\n.class\n.title\nSelect all elements with class=“title”\n\n\n#id\n#name\nSelect all elements with id=“name”\n\n\nelement\np\nSelect all &lt;p&gt; elements\n\n\nelement element\ndiv p\nSelect all &lt;p&gt; elements inside a &lt;div&gt; element\n\n\nelement&gt;element\ndiv &gt; p\nSelect all &lt;p&gt; elements with &lt;div&gt; as a parent\n\n\n[attribute]\n[class]\nSelect all elements with a class attribute\n\n\n[attribute=value]\n[class=title]\nSelect all elements with class=“title”"
  },
  {
    "objectID": "slides/11-web-scraping.html#css-classes-and-ids",
    "href": "slides/11-web-scraping.html#css-classes-and-ids",
    "title": "Web scraping",
    "section": "CSS classes and ids",
    "text": "CSS classes and ids\n\nread_html(html) |&gt; html_elements(\".name\")\n\n{xml_nodeset (2)}\n[1] &lt;div class=\"name\" id=\"first\"&gt;John&lt;/div&gt;\n[2] &lt;div class=\"name\" id=\"last\"&gt;Doe&lt;/div&gt;\n\n\n\n\nread_html(html) |&gt; html_elements(\"div.name\")\n\n{xml_nodeset (2)}\n[1] &lt;div class=\"name\" id=\"first\"&gt;John&lt;/div&gt;\n[2] &lt;div class=\"name\" id=\"last\"&gt;Doe&lt;/div&gt;\n\n\n\n\n\nread_html(html) |&gt; html_elements(\"#first\")\n\n{xml_nodeset (1)}\n[1] &lt;div class=\"name\" id=\"first\"&gt;John&lt;/div&gt;"
  },
  {
    "objectID": "slides/11-web-scraping.html#text-with-html_text-vs.-html_text2",
    "href": "slides/11-web-scraping.html#text-with-html_text-vs.-html_text2",
    "title": "Web scraping",
    "section": "Text with html_text() vs. html_text2()",
    "text": "Text with html_text() vs. html_text2()\n\nhtml = read_html(\n  \"&lt;p&gt;  \n    This is the first sentence in the paragraph.\n    This is the second sentence that should be on the same line as the first sentence.&lt;br&gt;This third sentence should start on a new line.\n  &lt;/p&gt;\"\n)\n\n\n\nhtml |&gt; html_text()\n\n[1] \"  \\n    This is the first sentence in the paragraph.\\n    This is the second sentence that should be on the same line as the first sentence.This third sentence should start on a new line.\\n  \"\n\nhtml |&gt; html_text2()\n\n[1] \"This is the first sentence in the paragraph. This is the second sentence that should be on the same line as the first sentence.\\nThis third sentence should start on a new line.\""
  },
  {
    "objectID": "slides/11-web-scraping.html#html-tables-with-html_table",
    "href": "slides/11-web-scraping.html#html-tables-with-html_table",
    "title": "Web scraping",
    "section": "HTML tables with html_table()",
    "text": "HTML tables with html_table()\n\nhtml_table = \n'&lt;html&gt;\n  &lt;head&gt;\n    &lt;title&gt;This is a title&lt;/title&gt;\n  &lt;/head&gt;\n  &lt;body&gt;\n    &lt;table&gt;\n      &lt;tr&gt; &lt;th&gt;a&lt;/th&gt; &lt;th&gt;b&lt;/th&gt; &lt;th&gt;c&lt;/th&gt; &lt;/tr&gt;\n      &lt;tr&gt; &lt;td&gt;1&lt;/td&gt; &lt;td&gt;2&lt;/td&gt; &lt;td&gt;3&lt;/td&gt; &lt;/tr&gt;\n      &lt;tr&gt; &lt;td&gt;2&lt;/td&gt; &lt;td&gt;3&lt;/td&gt; &lt;td&gt;4&lt;/td&gt; &lt;/tr&gt;\n      &lt;tr&gt; &lt;td&gt;3&lt;/td&gt; &lt;td&gt;4&lt;/td&gt; &lt;td&gt;5&lt;/td&gt; &lt;/tr&gt;\n    &lt;/table&gt;\n  &lt;/body&gt;\n&lt;/html&gt;'\n\n\n\nread_html(html_table) |&gt;\n  html_elements(\"table\") |&gt; \n  html_table()\n\n[[1]]\n# A tibble: 3 × 3\n      a     b     c\n  &lt;int&gt; &lt;int&gt; &lt;int&gt;\n1     1     2     3\n2     2     3     4\n3     3     4     5"
  },
  {
    "objectID": "slides/11-web-scraping.html#selectorgadget",
    "href": "slides/11-web-scraping.html#selectorgadget",
    "title": "Web scraping",
    "section": "SelectorGadget",
    "text": "SelectorGadget\nSelectorGadget (selectorgadget.com) is a javascript based tool that helps you interactively build an appropriate CSS selector for the content you are interested in."
  },
  {
    "objectID": "slides/11-web-scraping.html#opinion-articles-in-the-chronicle",
    "href": "slides/11-web-scraping.html#opinion-articles-in-the-chronicle",
    "title": "Web scraping",
    "section": "Opinion articles in The Chronicle",
    "text": "Opinion articles in The Chronicle\nGo to https://www.dukechronicle.com/section/opinion?page=1&per_page=500.\n\nHow many articles are on the page?"
  },
  {
    "objectID": "slides/11-web-scraping.html#goal",
    "href": "slides/11-web-scraping.html#goal",
    "title": "Web scraping",
    "section": "Goal",
    "text": "Goal\n\n\n\nScrape data and organize it in a tidy format in R\nPerform light text parsing to clean data\nSummarize and visualze the data"
  },
  {
    "objectID": "slides/11-web-scraping.html#ae-09",
    "href": "slides/11-web-scraping.html#ae-09",
    "title": "Web scraping",
    "section": "ae-09",
    "text": "ae-09\n\n\nGo to the project navigator in RStudio (top right corner of your RStudio window) and open the project called ae.\nIf there are any uncommitted files, commit them, and then click Pull.\nOpen the file called chronicle-scrape.R and follow along."
  },
  {
    "objectID": "slides/11-web-scraping.html#recap",
    "href": "slides/11-web-scraping.html#recap",
    "title": "Web scraping",
    "section": "Recap",
    "text": "Recap\n\nUse the SelectorGadget identify tags for elements you want to grab\nUse rvest to first read the whole page (into R) and then parse the object you’ve read in to the elements you’re interested in\nPut the components together in a data frame (a tibble) and analyze it like you analyze any other data"
  },
  {
    "objectID": "slides/11-web-scraping.html#a-new-r-workflow",
    "href": "slides/11-web-scraping.html#a-new-r-workflow",
    "title": "Web scraping",
    "section": "A new R workflow",
    "text": "A new R workflow\n\nWhen working in a Quarto document, your analysis is re-run each time you knit\nIf web scraping in a Quarto document, you’d be re-scraping the data each time you knit, which is undesirable (and not nice)!\nAn alternative workflow:\n\nUse an R script to save your code\nSaving interim data scraped using the code in the script as CSV or RDS files\nUse the saved data in your analysis in your Quarto document"
  },
  {
    "objectID": "slides/11-web-scraping.html#ethics-can-you-vs-should-you",
    "href": "slides/11-web-scraping.html#ethics-can-you-vs-should-you",
    "title": "Web scraping",
    "section": "Ethics: “Can you?” vs “Should you?”",
    "text": "Ethics: “Can you?” vs “Should you?”\n\n\n\n\n\n\n\nSource: Brian Resnick, Researchers just released profile data on 70,000 OkCupid users without permission, Vox."
  },
  {
    "objectID": "slides/11-web-scraping.html#can-you-vs-should-you",
    "href": "slides/11-web-scraping.html#can-you-vs-should-you",
    "title": "Web scraping",
    "section": "“Can you?” vs “Should you?”",
    "text": "“Can you?” vs “Should you?”"
  },
  {
    "objectID": "slides/11-web-scraping.html#challenges-unreliable-formatting",
    "href": "slides/11-web-scraping.html#challenges-unreliable-formatting",
    "title": "Web scraping",
    "section": "Challenges: Unreliable formatting",
    "text": "Challenges: Unreliable formatting\n\n\n\n\n\n\n\nalumni.duke.edu/news/notable-alumni"
  },
  {
    "objectID": "slides/11-web-scraping.html#challenges-data-broken-into-many-pages",
    "href": "slides/11-web-scraping.html#challenges-data-broken-into-many-pages",
    "title": "Web scraping",
    "section": "Challenges: Data broken into many pages",
    "text": "Challenges: Data broken into many pages"
  },
  {
    "objectID": "slides/11-web-scraping.html#workflow-screen-scraping-vs.-apis",
    "href": "slides/11-web-scraping.html#workflow-screen-scraping-vs.-apis",
    "title": "Web scraping",
    "section": "Workflow: Screen scraping vs. APIs",
    "text": "Workflow: Screen scraping vs. APIs\nTwo different scenarios for web scraping:\n\nScreen scraping: extract data from source code of website, with html parser (easy) or regular expression matching (less easy)\nWeb APIs (application programming interface): website offers a set of structured http requests that return JSON or XML files\n\n\n\n\n\n🔗 sta199-s24.github.io  ·  ❓ Ask on Ed"
  },
  {
    "objectID": "project/2-proposal.html",
    "href": "project/2-proposal.html",
    "title": "Proposal",
    "section": "",
    "text": "The goals of this milestone are as follows:\n\nDiscuss topics you’re interested in investigating and find data sets on those topics.\nIdentify 3 data sets you’re interested in potentially using for the project.\nGet these datasets into R.\nWrite up reasons and justifications for why you want to work with these datasets.\nReview your team contract.\n\n\n\n\n\n\n\nImportant\n\n\n\nYou must use one of the data sets in the proposal for the final project, unless instructed otherwise when given feedback."
  },
  {
    "objectID": "project/2-proposal.html#criteria-for-datasets",
    "href": "project/2-proposal.html#criteria-for-datasets",
    "title": "Proposal",
    "section": "Criteria for datasets",
    "text": "Criteria for datasets\nThe data sets should meet the following criteria:\n\nAt least 500 observations\nAt least 8 columns\nAt least 6 of the columns must be useful and unique explanatory variables.\n\nIdentifier variables such as “name”, “social security number”, etc. are not useful explanatory variables.\nIf you have multiple columns with the same information (e.g. “state abbreviation” and “state name”), then they are not unique explanatory variables.\n\nYou may not use data that has previously been used in any course materials, or any derivation of data that has been used in course materials.\nYou can curate one of your datasets via web scraping.\n\nPlease ask a member of the teaching team if you’re unsure whether your data set meets the criteria.\nIf you set your hearts on a dataset that has fewer observations or variables than what’s suggested here, that might still be ok; use these numbers as guidance for a successful proposal, not as minimum requirements."
  },
  {
    "objectID": "project/2-proposal.html#resources-for-datasets",
    "href": "project/2-proposal.html#resources-for-datasets",
    "title": "Proposal",
    "section": "Resources for datasets",
    "text": "Resources for datasets\nYou can find data wherever you like, but here are some recommendations to get you started. You shouldn’t feel constrained to datasets that are already in a tidy format, you can start with data that needs cleaning and tidying, scrape data off the web, or collect your own data.\n\nAwesome public datasets\nBikeshare data portal\nCDC\nData.gov\nData is Plural\nDurham Open Data Portal\nEdinburgh Open Data\nElection Studies\nEuropean Statistics\nCORGIS: The Collection of Really Great, Interesting, Situated Datasets\nGeneral Social Survey\nGoogle Dataset Search\nHarvard Dataverse\nInternational Monetary Fund\nIPUMS survey data from around the world\nLos Angeles Open Data\nNHS Scotland Open Data\nNYC OpenData\nOpen access to Scotland’s official statistics\nPew Research\nPRISM Data Archive Project\nStatistics Canada\nTidyTuesday\nThe National Bureau of Economic Research\nUCI Machine Learning Repository\nUK Government Data\nUNICEF Data\nUnited Nations Data\nUnited Nations Statistics Division\nUS Census Data\nUS Government Data\nWorld Bank Data\nYouth Risk Behavior Surveillance System (YRBSS)\nFRED Economic Data"
  },
  {
    "objectID": "project/2-proposal.html#introduction-and-data",
    "href": "project/2-proposal.html#introduction-and-data",
    "title": "Proposal",
    "section": "Introduction and data",
    "text": "Introduction and data\nFor each data set:\n\nIdentify the source of the data.\nState when and how it was originally collected (by the original data curator, not necessarily how you found the data).\nWrite a brief description of the observations.\nAddress ethical concerns about the data, if any."
  },
  {
    "objectID": "project/2-proposal.html#research-question",
    "href": "project/2-proposal.html#research-question",
    "title": "Proposal",
    "section": "Research question",
    "text": "Research question\nYour research question should contain at least three variables, and should be a mix of categorical and quantitative variables. When writing a research question, please think about the following:\n\nWhat is your target population?\nIs the question original?\nCan the question be answered?\n\nFor each data set, include the following:\n\nA well formulated research question. (You may include more than one research question if you want to receive feedback on different ideas for your project. However, one per data set is required.)\nStatement on why this question is important.\nA description of the research topic along with a concise statement of your hypotheses on this topic.\nIdentify the types of variables in your research question. Categorical? Quantitative?"
  },
  {
    "objectID": "project/2-proposal.html#glimpse-of-data",
    "href": "project/2-proposal.html#glimpse-of-data",
    "title": "Proposal",
    "section": "Glimpse of data",
    "text": "Glimpse of data\nFor each data set:\n\nPlace the file containing your data in the data folder of the project repo.\nUse the glimpse() function to provide a glimpse of the data set."
  },
  {
    "objectID": "project/4-writeup-presentation.html",
    "href": "project/4-writeup-presentation.html",
    "title": "Write-up and presentation",
    "section": "",
    "text": "Your written report must be completed in the index.qmd file and must be reproducible. All team members should contribute to the GitHub repository, with regular meaningful commits.\nBefore you finalize your write up, make sure the printing of code chunks is off with the option echo: false in the YAML.\nThe mandatory components of the report are below. You are free to add additional sections as necessary. The report, including visualizations, should be no more than 10 pages long (if it were to be printed). There is no minimum page requirement; however, you should comprehensively address all of the analysis in your report.\nTo check how many pages your report is, open it in your browser and go to File &gt; Print &gt; Save as PDF and review the number of pages.\nBe selective in what you include in your final write-up. The goal is to write a cohesive narrative that demonstrates a thorough and comprehensive analysis rather than explain every step of the analysis.\nYou are welcome to include an appendix with additional work at the end of the written report document; however, grading will largely be based on the content in the main body of the report. You should assume the reader will not see the material in the appendix unless prompted to view it in the main body of the report. The appendix should be neatly formatted and easy for the reader to navigate. It is not included in the 10-page limit.\n\n\n\n\n\nThis section includes an introduction to the project motivation, data, and research question. Describe the data and definitions of key variables. It should also include some exploratory data analysis. All of the EDA won’t fit in the paper, so focus on the EDA for the response variable and a few other interesting variables and relationships.\n\n\nThe research question and motivation are clearly stated in the introduction, including citations for the data source and any external research. The data are clearly described, including a description about how the data were originally collected and a concise definition of the variables relevant to understanding the report. The data cleaning process is clearly described, including any decisions made in the process (e.g., creating new variables, removing observations, etc.) The exploratory data analysis helps the reader better understand the observations in the data along with interesting and relevant relationships between the variables. It incorporates appropriate visualizations and summary statistics.\n\n\n\n\nThis section includes a brief description of your analysis process. Explain the reasoning for the types of analyses you do, exploratory, inferential, or modeling. If you’ve chosen to do inference, make sure to include a justification for why that inferential approach is appropriate. If you’ve chosen to do modeling, describe the model(s) you’re fitting, predictor variables considered for the model including any interactions. Additionally, show how you arrived at the final model by describing the model selection process, interactions considered, variable transformations (if needed), assessment of conditions and diagnostics, and any other relevant considerations that were part of the model fitting process.\n\n\nThe analysis steps are appropriate for the data and research question. The group used a thorough and careful approach to determine analyses types and addressed any concerns over appropriateness of analyses chosen.\n\n\n\n\nThis is where you will discuss your overall finding and describe the key results from your analysis. The goal is not to interpret every single element of an output shown, but instead to address the research questions, using the interpretations to support your conclusions. Focus on the variables that help you answer the research question and that provide relevant context for the reader.\n\n\nThe analysis results are clearly assesses and interesting findings from the analysis are described. Interpretations are used to to support the key findings and conclusions, rather than merely listing, e.g., the interpretation of every model coefficient.\n\n\n\n\nIn this section you’ll include a summary of what you have learned about your research question along with statistical arguments supporting your conclusions. In addition, discuss the limitations of your analysis and provide suggestions on ways the analysis could be improved. Any potential issues pertaining to the reliability and validity of your data and appropriateness of the statistical analysis should also be discussed here. Lastly, this section will include ideas for future work.\n\n\nOverall conclusions from analysis are clearly described, and the analysis results are put into the larger context of the subject matter and original research question. There is thoughtful consideration of potential limitations of the data and/or analysis, and ideas for future work are clearly described.\n\n\n\n\nThis is an assessment of the overall presentation and formatting of the written report.\n\n\nThe report neatly written and organized with clear section headers and appropriately sized figures with informative labels. Numerical results are displayed with a reasonable number of digits, and all visualizations are neatly formatted. All citations and links are properly formatted. If there is an appendix, it is reasonably organized and easy for the reader to find relevant information. All code, warnings, and messages are suppressed. The main body of the written report (not including the appendix) is no longer than 10 pages.\n\n\n\n\n\nThe write-up is worth 40 points, broken down as follows:\n\n\n\nTotal\n40 pts\n\n\n\n\nIntroduction/data\n6 pts\n\n\nMethodology\n10 pts\n\n\nResults\n14 pts\n\n\nDiscussion\n6 pts\n\n\nOrganization + formatting\n4 pts"
  },
  {
    "objectID": "project/4-writeup-presentation.html#expectations",
    "href": "project/4-writeup-presentation.html#expectations",
    "title": "Write-up and presentation",
    "section": "",
    "text": "Your written report must be completed in the index.qmd file and must be reproducible. All team members should contribute to the GitHub repository, with regular meaningful commits.\nBefore you finalize your write up, make sure the printing of code chunks is off with the option echo: false in the YAML.\nThe mandatory components of the report are below. You are free to add additional sections as necessary. The report, including visualizations, should be no more than 10 pages long (if it were to be printed). There is no minimum page requirement; however, you should comprehensively address all of the analysis in your report.\nTo check how many pages your report is, open it in your browser and go to File &gt; Print &gt; Save as PDF and review the number of pages.\nBe selective in what you include in your final write-up. The goal is to write a cohesive narrative that demonstrates a thorough and comprehensive analysis rather than explain every step of the analysis.\nYou are welcome to include an appendix with additional work at the end of the written report document; however, grading will largely be based on the content in the main body of the report. You should assume the reader will not see the material in the appendix unless prompted to view it in the main body of the report. The appendix should be neatly formatted and easy for the reader to navigate. It is not included in the 10-page limit."
  },
  {
    "objectID": "project/4-writeup-presentation.html#components",
    "href": "project/4-writeup-presentation.html#components",
    "title": "Write-up and presentation",
    "section": "",
    "text": "This section includes an introduction to the project motivation, data, and research question. Describe the data and definitions of key variables. It should also include some exploratory data analysis. All of the EDA won’t fit in the paper, so focus on the EDA for the response variable and a few other interesting variables and relationships.\n\n\nThe research question and motivation are clearly stated in the introduction, including citations for the data source and any external research. The data are clearly described, including a description about how the data were originally collected and a concise definition of the variables relevant to understanding the report. The data cleaning process is clearly described, including any decisions made in the process (e.g., creating new variables, removing observations, etc.) The exploratory data analysis helps the reader better understand the observations in the data along with interesting and relevant relationships between the variables. It incorporates appropriate visualizations and summary statistics.\n\n\n\n\nThis section includes a brief description of your analysis process. Explain the reasoning for the types of analyses you do, exploratory, inferential, or modeling. If you’ve chosen to do inference, make sure to include a justification for why that inferential approach is appropriate. If you’ve chosen to do modeling, describe the model(s) you’re fitting, predictor variables considered for the model including any interactions. Additionally, show how you arrived at the final model by describing the model selection process, interactions considered, variable transformations (if needed), assessment of conditions and diagnostics, and any other relevant considerations that were part of the model fitting process.\n\n\nThe analysis steps are appropriate for the data and research question. The group used a thorough and careful approach to determine analyses types and addressed any concerns over appropriateness of analyses chosen.\n\n\n\n\nThis is where you will discuss your overall finding and describe the key results from your analysis. The goal is not to interpret every single element of an output shown, but instead to address the research questions, using the interpretations to support your conclusions. Focus on the variables that help you answer the research question and that provide relevant context for the reader.\n\n\nThe analysis results are clearly assesses and interesting findings from the analysis are described. Interpretations are used to to support the key findings and conclusions, rather than merely listing, e.g., the interpretation of every model coefficient.\n\n\n\n\nIn this section you’ll include a summary of what you have learned about your research question along with statistical arguments supporting your conclusions. In addition, discuss the limitations of your analysis and provide suggestions on ways the analysis could be improved. Any potential issues pertaining to the reliability and validity of your data and appropriateness of the statistical analysis should also be discussed here. Lastly, this section will include ideas for future work.\n\n\nOverall conclusions from analysis are clearly described, and the analysis results are put into the larger context of the subject matter and original research question. There is thoughtful consideration of potential limitations of the data and/or analysis, and ideas for future work are clearly described.\n\n\n\n\nThis is an assessment of the overall presentation and formatting of the written report.\n\n\nThe report neatly written and organized with clear section headers and appropriately sized figures with informative labels. Numerical results are displayed with a reasonable number of digits, and all visualizations are neatly formatted. All citations and links are properly formatted. If there is an appendix, it is reasonably organized and easy for the reader to find relevant information. All code, warnings, and messages are suppressed. The main body of the written report (not including the appendix) is no longer than 10 pages."
  },
  {
    "objectID": "project/4-writeup-presentation.html#grading",
    "href": "project/4-writeup-presentation.html#grading",
    "title": "Write-up and presentation",
    "section": "",
    "text": "The write-up is worth 40 points, broken down as follows:\n\n\n\nTotal\n40 pts\n\n\n\n\nIntroduction/data\n6 pts\n\n\nMethodology\n10 pts\n\n\nResults\n14 pts\n\n\nDiscussion\n6 pts\n\n\nOrganization + formatting\n4 pts"
  },
  {
    "objectID": "project/4-writeup-presentation.html#slides",
    "href": "project/4-writeup-presentation.html#slides",
    "title": "Write-up and presentation",
    "section": "Slides",
    "text": "Slides\nIn addition to the written report, your team will also create presentation slides and deliver presentation that summarize and showcase your project. Introduce your research question and data set, showcase visualizations, and discuss the primary conclusions. These slides should serve as a brief visual addition to your written report and will be graded for content and quality.\nYou can create your slides with any software you like (Keynote, PowerPoint, Google Slides, etc.). We recommend choosing an option that’s easy to collaborate with, e.g., Google Slides. If you choose this option, save the slides as PDF and upload it to your repo as presentation.pdf.\nYou can also use Quarto to make your slides! While we won’t be covering making slides with Quarto in the class, we would be happy to help you with it in office hours. It’s no different than writing other documents with Quarto, so the learning curve will not be steep!\nThe slide deck should be roughly 6 content slides + 1 title slide. Here is a suggested outline as you think through the slides; you do not have to use this exact format for the 6 slides.\n\nTitle Slide\nSlide 1: Introduce the topic and motivation\nSlide 2: Introduce the data\nSlide 3: Highlights from EDA\nSlide 4-5: Inference/modeling/other analysis\nSlide 6: Conclusions + future work"
  },
  {
    "objectID": "project/4-writeup-presentation.html#presentation",
    "href": "project/4-writeup-presentation.html#presentation",
    "title": "Write-up and presentation",
    "section": "Presentation",
    "text": "Presentation\nPresentations will take place in class during the last lab of the semester. The presentation must be no longer than 5 minutes. You can choose to present live in class (recommended) or pre-record a video to be shown in class. Either way you must attend the lab session for the Q&A following your presentation.\nIf you choose to pre-record your presentation, you may use can use any platform that works best for your group to record your presentation. Below are a few resources on recording videos:\n\nRecording presentations in Zoom\nApple Quicktime for screen recording\nWindows 10 built-in screen recording functionality\nKap for screen recording\n\nOnce your video is ready, upload the video to Warpwire or another video platform (e.g., YouTube), then add a link to your video in your repo README.\nTo upload your video to Warpwire:\n\nClick the Warpwire tab in the course Canvas site.\nClick the “+” and select “Upload files”.\nLocate the video on your computer and click to upload.\nOnce you’ve uploaded the video to Warpwire, click to share the video and copy the video’s URL. You will need this when you post the video in the discussion forum."
  },
  {
    "objectID": "project/4-writeup-presentation.html#grading-1",
    "href": "project/4-writeup-presentation.html#grading-1",
    "title": "Write-up and presentation",
    "section": "Grading",
    "text": "Grading\nThe presentation is worth 25 points, broken down as follows:\n\n\n\nTotal\n25 pts\n\n\n\n\nSlides\n10 pts\n\n\nPresentation\n15 pts\n\n\n\n\nSlides\nAre the slides well organized, readable, not full of text, featuring figures with legible labels, legends, etc.?\n\n\nPresentation\n\nTime management: Did the team divide the time well amongst themselves or got cut off going over time?\nProfessionalism: How well did the team present? Does the presentation appear to be well practiced? Did everyone get a chance to say something meaningful about the project?\nTeamwork: Did the team present a unified story, or did it seem like independent pieces of work patched together?\nCreativity and critical thought: Is the project carefully thought out? Does it appear that time and effort went into the planning and implementation of the project?\nContent: Including, but not limited to the following:\n\nIs the question well articulated in the presentation?\nCan the question be answered with the data?\nDoes the analysis answer the question?\nAre the conclusion(s) made based on the analysis justifiable?\nAre the limitations carefully considered and articulated?"
  },
  {
    "objectID": "project/3-peer-review.html",
    "href": "project/3-peer-review.html",
    "title": "Peer review",
    "section": "",
    "text": "During the peer feedback process, you will be provided read-only access to your partner team’s GitHub repo. You will provide your feedback in the form of GitHub issues to your partner team’s GitHub repo."
  },
  {
    "objectID": "project/3-peer-review.html#part-1",
    "href": "project/3-peer-review.html#part-1",
    "title": "Peer review",
    "section": "Part 1",
    "text": "Part 1\nDuring the first ~30 minutes, make progress on your own project.\n\nReview the feedback from your TA.\nChoose the dataset you want to work with.\nMake progress on your analysis and write-up in index.qmd:\n\nAt a minimum, write a plan that peers can give feedback on.\nTime permitting, start the analysis.\n\nRender the project, commit and push all your changes.\n\n\n\n\n\n\n\nImportant\n\n\n\nMake sure you always render before you commit and push. If you don’t render first, you’re going to end up with merge conflicts that are difficult to resolve in auxiliary files created during the render process."
  },
  {
    "objectID": "project/3-peer-review.html#part-2",
    "href": "project/3-peer-review.html#part-2",
    "title": "Peer review",
    "section": "Part 2",
    "text": "Part 2\nReview one other team’s project. As a team you should spend ~30 minutes on each team’s project.\n\nFind the names of the teams whose projects you’re reviewing below. You should already have access to this team’s repo.\nEach team member should go to the repo of the team you’re reviewing.\nThen,\n\n1-2 team members clone the team’s project and renders it to check for reproducibility.\n1-2 team members open the team’s project in their browser and starts reading through the project draft.\n1 team member opens an issue on the team’s repo using the peer review template.\nAll team members discuss the project based on the prompts on the issue template and one team member records the feedback and submits the issue.\n\nTo open an issue in the repo you’re reviewing, click on New issue, and click on Get started for the Peer review issue. Fill out this issue, answering the following questions:\n\nPeer review by: [NAME OF TEAM DOING THE REVIEW]\nNames of team members that participated in this review: [FULL NAMES OF TEAM MEMBERS DOING THE REVIEW]\nDescribe the goal of the project.\nDescribe the data used or collected, if any. If the proposal does not include the use of a specific dataset, comment on whether the project would be strengthened by the inclusion of a dataset.\nDescribe the approaches, tools, and methods that will be used.\nProvide constructive feedback on how the team might be able to improve their project. Make sure your feedback includes at least one comment on the statistical reasoning aspect of the project, but do feel free to comment on aspects beyond the reasoning as well.\nWhat aspect of this project are you most interested in and would like to see highlighted in the presentation.\nWere you able to reproduce the project by clicking on Render Website once you cloned it? Were there any issues with reproducibility?\nProvide constructive feedback on any issues with file and/or code organization.\nWhat have you learned from this team’s project that you are considering implementing in your own project?\n(Optional) Any further comments or feedback?"
  },
  {
    "objectID": "project/new.html",
    "href": "project/new.html",
    "title": "Project Overview",
    "section": "",
    "text": "The goal of this project is for you to demonstrate proficiency in the material we have covered in this class (and beyond, if you like) and apply them to a ‘novel’ dataset of your choosing in a meaningful way. You are not asked to do an exhaustive data analysis by generating every statistic/visualizations that we have learned of in the course. Rather, I expect you to demonstrate skills in asking meaningful questions and answering them using carefully selected data analysis techniques and tools. These analyses must be done in R in a reproducible manner (quarto).\nMultiple data frames are available but your group will choose just one to use for this project. After choosing the data frame, your will need to brainstorm on several issues about the data such as the sample and sampling methods that might have been used to gather the data, a possible target population, variables and their types (numerical vs categorical), among others. Your team will then come up with a research topic/goal and two research questions (directly related to the topic) that you will answer by conducting the analyses. Your analyses should include data visualizations, numerical statistics, and regression models. All these must be appropriately linked to help tell a coherent story."
  },
  {
    "objectID": "project/new.html#project-proposal",
    "href": "project/new.html#project-proposal",
    "title": "Project Overview",
    "section": "Milestone 1 - Proposal",
    "text": "Milestone 1 - Proposal\nThere are two main purposes of the project proposal:\n\nTo help you think about the project early, so you can get a head start on finding data, reading relevant literature, thinking about the questions you wish to answer, etc.\nTo ensure that the data you wish to analyze, methods you plan to use, and the scope of your analysis are feasible and will allow you to be successful for this project.\n\nThe project proposal will be due roughly one week after the project is assigned. It must contain the following details:\n\nTeam members and their roles: List the names of all team members and their roles in the project. Roles can include Data cleaning/wrangling, Data analysis (performing the analyses in RStudio), Writing (e.g., abstract, intro, literature review, findings, conclusion), Proof reading and typo fixing, Team leader (e.g., setting up meetings, follow up, communicate with professor), etc.\nResearch topic and Questions: As indicated earlier, this is a short statement that describes the general area of interest that your research questions will be addressing. You should have at least two research questions that you will answer by conducting the analyses.\nData: Describe the data you will be using. This should include the source of the data, the number of observations and variables, and a brief description of the variables and their types (e.g., numerical, categorical). You should also include a brief description of the data collection process. Note that the data collection process may not be available for all data sets. In this case, you are allowed to speculate (reasonably) on the data collection process and be sure to mention that in your proposal.\nAnalysis plan: Describe the analyses you plan to conduct. This should include the types of visualizations you plan to create, the numerical summaries you plan to calculate, and the regression models you plan to fit. You should also describe how you plan to link these analyses together to tell a coherent story.\n\nInstructions and grading criteria for this milestone are outlined in the grading rubric for Milestone 1."
  },
  {
    "objectID": "project/new.html#milestone-2---first-draft",
    "href": "project/new.html#milestone-2---first-draft",
    "title": "Project Overview",
    "section": "Milestone 2 - First Draft",
    "text": "Milestone 2 - First Draft\nYour project draft is a completed project, that we shall use to obtain feedback from the professor and peers in class. The draft should include the following sections:\n\nAbstract: This section should provide a brief overview of the research topic, questions, data, and analyses you are conducting. It should also provide a brief overview of the results you have obtained. Think of the abstract as an executive summary of your work that someone can read and understand without reading the rest of the report. You should write the abstract last, after you have completed the rest of the report.\nIntroduction: This section should introduce the research topic and questions you are addressing. It should also provide a brief overview of the data you are using and the analyses you plan to conduct. Cite a few sources that are relevant to your research topic.\nLiterature Review: This section should provide a brief overview of the literature related to your research topic. You should cite at least 5 sources and synthesize their methods and findings in relation to your own research. Guidelines for writing an effective literature review can be found here.\nMethods: This section should describe the data you are using and the analyses you plan to conduct. It should include the following subsections:\n\nData Description: This section should describe the data you are using. This should include the source of the data, the number of observations and variables, and a brief description of the variables and their types (e.g., numerical, categorical). You should also include a brief description of the data collection process. Note that the data collection process may not be available for all data sets. In this case, you are allowed to speculate (reasonably) on the data collection process and be sure to mention that in your proposal.\nResearch Questions and Analyses: This section should list the research questions you are addressing. You should also describe the variables of interest in your data set that will help you answer these questions. Discuus the methids you plan to use for each question and why you think they are appropriate.\nData Cleaning: This section should describe the steps you took to clean the data. This may include removing missing values, transforming variables, etc. Depending on your data set, you may not need to do much data cleaning. If this is the case, you should still describe the steps you took to clean the data, even if they are minimal.\n\nData Analysis and Results: This is one of the most important heavily weighted parts of your project. The analyses should be sound and justified appropriately (under methods). Here, you just need to implement the analyses described under the methodology section of your paper. Your analyses should demonstrate a thorough understanding of statistical concepts learned in this course (and beyond, if you like). Your data analyses must include both numerical statistics and data visualizations. You must also use regression modelling (linear or logistic) techniques as part of your analyses. Interpretations of visualizations created as well as the models created must be made in a coherent manner and in the context of the research questions. These are the results/findings of your project.\nConclusion: This section should summarize the research questions you addressed, the data you used, the analyses you conducted, and the results you obtained. Findings of your study must be tied back to those reported in the literature review; for example, do your findings concur with previous studies or do they contradict them? It should also discuss the implications of your results and suggest directions for future research. Be sure to state any limitations of your study and what would be done differently if you were to do the study again.\nReferences: This section should list all the sources you cited in your report. Use APA format for your references.\n\nInstructions and grading criteria for this milestone are outlined in Milestone 2: Proposal."
  },
  {
    "objectID": "project/new.html#peer-review",
    "href": "project/new.html#peer-review",
    "title": "Project Overview",
    "section": "Milestone 3 - Peer review",
    "text": "Milestone 3 - Peer review\nCritically reviewing others’ work is a crucial part of the scientific process, and MATH 246 is no exception. Your team will be assigned at least one project from another team to review. Team members should read individually before meeting during which the team will come up with collective feedback for the other team. The peer review process will be double blinded, meaning that you will not know who is reviewing your project, and you will not know whose project you are reviewing. This feedback is intended to help you create a high quality final project, as well as give you experience reading and constructively critiquing the work of others.\nInstructions and grading criteria for this milestone are outlined in Milestone 3: Peer review."
  },
  {
    "objectID": "project/new.html#milestone-4---final-writeup",
    "href": "project/new.html#milestone-4---final-writeup",
    "title": "Project Overview",
    "section": "Milestone 4 - Final Writeup",
    "text": "Milestone 4 - Final Writeup\nThe final write-up is the culmination of your project. It should include all the sections of the first draft, but with revisions based on the feedback you received from your peers and the professor. The final write-up should be a polished document that clearly communicates your research topic, questions, data, analyses, and results. The final write-up should be written in a clear, concise, and professional manner. It should be free of grammatical errors and typos. The final write-up should also include a title page with the title of your project, the names of all team members, and the date. A quarto template for the final write-up will be provided.\nInstructions and grading criteria for this milestone are outlined in Milestone 4: Writeup + presentation."
  },
  {
    "objectID": "project/new.html#milestone-5---presentation",
    "href": "project/new.html#milestone-5---presentation",
    "title": "Project Overview",
    "section": "Milestone 5 - Presentation",
    "text": "Milestone 5 - Presentation\nThe final milestone is a presentation of your project. The presentation should be about 10 minutes long and should include slides that summarize the key points and findings of your project. The presentation should be clear, concise, and professional. The presentation will be graded on the clarity of the slides, the clarity of the presentation, and the ability to communicate your research topic, questions, data, analyses, and results to an audience. The presentation will be followed by a question and answer session with the professor and your peers."
  },
  {
    "objectID": "project/new.html#overall-grading",
    "href": "project/new.html#overall-grading",
    "title": "Project Overview",
    "section": "Overall grading",
    "text": "Overall grading\nThe overall grade breakdown by milestone (\\(M_i\\)) is as follows:\n\n\n\nTotal\n100 pts\n\n\n\n\nM1: Project Proposal\n10 pts\n\n\nM2: First Draft\n20 pts\n\n\nM3: Peer Review\n10 pts\n\n\nM4: Final Writeup\n40 pts\n\n\nM5: Slides + Presentation\n10 pts\n\n\nCollaboration & Teamwork\n10 pts"
  },
  {
    "objectID": "project/new.html#grading-milestone-details",
    "href": "project/new.html#grading-milestone-details",
    "title": "Project Overview",
    "section": "Grading Milestone details",
    "text": "Grading Milestone details\n\n\\(M_1\\) - Project Proposal\n\nCompletion (2pts) - Did the team complete all parts of the proposal as required?\nContent (2pts) - What is the quality of research and/or policy question and relevancy of data to those questions?\nCorrectness (2pts) - Are the statistical procedures sound and reasonable for the stated questions?\nCommunication & Writing (2pts) - What is the quality of the statistical presentation, writing, and explanations?\nCreativity and Critical Thought (2pts) - Is the project carefully thought out? Are the limitations carefully considered? Does it appear that time and effort went into the planning and implementation of the project?\n\n\n\n\\(M_2\\) - First Draft\n\nAbstract (2 pts) - Does the abstract provide a brief overview of the research topic, questions, data, and analyses you are conducting?\nIntroduction (2 pts) - Does the introduction articulate the research topic and questions you are addressing? Does it provide a brief overview of the data? Does it provide a couple of citations to help you make the case for your chosen topic of study?\nLiterature Review (3 pts) - Does the literature review provide relevant in-text citations? Does it examine and synthesize the sources in context of the current study?\nMethods (3 pts) - Does the methods section describe the sample, the data, and the analysis methods used? Does it justify the choice of analysis methods? Does it describe the data cleaning processes?\nData Analysis and Results (6 pts) - Are the analyses implemented correctly? Are the interpretations for both research questions done correctly and in context of the study? Do the analyses demonstrate a thorough understanding of statistical concepts learned in the course?\nConclusion (2 pts) - Does the conclusion summarize the research questions you addressed, the data you used, the analyses you conducted, and the results you obtained? Does it discuss the implications of your results and suggest directions for future research?\nReferences (2 pts) - Are all the sources you cited in your report listed in the references section? Are they in APA format?\n\n\n\n\\(M_3\\) - Peer Review\nPeer reviews will be graded on the extent to which it comprehensively and constructively addresses the components of the reviewee’s team’s report.\nOnly the team members participating in the review process are eligible for points for the peer review. Teams may choose to meet in-person or virtually. The team should submit a single review document that includes the following:\n\nQuality of feedback (3pts) - Did the team provide constructive and actionable feedback? Please note that actionable does not mean telling the reviewee team what to do, but rather providing feedback that the reviewee team can use to improve its work.\nCorrectness (2pts) - Are the critiques provided sound and reasonable?\nCommunication & Writing (2pts) - Is the feedback report understandable and free from grammatical errors and typos?\nCompletion (2pts) - Did the team complete the review as required?\n\n\n\n\\(M_4\\) - Final Writeup\nThe grading of the final writeup follows the same grading criteria as Milestone 2 but gets additional points. To get maximum points on milestone 4, you should address the feedback given to you on your project draft by your peers and/or professor. If there is any feedback that you think does not need to be addressed, please provide a justification for why you think so.\n\nAbstract (4 pts) - Does the abstract provide a brief overview of the research topic, questions, data, and analyses you are conducting?\nIntroduction (4 pts) - Does the introduction articulate the research topic and questions you are addressing? Does it provide a brief overview of the data? Does it provide a couple of citations to help you make the case for your chosen topic of study?\nLiterature Review (6 pts) - Does the literature review provide relevant in-text citations? Does it examine and synthesize the sources in context of the current study?\nMethods (6 pts) - Does the methods section describe the sample, the data, and the analysis methods used? Does it justify the choice of analysis methods? Does it describe the data cleaning processes?\nData Analysis and Results (14 pts) - Are the analyses implemented correctly? Are the interpretations for both research questions done correctly and in context of the study? Do the analyses demonstrate a thorough understanding of statistical concepts learned in the course?\nConclusion (4 pts) - Does the conclusion summarize the research questions you addressed, the data you used, the analyses you conducted, and the results you obtained? Does it discuss the implications of your results and suggest directions for future research?\nReferences (2 pts) - Are all the sources you cited in your report listed in the references section? Are they in APA format?\n\n\n\n\\(M_5\\) - Presentation\n\nSlides (3 pts) - Are the slides clear, well-organized, and concise? Do they summarize the key points and findings of the project?\nPresentation (4 pts) - Is the presentation clear and does it show a thorough understanding of the material learned? Are speakers audible enough and facing the audience? Are they engaging and do they maintain eye contact with the audience?\nQuestion and Answer (Q&A) (3 pts) - How well does the team answer questions about their project? Are they able to communicate their research topic, questions, data, analyses, and results to an audience?"
  },
  {
    "objectID": "project/new.html#submission",
    "href": "project/new.html#submission",
    "title": "Project Overview",
    "section": "Submission",
    "text": "Submission\nSubmissions for all milestones should be made through Canvas. You will see the assignments created in Canvas for each milestone with more detailed instructions."
  },
  {
    "objectID": "course-support.html",
    "href": "course-support.html",
    "title": "Course Support",
    "section": "",
    "text": "There are various resources available to help you succeed in this course and in college in general. Should you feel like you are struggling too much, please don’t hesitate to reach out to me so we can discuss possible ways forward. Below are some support services available to you.",
    "crumbs": [
      "Course information",
      "Support"
    ]
  },
  {
    "objectID": "course-support.html#open-hours",
    "href": "course-support.html#open-hours",
    "title": "Course Support",
    "section": "Open Hours",
    "text": "Open Hours\n\nI will be available during open hours (Mon 12.00 - 01.00 pm) to answer questions or concerns that you may have in the course. You can simply walk in during the stated time above. Even if you don’t have any question, you can just stop by to say hi. If the above posted times don’t work for you, please click this link to see more options. Open hours may be held in-person or virtually depending on your preference and the circumstances of the day. Below are the zoom link and passcode for virtual meetings:\nZoom Link: click here\nPasscode: 850 424",
    "crumbs": [
      "Course information",
      "Support"
    ]
  },
  {
    "objectID": "course-support.html#mathematics-support-center",
    "href": "course-support.html#mathematics-support-center",
    "title": "Course Support",
    "section": "Mathematics Support Center",
    "text": "Mathematics Support Center\nThe mathematics department is committed to the success of all students enrolled in mathematics courses. Free one-on-one support for your mathematics coursework is available during select daytime and evening hours Monday-Friday at the Mathematics Room (Williams Hall 209). The Mathematics Room is staffed by mathematics faculty and vetted students. Student tutors offer support to fellow students in courses numbered 200 and below while math faculty offer support in any of the math courses. For more information and the schedule, please visit the Math Support Center.",
    "crumbs": [
      "Course information",
      "Support"
    ]
  },
  {
    "objectID": "course-support.html#discussion-forums",
    "href": "course-support.html#discussion-forums",
    "title": "Course Support",
    "section": "Discussion Forums",
    "text": "Discussion Forums\nHave a question that can’t wait for office hours? Prefer to write out your question in detail rather than asking in person? The Canvas Discussion forums, might be the best venue for these! There is a chance another student has already asked a similar question, so please check the other posts on before asking a new question. If you know the answer to a question that is posted, I encourage you to respond! In Canvas discussion section, anybody is able to start threads and others can jump in with replies.",
    "crumbs": [
      "Course information",
      "Support"
    ]
  },
  {
    "objectID": "course-support.html#email",
    "href": "course-support.html#email",
    "title": "Course Support",
    "section": "Email",
    "text": "Email\nPlease refrain from emailing any course content questions (those should go to Canvas Discussion forums), and only use email for questions about personal matters that may not be appropriate for the public course forum (e.g., illness, accommodations, etc.). My email address is jgeteregechi@ithaca.edu.\nIf there is a question that’s not appropriate for the public forum, you are welcome to email me directly. If you email me, please include “MATH 246” in the subject line. Barring extenuating circumstances, I will respond to MATH 246 emails within 48 hours Monday - Friday. Response time may be slower for emails sent Friday evening - Sunday. If I take too long, please reach out again or talk to me before or after class as I may have missed your email.",
    "crumbs": [
      "Course information",
      "Support"
    ]
  },
  {
    "objectID": "course-support.html#tutoring-and-academic-enrichment-services",
    "href": "course-support.html#tutoring-and-academic-enrichment-services",
    "title": "Course Support",
    "section": "Tutoring and Academic Enrichment Services",
    "text": "Tutoring and Academic Enrichment Services\nAs a supplement to faculty advising and office hours, Tutoring and Academic Enrichment Services offers exceptional peer resources free of charge. Learning Coaches provide content-specific peer tutoring in a variety of courses. Peer Success Coaches mentor students who wish to develop collegiate-level academic and social engagement skills. To access these courses and for more information, please visit the Center for Student Success.",
    "crumbs": [
      "Course information",
      "Support"
    ]
  },
  {
    "objectID": "course-support.html#writing-center",
    "href": "course-support.html#writing-center",
    "title": "Course Support",
    "section": "Writing Center",
    "text": "Writing Center\nThe Writing Center aims to help students from all disciplines, backgrounds, and experiences to develop greater independence as writers. We are committed to helping students see writing as central to critical and creative thinking. The physical location in Smiddy 107 will not be open to clients. For more information and scheduling appointments please visit the writing center website.",
    "crumbs": [
      "Course information",
      "Support"
    ]
  },
  {
    "objectID": "course-support.html#mental-health-and-wellness",
    "href": "course-support.html#mental-health-and-wellness",
    "title": "Course Support",
    "section": "Mental health and wellness",
    "text": "Mental health and wellness\nIf your mental health concerns and/or stressful events negatively affect your daily emotional state, academic performance, or ability to participate in your daily activities, many resources are available to help you through difficult times. Please visit the Mental Health Services for more information. Ithaca College encourages all students to access these resources.",
    "crumbs": [
      "Course information",
      "Support"
    ]
  },
  {
    "objectID": "course-support.html#course-costs",
    "href": "course-support.html#course-costs",
    "title": "Course Support",
    "section": "Course costs",
    "text": "Course costs\n\nTextbooks: The textbooks for this course are open-source and freely available on the web.\nLaptops: Each student is expected to have a laptop they can bring to each lecture and lab.\nSoftware subscriptions:\n\nRStudio: RStudio cloud (posit cloud) is available for a $5 per month subscription for students. I may be able to have funds to sign up about 16 students this semester. The criteria is to have at least two group members with a full licence for the semester. Although the software has a free version, it allows only 25 hours of use per month. The positive side is that it does come with all the functionality that we will need for the course.\nGitHub: You will need to sign up for a free GitHub account. We will not use GitHub as much but you will need to sign up for a student developer pack to get access to GitHub copilot for free as a student. Be sure to use your Ithaca College email while signing up.\nGitHub Copilot: GitHub Copilot is free for students. You will need to sign up for the student developer pack before you sign up for a free GitHub copilot account.\n\nThe detailed instructions for signing up for GitHub copilot are available on this site",
    "crumbs": [
      "Course information",
      "Support"
    ]
  },
  {
    "objectID": "course-support.html#assistance-with-zoom-or-canvas",
    "href": "course-support.html#assistance-with-zoom-or-canvas",
    "title": "Course Support",
    "section": "Assistance with Zoom or Canvas",
    "text": "Assistance with Zoom or Canvas\nFor technical help with Canvas or Zoom, contact the Ithaca College IT support team at (607) 274-1000 or email them at servicedesk@ithaca.edu",
    "crumbs": [
      "Course information",
      "Support"
    ]
  },
  {
    "objectID": "problem-sets/ps-1.html",
    "href": "problem-sets/ps-1.html",
    "title": "Problem Set 1",
    "section": "",
    "text": "Please come back later!",
    "crumbs": [
      "Problem Sets",
      "Problem Set 1"
    ]
  },
  {
    "objectID": "problem-sets/ps-2.html",
    "href": "problem-sets/ps-2.html",
    "title": "Problem Set 2",
    "section": "",
    "text": "Please come back later!",
    "crumbs": [
      "Problem Sets",
      "Problem Set 2"
    ]
  }
]